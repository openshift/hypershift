---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: openshiftec2nodeclasses.karpenter.hypershift.openshift.io
spec:
  group: karpenter.hypershift.openshift.io
  names:
    kind: OpenshiftEC2NodeClass
    listKind: OpenshiftEC2NodeClassList
    plural: openshiftec2nodeclasses
    shortNames:
    - oec2nc
    - oec2ncs
    singular: openshiftec2nodeclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: OpenshiftEC2NodeClass defines the desired state of OpenshiftEC2NodeClass.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              OpenshiftEC2NodeClassSpec defines the desired state of ClusterSizingConfiguration
              This will contain configuration necessary to launch instances in AWS.
            properties:
              associatePublicIPAddress:
                description: AssociatePublicIPAddress controls if public IP addresses
                  are assigned to instances that are launched with the nodeclass.
                type: boolean
              blockDeviceMappings:
                description: BlockDeviceMappings to be applied to provisioned nodes.
                items:
                  properties:
                    deviceName:
                      description: The device name (for example, /dev/sdh or xvdh).
                      type: string
                    ebs:
                      description: EBS contains parameters used to automatically set
                        up EBS volumes when an instance is launched.
                      properties:
                        deleteOnTermination:
                          description: DeleteOnTermination indicates whether the EBS
                            volume is deleted on instance termination.
                          type: boolean
                        encrypted:
                          description: |-
                            Encrypted indicates whether the EBS volume is encrypted. Encrypted volumes can only
                            be attached to instances that support Amazon EBS encryption. If you are creating
                            a volume from a snapshot, you can't specify an encryption value.
                          type: boolean
                        iops:
                          description: |-
                            IOPS is the number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes,
                            this represents the number of IOPS that are provisioned for the volume. For
                            gp2 volumes, this represents the baseline performance of the volume and the
                            rate at which the volume accumulates I/O credits for bursting.

                            The following are the supported values for each volume type:

                               * gp3: 3,000-16,000 IOPS

                               * io1: 100-64,000 IOPS

                               * io2: 100-64,000 IOPS

                            For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built
                            on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).
                            Other instance families guarantee performance up to 32,000 IOPS.

                            This parameter is supported for io1, io2, and gp3 volumes only. This parameter
                            is not supported for gp2, st1, sc1, or standard volumes.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: KMSKeyID (ARN) of the symmetric Key Management
                            Service (KMS) CMK used for encryption.
                          type: string
                        snapshotID:
                          description: SnapshotID is the ID of an EBS snapshot
                          type: string
                        throughput:
                          description: |-
                            Throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.
                            Valid Range: Minimum value of 125. Maximum value of 1000.
                          format: int64
                          type: integer
                        volumeSize:
                          description: |-
                            VolumeSize in `Gi`, `G`, `Ti`, or `T`. You must specify either a snapshot ID or
                            a volume size. The following are the supported volumes sizes for each volume
                            type:

                               * gp2 and gp3: 1-16,384

                               * io1 and io2: 4-16,384

                               * st1 and sc1: 125-16,384

                               * standard: 1-1,024
                          pattern: ^((?:[1-9][0-9]{0,3}|[1-4][0-9]{4}|[5][0-8][0-9]{3}|59000)Gi|(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|[6][0-3][0-9]{3}|64000)G|([1-9]||[1-5][0-7]|58)Ti|([1-9]||[1-5][0-9]|6[0-3]|64)T)$
                          type: string
                        volumeType:
                          description: |-
                            VolumeType of the block device.
                            For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)
                            in the Amazon Elastic Compute Cloud User Guide.
                          enum:
                          - standard
                          - io1
                          - io2
                          - gp2
                          - sc1
                          - st1
                          - gp3
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: snapshotID or volumeSize must be defined
                        rule: has(self.snapshotID) || has(self.volumeSize)
                    rootVolume:
                      description: |-
                        RootVolume is a flag indicating if this device is mounted as kubelet root dir. You can
                        configure at most one root volume in BlockDeviceMappings.
                      type: boolean
                  type: object
                maxItems: 50
                type: array
                x-kubernetes-validations:
                - message: must have only one blockDeviceMappings with rootVolume
                  rule: self.filter(x, has(x.rootVolume)?x.rootVolume==true:false).size()
                    <= 1
              detailedMonitoring:
                description: DetailedMonitoring controls if detailed monitoring is
                  enabled for instances that are launched
                type: boolean
              instanceStorePolicy:
                description: InstanceStorePolicy specifies how to handle instance-store
                  disks.
                enum:
                - RAID0
                type: string
              securityGroupSelectorTerms:
                description: SecurityGroupSelectorTerms is a list of or security group
                  selector terms. The terms are ORed.
                items:
                  description: |-
                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.
                    If multiple fields are used for selection, the requirements are ANDed.
                  properties:
                    id:
                      description: ID is the security group id in EC2
                      pattern: sg-[0-9a-z]+
                      type: string
                    name:
                      description: |-
                        Name is the security group name in EC2.
                        This value is the name field, which is different from the name tag.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: |-
                        Tags is a map of key/value tags used to select subnets
                        Specifying '*' for a value selects all values for a given tag key.
                      maxProperties: 20
                      type: object
                      x-kubernetes-validations:
                      - message: empty tag keys or values aren't supported
                        rule: self.all(k, k != '' && self[k] != '')
                  type: object
                maxItems: 30
                type: array
                x-kubernetes-validations:
                - message: securityGroupSelectorTerms cannot be empty
                  rule: self.size() != 0
                - message: expected at least one, got none, ['tags', 'id', 'name']
                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))
                - message: '''id'' is mutually exclusive, cannot be set with a combination
                    of other fields in securityGroupSelectorTerms'
                  rule: '!self.all(x, has(x.id) && (has(x.tags) || has(x.name)))'
                - message: '''name'' is mutually exclusive, cannot be set with a combination
                    of other fields in securityGroupSelectorTerms'
                  rule: '!self.all(x, has(x.name) && (has(x.tags) || has(x.id)))'
              subnetSelectorTerms:
                description: SubnetSelectorTerms is a list of or subnet selector terms.
                  The terms are ORed.
                items:
                  description: |-
                    SubnetSelectorTerm defines selection logic for a subnet used by Karpenter to launch nodes.
                    If multiple fields are used for selection, the requirements are ANDed.
                  properties:
                    id:
                      description: ID is the subnet id in EC2
                      pattern: subnet-[0-9a-z]+
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: |-
                        Tags is a map of key/value tags used to select subnets
                        Specifying '*' for a value selects all values for a given tag key.
                      maxProperties: 20
                      type: object
                      x-kubernetes-validations:
                      - message: empty tag keys or values aren't supported
                        rule: self.all(k, k != '' && self[k] != '')
                  type: object
                maxItems: 30
                type: array
                x-kubernetes-validations:
                - message: subnetSelectorTerms cannot be empty
                  rule: self.size() != 0
                - message: expected at least one, got none, ['tags', 'id']
                  rule: self.all(x, has(x.tags) || has(x.id))
                - message: '''id'' is mutually exclusive, cannot be set with a combination
                    of other fields in subnetSelectorTerms'
                  rule: '!self.all(x, has(x.id) && has(x.tags))'
              tags:
                additionalProperties:
                  type: string
                description: Tags to be applied on ec2 resources like instances and
                  launch templates.
                type: object
                x-kubernetes-validations:
                - message: empty tag keys aren't supported
                  rule: self.all(k, k != '')
                - message: tag contains a restricted tag matching eks:eks-cluster-name
                  rule: self.all(k, k !='eks:eks-cluster-name')
                - message: tag contains a restricted tag matching kubernetes.io/cluster/
                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )
                - message: tag contains a restricted tag matching karpenter.sh/nodepool
                  rule: self.all(k, k != 'karpenter.sh/nodepool')
                - message: tag contains a restricted tag matching karpenter.sh/nodeclaim
                  rule: self.all(k, k !='karpenter.sh/nodeclaim')
                - message: tag contains a restricted tag matching karpenter.k8s.aws/ec2nodeclass
                  rule: self.all(k, k !='karpenter.k8s.aws/ec2nodeclass')
            type: object
          status:
            description: OpenshiftEC2NodeClassStatus defines the observed state of
              OpenshiftEC2NodeClass.
            properties:
              conditions:
                description: Conditions contain signals for health and readiness.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              securityGroups:
                description: |-
                  SecurityGroups contains the current Security Groups values that are available to the
                  cluster under the SecurityGroups selectors.
                items:
                  description: SecurityGroup contains resolved SecurityGroup selector
                    values utilized for node launch
                  properties:
                    id:
                      description: ID of the security group
                      type: string
                    name:
                      description: Name of the security group
                      type: string
                  required:
                  - id
                  type: object
                type: array
              subnets:
                description: |-
                  Subnets contains the current Subnet values that are available to the
                  cluster under the subnet selectors.
                items:
                  description: Subnet contains resolved Subnet selector values utilized
                    for node launch
                  properties:
                    id:
                      description: ID of the subnet
                      type: string
                    zone:
                      description: The associated availability zone
                      type: string
                    zoneID:
                      description: The associated availability zone ID
                      type: string
                  required:
                  - id
                  - zone
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
