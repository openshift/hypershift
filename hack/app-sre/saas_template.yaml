apiVersion: v1
kind: Template
metadata:
  name: hypershift-operator-template
objects:
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift control plane pods
    not critical to serving the API.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-control-plane
  value: 100000000
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift etcd pods.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-etcd
  value: 100002000
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift control plane pods
    critical to serving the API.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-api-critical
  value: 100001000
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: null
    name: ${NAMESPACE}
  spec: {}
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: hypershift-operator
  rules:
  - apiGroups:
    - hypershift.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - config.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - '*'
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - '*'
  - apiGroups:
    - bootstrap.cluster.x-k8s.io
    - controlplane.cluster.x-k8s.io
    - infrastructure.cluster.x-k8s.io
    - machines.cluster.x-k8s.io
    - exp.infrastructure.cluster.x-k8s.io
    - addons.cluster.x-k8s.io
    - exp.cluster.x-k8s.io
    - cluster.x-k8s.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - operator.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - route.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - '*'
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - events
    - configmaps
    - pods
    - pods/log
    - secrets
    - nodes
    - namespaces
    - serviceaccounts
    - services
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - '*'
  - apiGroups:
    - etcd.database.coreos.com
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - machine.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - podmonitors
    verbs:
    - get
    - list
    - watch
    - create
    - update
  - apiGroups:
    - capi-provider.agent-install.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-operator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: hypershift-operator
  subjects:
  - kind: ServiceAccount
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    name: hypershift-operator
    namespace: ${NAMESPACE}
  rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-operator
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: hypershift-operator
  subjects:
  - kind: ServiceAccount
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
  spec:
    replicas: ${{OPERATOR_REPLICAS}}
    selector:
      matchLabels:
        name: operator
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: operator
          hypershift.openshift.io/operator-component: operator
          name: operator
      spec:
        containers:
        - args:
          - run
          - --namespace=$(MY_NAMESPACE)
          - --deployment-name=operator
          - --metrics-addr=:9000
          - --enable-ocp-cluster-monitoring=false
          - --enable-ci-debug-output=false
          - --private-platform=None
          - --oidc-storage-provider-s3-bucket-name=${OIDC_S3_NAME}
          - --oidc-storage-provider-s3-region=${OIDC_S3_REGION}
          - --oidc-storage-provider-s3-credentials=/etc/oidc-storage-provider-s3-creds/${OIDC_S3_CREDS_SECRET_KEY}
          command:
          - /usr/bin/hypershift-operator
          env:
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ${OPERATOR_IMG}:${IMAGE_TAG}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: operator
          ports:
          - containerPort: 9000
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsUser: 1000
          volumeMounts:
          - mountPath: /etc/oidc-storage-provider-s3-creds
            name: oidc-storage-provider-s3-creds
        serviceAccountName: operator
        volumes:
        - name: oidc-storage-provider-s3-creds
          secret:
            secretName: ${OIDC_S3_CREDS_SECRET}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: operator
    name: operator
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: metrics
      port: 9393
      protocol: TCP
      targetPort: metrics
    selector:
      name: operator
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    name: prometheus
    namespace: ${NAMESPACE}
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: prometheus
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus
  subjects:
  - kind: ServiceAccount
    name: prometheus-user-workload
    namespace: openshift-user-workload-monitoring
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
  spec:
    endpoints:
    - bearerTokenSecret:
        key: ""
      interval: 30s
      port: metrics
    jobLabel: component
    namespaceSelector: {}
    selector:
      matchLabels:
        name: operator
- apiVersion: monitoring.coreos.com/v1
  kind: PrometheusRule
  metadata:
    creationTimestamp: null
    name: metrics
    namespace: ${NAMESPACE}
  spec:
    groups:
    - interval: 30s
      name: hypershift.rules
      rules:
      - expr: sum by (app, namespace, code, method) ( sum(rest_client_requests_total)
          by (pod, namespace, code, method) * on (pod) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_api_requests_total
      - expr: sum by (app, namespace) ( sum(container_memory_usage_bytes{container!="POD",container!=""})
          by (pod, namespace) * on (pod) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_memory_usage
      - expr: avg by (app, namespace) ( sum( rate( container_cpu_usage_seconds_total{container_name!="POD",container!=""}[1m]
          ) ) by (pod, namespace) * on (pod) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") ) / count by (app, namespace) ( sum( rate(
          container_cpu_usage_seconds_total{container_name!="POD",container!=""}[1m]
          ) ) by (pod, namespace) * on (pod) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_cpu_usage_seconds
      - expr: sum by (app, namespace, code, method) ( sum(rest_client_requests_total)
          by (pod, namespace, code, method) * on (pod) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_operator_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:operator:component_api_requests_total
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: clusterresourcesetbindings.addons.cluster.x-k8s.io
  spec:
    group: addons.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterResourceSetBinding
      listKind: ClusterResourceSetBindingList
      plural: clusterresourcesetbindings
      singular: clusterresourcesetbinding
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterResourceSetBinding
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterResourceSetBinding lists all matching ClusterResourceSets
            with the cluster it belongs to.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterResourceSetBindingSpec defines the desired state
                of ClusterResourceSetBinding.
              properties:
                bindings:
                  description: Bindings is a list of ClusterResourceSets and their
                    resources.
                  items:
                    description: ResourceSetBinding keeps info on all of the resources
                      in a ClusterResourceSet.
                    properties:
                      clusterResourceSetName:
                        description: ClusterResourceSetName is the name of the ClusterResourceSet
                          that is applied to the owner cluster of the binding.
                        type: string
                      resources:
                        description: Resources is a list of resources that the ClusterResourceSet
                          has.
                        items:
                          description: ResourceBinding shows the status of a resource
                            that belongs to a ClusterResourceSet matched by the owner
                            cluster of the ClusterResourceSetBinding object.
                          properties:
                            applied:
                              description: Applied is to track if a resource is applied
                                to the cluster or not.
                              type: boolean
                            hash:
                              description: Hash is the hash of a resource's data.
                                This can be used to decide if a resource is changed.
                                For "ApplyOnce" ClusterResourceSet.spec.strategy,
                                this is no-op as that strategy does not act on change.
                              type: string
                            kind:
                              description: 'Kind of the resource. Supported kinds
                                are: Secrets and ConfigMaps.'
                              enum:
                              - Secret
                              - ConfigMap
                              type: string
                            lastAppliedTime:
                              description: LastAppliedTime identifies when this resource
                                was last applied to the cluster.
                              format: date-time
                              type: string
                            name:
                              description: Name of the resource that is in the same
                                namespace with ClusterResourceSet object.
                              minLength: 1
                              type: string
                          required:
                          - applied
                          - kind
                          - name
                          type: object
                        type: array
                    required:
                    - clusterResourceSetName
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: clusterresourcesets.addons.cluster.x-k8s.io
  spec:
    group: addons.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterResourceSet
      listKind: ClusterResourceSetList
      plural: clusterresourcesets
      singular: clusterresourceset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterResourceSet
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterResourceSet is the Schema for the clusterresourcesets
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterResourceSetSpec defines the desired state of ClusterResourceSet.
              properties:
                clusterSelector:
                  description: Label selector for Clusters. The Clusters that are
                    selected by this will be the ones affected by this ClusterResourceSet.
                    It must match the Cluster labels. This field is immutable. Label
                    selector cannot be empty.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                resources:
                  description: Resources is a list of Secrets/ConfigMaps where each
                    contains 1 or more resources to be applied to remote clusters.
                  items:
                    description: ResourceRef specifies a resource.
                    properties:
                      kind:
                        description: 'Kind of the resource. Supported kinds are: Secrets
                          and ConfigMaps.'
                        enum:
                        - Secret
                        - ConfigMap
                        type: string
                      name:
                        description: Name of the resource that is in the same namespace
                          with ClusterResourceSet object.
                        minLength: 1
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                strategy:
                  description: Strategy is the strategy to be used during applying
                    resources. Defaults to ApplyOnce. This field is immutable.
                  enum:
                  - ApplyOnce
                  type: string
              required:
              - clusterSelector
              type: object
            status:
              description: ClusterResourceSetStatus defines the observed state of
                ClusterResourceSet.
              properties:
                conditions:
                  description: Conditions defines current state of the ClusterResourceSet.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed ClusterResourceSet.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: clusterclasses.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterClass
      listKind: ClusterClassList
      plural: clusterclasses
      shortNames:
      - cc
      singular: clusterclass
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterClass
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterClass is a template which can be used to create managed
            topologies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterClassSpec describes the desired state of the ClusterClass.
              properties:
                controlPlane:
                  description: ControlPlane is a reference to a local struct that
                    holds the details for provisioning the Control Plane for the Cluster.
                  properties:
                    machineInfrastructure:
                      description: "MachineTemplate defines the metadata and infrastructure
                        information for control plane machines. \n This field is supported
                        if and only if the control plane provider template referenced
                        above is Machine based and supports setting replicas."
                      properties:
                        ref:
                          description: Ref is a required reference to a custom resource
                            offered by a provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                      required:
                      - ref
                      type: object
                    metadata:
                      description: "Metadata is the metadata applied to the machines
                        of the ControlPlane. At runtime this metadata is merged with
                        the corresponding metadata from the topology. \n This field
                        is supported if and only if the control plane provider template
                        referenced is Machine based."
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    ref:
                      description: Ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  required:
                  - ref
                  type: object
                infrastructure:
                  description: Infrastructure is a reference to a provider-specific
                    template that holds the details for provisioning infrastructure
                    specific cluster for the underlying provider. The underlying provider
                    is responsible for the implementation of the template to an infrastructure
                    cluster.
                  properties:
                    ref:
                      description: Ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  required:
                  - ref
                  type: object
                workers:
                  description: Workers describes the worker nodes for the cluster.
                    It is a collection of node types which can be used to create the
                    worker nodes of the cluster.
                  properties:
                    machineDeployments:
                      description: MachineDeployments is a list of machine deployment
                        classes that can be used to create a set of worker nodes.
                      items:
                        description: MachineDeploymentClass serves as a template to
                          define a set of worker nodes of the cluster provisioned
                          using the `ClusterClass`.
                        properties:
                          class:
                            description: Class denotes a type of worker node present
                              in the cluster, this name MUST be unique within a ClusterClass
                              and can be referenced in the Cluster to create a managed
                              MachineDeployment.
                            type: string
                          template:
                            description: Template is a local struct containing a collection
                              of templates for creation of MachineDeployment objects
                              representing a set of worker nodes.
                            properties:
                              bootstrap:
                                description: Bootstrap contains the bootstrap template
                                  reference to be used for the creation of worker
                                  Machines.
                                properties:
                                  ref:
                                    description: Ref is a required reference to a
                                      custom resource offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                required:
                                - ref
                                type: object
                              infrastructure:
                                description: Infrastructure contains the infrastructure
                                  template reference to be used for the creation of
                                  worker Machines.
                                properties:
                                  ref:
                                    description: Ref is a required reference to a
                                      custom resource offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                required:
                                - ref
                                type: object
                              metadata:
                                description: Metadata is the metadata applied to the
                                  machines of the MachineDeployment. At runtime this
                                  metadata is merged with the corresponding metadata
                                  from the topology.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'Annotations is an unstructured key
                                      value map stored with a resource that may be
                                      set by external tools to store and retrieve
                                      arbitrary metadata. They are not queryable and
                                      should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations'
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of string keys and values that
                                      can be used to organize and categorize (scope
                                      and select) objects. May match selectors of
                                      replication controllers and services. More info:
                                      http://kubernetes.io/docs/user-guide/labels'
                                    type: object
                                type: object
                            required:
                            - bootstrap
                            - infrastructure
                            type: object
                        required:
                        - class
                        - template
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: clusters.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Cluster
      listKind: ClusterList
      plural: clusters
      shortNames:
      - cl
      singular: cluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of Cluster
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this Cluster
        jsonPath: .spec.topology.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster.
              properties:
                clusterNetwork:
                  description: Cluster network configuration.
                  properties:
                    apiServerPort:
                      description: APIServerPort specifies the port the API Server
                        should bind to. Defaults to 6443.
                      format: int32
                      type: integer
                    pods:
                      description: The network ranges from which Pod networks are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                    serviceDomain:
                      description: Domain name for services.
                      type: string
                    services:
                      description: The network ranges from which service VIPs are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneRef:
                  description: ControlPlaneRef is an optional reference to a provider-specific
                    resource that holds the details for provisioning the Control Plane
                    for a Cluster.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                infrastructureRef:
                  description: InfrastructureRef is a reference to a provider-specific
                    resource that holds the details for provisioning infrastructure
                    for a cluster in said provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                paused:
                  description: Paused can be used to prevent controllers from processing
                    the Cluster and all its associated objects.
                  type: boolean
                topology:
                  description: 'This encapsulates the topology for the cluster. NOTE:
                    It is required to enable the ClusterTopology feature gate flag
                    to activate managed topologies support; this feature is highly
                    experimental, and parts of it might still be not implemented.'
                  properties:
                    class:
                      description: The name of the ClusterClass object to create the
                        topology.
                      type: string
                    controlPlane:
                      description: ControlPlane describes the cluster control plane.
                      properties:
                        metadata:
                          description: "Metadata is the metadata applied to the machines
                            of the ControlPlane. At runtime this metadata is merged
                            with the corresponding metadata from the ClusterClass.
                            \n This field is supported if and only if the control
                            plane provider template referenced in the ClusterClass
                            is Machine based."
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                          type: object
                        replicas:
                          description: Replicas is the number of control plane nodes.
                            If the value is nil, the ControlPlane object is created
                            without the number of Replicas and it's assumed that the
                            control plane controller does not implement support for
                            this field. When specified against a control plane provider
                            that lacks support for this field, this value will be
                            ignored.
                          format: int32
                          type: integer
                      type: object
                    rolloutAfter:
                      description: RolloutAfter performs a rollout of the entire cluster
                        one component at a time, control plane first and then machine
                        deployments.
                      format: date-time
                      type: string
                    version:
                      description: The Kubernetes version of the cluster.
                      type: string
                    workers:
                      description: Workers encapsulates the different constructs that
                        form the worker nodes for the cluster.
                      properties:
                        machineDeployments:
                          description: MachineDeployments is a list of machine deployments
                            in the cluster.
                          items:
                            description: MachineDeploymentTopology specifies the different
                              parameters for a set of worker nodes in the topology.
                              This set of nodes is managed by a MachineDeployment
                              object whose lifecycle is managed by the Cluster controller.
                            properties:
                              class:
                                description: Class is the name of the MachineDeploymentClass
                                  used to create the set of worker nodes. This should
                                  match one of the deployment classes defined in the
                                  ClusterClass object mentioned in the `Cluster.Spec.Class`
                                  field.
                                type: string
                              metadata:
                                description: Metadata is the metadata applied to the
                                  machines of the MachineDeployment. At runtime this
                                  metadata is merged with the corresponding metadata
                                  from the ClusterClass.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'Annotations is an unstructured key
                                      value map stored with a resource that may be
                                      set by external tools to store and retrieve
                                      arbitrary metadata. They are not queryable and
                                      should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations'
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of string keys and values that
                                      can be used to organize and categorize (scope
                                      and select) objects. May match selectors of
                                      replication controllers and services. More info:
                                      http://kubernetes.io/docs/user-guide/labels'
                                    type: object
                                type: object
                              name:
                                description: Name is the unique identifier for this
                                  MachineDeploymentTopology. The value is used with
                                  other unique identifiers to create a MachineDeployment's
                                  Name (e.g. cluster's name, etc). In case the name
                                  is greater than the allowed maximum length, the
                                  values are hashed together.
                                type: string
                              replicas:
                                description: Replicas is the number of worker nodes
                                  belonging to this set. If the value is nil, the
                                  MachineDeployment is created without the number
                                  of Replicas (defaulting to zero) and it's assumed
                                  that an external entity (like cluster autoscaler)
                                  is responsible for the management of this value.
                                format: int32
                                type: integer
                            required:
                            - class
                            - name
                            type: object
                          type: array
                      type: object
                  required:
                  - class
                  - version
                  type: object
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the cluster.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneReady:
                  description: ControlPlaneReady defines if the control plane is ready.
                  type: boolean
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of failure domain objects
                    synced from the infrastructure provider.
                  type: object
                failureMessage:
                  description: FailureMessage indicates that there is a fatal problem
                    reconciling the state, and will be set to a descriptive error
                    message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a fatal problem
                    reconciling the state, and will be set to a token value suitable
                    for programmatic interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: machinedeployments.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineDeployment
      listKind: MachineDeploymentList
      plural: machinedeployments
      shortNames:
      - md
      singular: machinedeployment
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Total number of non-terminated machines targeted by this MachineDeployment
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of ready machines targeted by this MachineDeployment
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      - description: Total number of non-terminated machines targeted by this deployment
          that have the desired template spec
        jsonPath: .status.updatedReplicas
        name: Updated
        type: integer
      - description: Total number of unavailable machines targeted by this MachineDeployment
        jsonPath: .status.unavailableReplicas
        name: Unavailable
        type: integer
      - description: MachineDeployment status such as ScalingUp/ScalingDown/Running/Failed/Unknown
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of MachineDeployment
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachineDeployment
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineDeployment is the Schema for the machinedeployments
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineDeploymentSpec defines the desired state of MachineDeployment.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine should be ready. Defaults to 0 (machine will be considered
                    available as soon as it is ready)
                  format: int32
                  type: integer
                paused:
                  description: Indicates that the deployment is paused.
                  type: boolean
                progressDeadlineSeconds:
                  description: The maximum time in seconds for a deployment to make
                    progress before it is considered to be failed. The deployment
                    controller will continue to process failed deployments and a condition
                    with a ProgressDeadlineExceeded reason will be surfaced in the
                    deployment status. Note that progress will not be estimated during
                    the time a deployment is paused. Defaults to 600s.
                  format: int32
                  type: integer
                replicas:
                  default: 1
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: The number of old MachineSets to retain to allow rollback.
                    This is a pointer to distinguish between explicit zero and not
                    specified. Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: Label selector for machines. Existing MachineSets whose
                    machines are selected by this will be the ones affected by this
                    deployment. It must match the machine template's labels.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                strategy:
                  description: The deployment strategy to use to replace existing
                    machines with new ones.
                  properties:
                    rollingUpdate:
                      description: Rolling update config params. Present only if MachineDeploymentStrategyType
                        = RollingUpdate.
                      properties:
                        deletePolicy:
                          description: DeletePolicy defines the policy used by the
                            MachineDeployment to identify nodes to delete when downscaling.
                            Valid values are "Random, "Newest", "Oldest" When no value
                            is supplied, the default DeletePolicy of MachineSet is
                            used
                          enum:
                          - Random
                          - Newest
                          - Oldest
                          type: string
                        maxSurge:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            scheduled above the desired number of machines. Value
                            can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%). This can not be 0 if MaxUnavailable
                            is 0. Absolute number is calculated from percentage by
                            rounding up. Defaults to 1. Example: when this is set
                            to 30%, the new MachineSet can be scaled up immediately
                            when the rolling update starts, such that the total number
                            of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet
                            can be scaled up further, ensuring that total number of
                            machines running at any time during the update is at most
                            130% of desired machines.'
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            unavailable during the update. Value can be an absolute
                            number (ex: 5) or a percentage of desired machines (ex:
                            10%). Absolute number is calculated from percentage by
                            rounding down. This can not be 0 if MaxSurge is 0. Defaults
                            to 0. Example: when this is set to 30%, the old MachineSet
                            can be scaled down to 70% of desired machines immediately
                            when the rolling update starts. Once new machines are
                            ready, old MachineSet can be scaled down further, followed
                            by scaling up the new MachineSet, ensuring that the total
                            number of machines available at all times during the update
                            is at least 70% of desired machines.'
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: Type of deployment. Default is RollingUpdate.
                      enum:
                      - RollingUpdate
                      - OnDelete
                      type: string
                  type: object
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              - template
              type: object
            status:
              description: MachineDeploymentStatus defines the observed state of MachineDeployment.
              properties:
                availableReplicas:
                  description: Total number of available machines (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                conditions:
                  description: Conditions defines current service state of the MachineDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of a MachineDeployment
                    (ScalingUp, ScalingDown, Running, Failed, or Unknown).
                  type: string
                readyReplicas:
                  description: Total number of ready machines targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
                unavailableReplicas:
                  description: Total number of unavailable machines targeted by this
                    deployment. This is the total number of machines that are still
                    required for the deployment to have 100% available capacity. They
                    may either be machines that are running but not yet available
                    or machines that still have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: machinehealthchecks.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineHealthCheck
      listKind: MachineHealthCheckList
      plural: machinehealthchecks
      shortNames:
      - mhc
      - mhcs
      singular: machinehealthcheck
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Number of machines currently monitored
        jsonPath: .status.expectedMachines
        name: ExpectedMachines
        type: integer
      - description: Maximum number of unhealthy machines allowed
        jsonPath: .spec.maxUnhealthy
        name: MaxUnhealthy
        type: string
      - description: Current observed healthy machines
        jsonPath: .status.currentHealthy
        name: CurrentHealthy
        type: integer
      - description: Time duration since creation of MachineHealthCheck
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineHealthCheck is the Schema for the machinehealthchecks
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of machine health check policy
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                maxUnhealthy:
                  anyOf:
                  - type: integer
                  - type: string
                  description: Any further remediation is only allowed if at most
                    "MaxUnhealthy" machines selected by "selector" are not healthy.
                  x-kubernetes-int-or-string: true
                nodeStartupTimeout:
                  description: Machines older than this duration without a node will
                    be considered to have failed and will be remediated. If not set,
                    this value is defaulted to 10 minutes. If you wish to disable
                    this feature, set the value explicitly to 0.
                  type: string
                remediationTemplate:
                  description: "RemediationTemplate is a reference to a remediation
                    template provided by an infrastructure provider. \n This field
                    is completely optional, when filled, the MachineHealthCheck controller
                    creates a new object from the template referenced and hands off
                    remediation of the machine to a controller that lives outside
                    of Cluster API."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                selector:
                  description: Label selector to match machines whose health will
                    be exercised
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                unhealthyConditions:
                  description: UnhealthyConditions contains a list of the conditions
                    that determine whether a node is considered unhealthy.  The conditions
                    are combined in a logical OR, i.e. if any of the conditions is
                    met, the node is unhealthy.
                  items:
                    description: UnhealthyCondition represents a Node condition type
                      and value with a timeout specified as a duration.  When the
                      named condition has been in the given status for at least the
                      timeout value, a node is considered unhealthy.
                    properties:
                      status:
                        minLength: 1
                        type: string
                      timeout:
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                    - status
                    - timeout
                    - type
                    type: object
                  minItems: 1
                  type: array
                unhealthyRange:
                  description: 'Any further remediation is only allowed if the number
                    of machines selected by "selector" as not healthy is within the
                    range of "UnhealthyRange". Takes precedence over MaxUnhealthy.
                    Eg. "[3-5]" - This means that remediation will be allowed only
                    when: (a) there are at least 3 unhealthy machines (and) (b) there
                    are at most 5 unhealthy machines'
                  pattern: ^\[[0-9]+-[0-9]+\]$
                  type: string
              required:
              - clusterName
              - selector
              - unhealthyConditions
              type: object
            status:
              description: Most recently observed status of MachineHealthCheck resource
              properties:
                conditions:
                  description: Conditions defines current service state of the MachineHealthCheck.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                currentHealthy:
                  description: total number of healthy machines counted by this machine
                    health check
                  format: int32
                  minimum: 0
                  type: integer
                expectedMachines:
                  description: total number of machines counted by this machine health
                    check
                  format: int32
                  minimum: 0
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                remediationsAllowed:
                  description: RemediationsAllowed is the number of further remediations
                    allowed by this machine health check before maxUnhealthy short
                    circuiting will be applied
                  format: int32
                  minimum: 0
                  type: integer
                targets:
                  description: Targets shows the current list of machines the machine
                    health check is watching
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: machinepools.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachinePool
      listKind: MachinePoolList
      plural: machinepools
      shortNames:
      - mp
      singular: machinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: MachinePool replicas count
        jsonPath: .status.replicas
        name: Replicas
        type: string
      - description: MachinePool status such as Terminating/Pending/Provisioning/Running/Failed
          etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of MachinePool
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachinePool
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachinePool is the Schema for the machinepools API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachinePoolSpec defines the desired state of MachinePool.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                failureDomains:
                  description: FailureDomains is the list of failure domains this
                    MachinePool should be attached to.
                  items:
                    type: string
                  type: array
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine instances should be ready. Defaults to 0 (machine instance
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                replicas:
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - template
              type: object
            status:
              description: MachinePoolStatus defines the observed state of MachinePool.
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachinePool.
                  format: int32
                  type: integer
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                conditions:
                  description: Conditions define the current service state of the
                    MachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: FailureMessage indicates that there is a problem reconciling
                    the state, and will be set to a descriptive error message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a problem reconciling
                    the state, and will be set to a token value suitable for programmatic
                    interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                nodeRefs:
                  description: NodeRefs will point to the corresponding Nodes if it
                    they exist.
                  items:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs.  1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage.  2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular     restrictions
                      like, "must refer only to types A and B" or "UID not honored"
                      or "name must be restricted".     Those cannot be well described
                      when embedded.  3. Inconsistent validation.  Because the usages
                      are different, the validation rules are different by usage,
                      which makes it hard for users to predict what will happen.  4.
                      The fields are both imprecise and overly precise.  Kind is not
                      a precise mapping to a URL. This can produce ambiguity     during
                      interpretation and require a REST mapping.  In most cases, the
                      dependency is on the group,resource tuple     and the version
                      of the actual struct is irrelevant.  5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type     will affect numerous schemas.  Don''t make
                      new APIs embed an underspecified API type they do not control.
                      Instead of using this type, create a locally provided and used
                      type that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
                readyReplicas:
                  description: The number of ready replicas for this MachinePool.
                    A machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable machine instances targeted
                    by this machine pool. This is the total number of machine instances
                    that are still required for the machine pool to have 100% available
                    capacity. They may either be machine instances that are running
                    but not yet available or machine instances that still have not
                    been created.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: machines.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Machine
      listKind: MachineList
      plural: machines
      shortNames:
      - ma
      singular: machine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Node name associated with this machine
        jsonPath: .status.nodeRef.name
        name: NodeName
        type: string
      - description: Provider ID
        jsonPath: .spec.providerID
        name: ProviderID
        type: string
      - description: Machine status such as Terminating/Pending/Running/Failed etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of Machine
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this Machine
        jsonPath: .spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Machine is the Schema for the machines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSpec defines the desired state of Machine.
              properties:
                bootstrap:
                  description: Bootstrap is a reference to a local struct which encapsulates
                    fields to configure the Machine’s bootstrapping mechanism.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a bootstrap provider-specific
                        resource that holds configuration details. The reference is
                        optional to allow users/operators to specify Bootstrap.DataSecretName
                        without the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores
                        the bootstrap data script. If nil, the Machine should remain
                        in the Pending state.
                      type: string
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                failureDomain:
                  description: FailureDomain is the failure domain the machine will
                    be created in. Must match a key in the FailureDomains map stored
                    on the cluster object.
                  type: string
                infrastructureRef:
                  description: InfrastructureRef is a required reference to a custom
                    resource offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                nodeDrainTimeout:
                  description: 'NodeDrainTimeout is the total amount of time that
                    the controller will spend on draining a node. The default value
                    is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`'
                  type: string
                providerID:
                  description: ProviderID is the identification ID of the machine
                    provided by the provider. This field must match the provider ID
                    as seen on the node object corresponding to this machine. This
                    field is required by higher level consumers of cluster-api. Example
                    use case is cluster autoscaler with cluster-api as provider. Clean-up
                    logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes
                    nodes. With cluster-api as a generic out-of-tree provider for
                    autoscaler, this field is required by autoscaler to be able to
                    have a provider view of the list of machines. Another list of
                    nodes is queried from the k8s apiserver and then a comparison
                    is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher
                    level entities like autoscaler that will be interfacing with cluster-api
                    as generic provider.
                  type: string
                version:
                  description: Version defines the desired Kubernetes version. This
                    field is meant to be optionally used by bootstrap providers.
                  type: string
              required:
              - bootstrap
              - clusterName
              - infrastructureRef
              type: object
            status:
              description: MachineStatus defines the observed state of Machine.
              properties:
                addresses:
                  description: Addresses is a list of addresses assigned to the machine.
                    This field is copied from the infrastructure provider reference.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                conditions:
                  description: Conditions defines current service state of the Machine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                lastUpdated:
                  description: LastUpdated identifies when the phase of the Machine
                    last transitioned.
                  format: date-time
                  type: string
                nodeInfo:
                  description: 'NodeInfo is a set of ids/uuids to uniquely identify
                    the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info'
                  properties:
                    architecture:
                      description: The Architecture reported by the node
                      type: string
                    bootID:
                      description: Boot ID reported by the node.
                      type: string
                    containerRuntimeVersion:
                      description: ContainerRuntime Version reported by the node through
                        runtime remote API (e.g. docker://1.5.0).
                      type: string
                    kernelVersion:
                      description: Kernel Version reported by the node from 'uname
                        -r' (e.g. 3.16.0-0.bpo.4-amd64).
                      type: string
                    kubeProxyVersion:
                      description: KubeProxy Version reported by the node.
                      type: string
                    kubeletVersion:
                      description: Kubelet Version reported by the node.
                      type: string
                    machineID:
                      description: 'MachineID reported by the node. For unique machine
                        identification in the cluster this field is preferred. Learn
                        more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html'
                      type: string
                    operatingSystem:
                      description: The Operating System reported by the node
                      type: string
                    osImage:
                      description: OS Image reported by the node from /etc/os-release
                        (e.g. Debian GNU/Linux 7 (wheezy)).
                      type: string
                    systemUUID:
                      description: SystemUUID reported by the node. For unique machine
                        identification MachineID is preferred. This field is specific
                        to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
                      type: string
                  required:
                  - architecture
                  - bootID
                  - containerRuntimeVersion
                  - kernelVersion
                  - kubeProxyVersion
                  - kubeletVersion
                  - machineID
                  - operatingSystem
                  - osImage
                  - systemUUID
                  type: object
                nodeRef:
                  description: NodeRef will point to the corresponding Node if it
                    exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of machine actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: machinesets.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineSet
      listKind: MachineSetList
      plural: machinesets
      shortNames:
      - ms
      singular: machineset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Total number of non-terminated machines targeted by this machineset
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of ready machines targeted by this machineset.
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      - description: Total number of available machines (ready for at least minReadySeconds)
        jsonPath: .status.availableReplicas
        name: Available
        type: integer
      - description: Time duration since creation of MachineSet
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachineSet
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineSet is the Schema for the machinesets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSetSpec defines the desired state of MachineSet.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  description: DeletePolicy defines the policy used to identify nodes
                    to delete when downscaling. Defaults to "Random".  Valid values
                    are "Random, "Newest", "Oldest"
                  enum:
                  - Random
                  - Newest
                  - Oldest
                  type: string
                minReadySeconds:
                  description: MinReadySeconds is the minimum number of seconds for
                    which a newly created machine should be ready. Defaults to 0 (machine
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                replicas:
                  default: 1
                  description: Replicas is the number of desired replicas. This is
                    a pointer to distinguish between explicit zero and unspecified.
                    Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is a label query over machines that should
                    match the replica count. Label keys and values that must match
                    in order to be controlled by this MachineSet. It must match the
                    machine template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                template:
                  description: Template is the object that describes the machine that
                    will be created if insufficient replicas are detected. Object
                    references to custom resources resources are treated as templates.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              type: object
            status:
              description: MachineSetStatus defines the observed state of MachineSet.
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                conditions:
                  description: Conditions defines current service state of the MachineSet.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  type: string
                failureReason:
                  description: "In the event that there is a terminal problem reconciling
                    the replicas, both FailureReason and FailureMessage will be set.
                    FailureReason will be populated with a succinct value suitable
                    for machine interpretation, while FailureMessage will contain
                    a more verbose string suitable for logging and human consumption.
                    \n These fields should not be set for transitive errors that a
                    controller faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something
                    is fundamentally wrong with the MachineTemplate's spec or the
                    configuration of the machine controller, and that manual intervention
                    is required. Examples of terminal errors would be invalid combinations
                    of settings in the spec, values that are unsupported by the machine
                    controller, or the responsible machine controller itself being
                    critically misconfigured. \n Any transient errors that occur during
                    the reconciliation of Machines can be added as events to the MachineSet
                    object and/or logged in the controller's output."
                  type: string
                fullyLabeledReplicas:
                  description: The number of replicas that have labels matching the
                    labels of the machine template of the MachineSet.
                  format: int32
                  type: integer
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: The number of ready replicas for this MachineSet. A
                    machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentclusters.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      kind: AgentCluster
      listKind: AgentClusterList
      plural: agentclusters
      singular: agentcluster
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentCluster is the Schema for the agentclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentClusterSpec defines the desired state of AgentCluster
              properties:
                baseDomain:
                  description: BaseDomain is the base domain to which the cluster
                    should belong.
                  type: string
                clusterName:
                  description: ClusterName is the friendly name of the cluster. It
                    is used for subdomains, some resource tagging, and other instances
                    where a friendly name for the cluster is useful.
                  type: string
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint store the data to of the custom ignition
                    endpoint.
                  properties:
                    caCertificateReference:
                      description: CaCertificateReference is a reference to the secret
                        containing CA certificate to be used when contacting the URL
                        via HTTPS.
                      properties:
                        name:
                          description: Name is the name of the secret containing the
                            CA certificate.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the secret containing
                            the CA certificate.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    url:
                      description: Url store the URL of the custom ignition endpoint.
                      type: string
                  type: object
                pullSecretRef:
                  description: PullSecretRef is the reference to the secret to use
                    when pulling images.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                releaseImage:
                  description: ReleaseImage is the image used when installing the
                    cluster
                  type: string
              required:
              - baseDomain
              - clusterName
              - releaseImage
              type: object
            status:
              description: AgentClusterStatus defines the observed state of AgentCluster
              properties:
                clusterDeploymentReference:
                  description: ClusterDeploymentRef is a reference to the associated
                    Hive ClusterDeployment.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a clusterDeployment resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the clusterDeployment
                        name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the ClusterDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a list of failure domain objects
                    synced from the infrastructure provider.
                  type: object
                ready:
                  type: boolean
              required:
              - clusterDeploymentReference
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentmachines.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      kind: AgentMachine
      listKind: AgentMachineList
      plural: agentmachines
      singular: agentmachine
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachine is the Schema for the agentmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineSpec defines the desired state of AgentMachine
              properties:
                agentLabelSelector:
                  description: AgentLabelSelector contains the labels that must be
                    set on an Agent in order to be selected for this Machine.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                minCPUs:
                  description: MinCPUs specifies the minimum number of CPU cores that
                    this Machine requires.
                  format: int32
                  type: integer
                minMemoryMiB:
                  description: MinMemoryMiB specifies the minimum amount of RAM that
                    this Machine requires, in MiB.
                  format: int32
                  type: integer
                providerID:
                  description: ProviderID is the host's motherboard serial formatted
                    as agent://12345678-1234-1234-1234-123456789abc
                  type: string
              type: object
            status:
              description: AgentMachineStatus defines the observed state of AgentMachine
              properties:
                addresses:
                  description: Addresses contains the Agent's associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                agentRef:
                  description: AgentRef is a reference to the Agent matched to the
                    Machine.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        an agent resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the agent
                        name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the AgentMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentmachinetemplates.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      categories:
      - cluster-api
      kind: AgentMachineTemplate
      listKind: AgentMachineTemplateList
      plural: agentmachinetemplates
      shortNames:
      - agentmt
      singular: agentmachinetemplate
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachineTemplate is the Schema for the agentmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineTemplateSpec defines the desired state of AgentMachineTemplate
              properties:
                template:
                  description: AgentMachineTemplateResource describes the data needed
                    to create an AgentMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains the labels that
                            must be set on an Agent in order to be selected for this
                            Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        minCPUs:
                          description: MinCPUs specifies the minimum number of CPU
                            cores that this Machine requires.
                          format: int32
                          type: integer
                        minMemoryMiB:
                          description: MinMemoryMiB specifies the minimum amount of
                            RAM that this Machine requires, in MiB.
                          format: int32
                          type: integer
                        providerID:
                          description: ProviderID is the host's motherboard serial
                            formatted as agent://12345678-1234-1234-1234-123456789abc
                          type: string
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsclustercontrolleridentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterControllerIdentity
      listKind: AWSClusterControllerIdentityList
      plural: awsclustercontrolleridentities
      shortNames:
      - awsci
      singular: awsclustercontrolleridentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities
            API It is used to grant access to use Cluster API Provider AWS Controller
            credentials.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsclusterroleidentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterRoleIdentity
      listKind: AWSClusterRoleIdentityList
      plural: awsclusterroleidentities
      shortNames:
      - awsri
      singular: awsclusterroleidentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities
            API It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before
                    it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: A unique identifier that might be required when you
                    assume a role in another account. If the administrator of the
                    account to which the role belongs provided you with an external
                    ID, then provide that value in the ExternalId parameter. This
                    value can be any string, such as a passphrase or account number.
                    A cross-account role is usually set up to trust everyone in an
                    account. Therefore, the administrator of the trusting account
                    might send an external ID to the administrator of the trusted
                    account. That way, only someone with the ID can assume the role,
                    rather than everyone in the account. For more information about
                    the external ID, see How to Use an External ID When Granting Access
                    to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want
                    to use as an inline session policy.
                  type: string
                policyARNs:
                  description: The Amazon Resource Names (ARNs) of the IAM managed
                    policies that you want to use as managed session policies. The
                    policies must exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: SourceIdentityRef is a reference to another identity
                    which will be chained to do role assumption. All identity types
                    are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
              required:
              - roleARN
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: awsclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSCluster
      listKind: AWSClusterList
      plural: awsclusters
      shortNames:
      - awsc
      singular: awscluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AWSCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for EC2 instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: AWS VPC the cluster is using
        jsonPath: .spec.network.vpc.id
        name: VPC
        type: string
      - description: API Endpoint
        jsonPath: .spec.controlPlaneEndpoint
        name: Endpoint
        priority: 1
        type: string
      - description: Bastion IP address for breakglass access
        jsonPath: .status.bastion.publicIp
        name: Bastion IP
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of an EC2-based
                Kubernetes cluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                        to access the bastion host. They are set as ingress rules
                        for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: AMI will use the specified AMI to boot the bastion.
                        If not specified, the AMI will default to one picked out in
                        public space.
                      type: string
                    disableIngressRules:
                      description: DisableIngressRules will ensure there are no Ingress
                        rules in the bastion host's security group. Requires AllowedCIDRBlocks
                        to be empty.
                      type: boolean
                    enabled:
                      description: Enabled allows this provider to create a bastion
                        host instance with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: InstanceType will use the specified instance type
                        for the bastion. If not specified, Cluster API Provider AWS
                        will use t3.micro for all regions except us-east-1, where
                        t2.micro will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups sets the security groups
                        used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will
                        be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: "CrossZoneLoadBalancing enables the classic ELB
                        cross availability zone balancing. \n With cross-zone load
                        balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances
                        in all enabled Availability Zones. If cross-zone load balancing
                        is disabled, each load balancer node distributes requests
                        evenly across the registered instances in its Availability
                        Zone only. \n Defaults to false."
                      type: boolean
                    name:
                      description: Name sets the name of the classic ELB load balancer.
                        As per AWS, the name must be unique within your set of load
                        balancers for the region, must have a maximum of 32 characters,
                        must contain only alphanumeric characters or hyphens, and
                        cannot begin or end with a hyphen. Once set, the value cannot
                        be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults
                        to internet-facing)
                      enum:
                      - internet-facing
                      - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied
                        to the control plane load balancer (defaults to discovered
                        subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: IdentityRef is a reference to a identity to be used
                    when reconciling this cluster
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system used to look up machine images when a machine does not
                    specify an AMI. When set, this will be used for all cluster machines
                    unless a machine specifies a different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up machine images when a machine does not specify an AMI. When
                    set, this will be used for all cluster machines unless a machine
                    specifies a different ImageLookupOrg. Supports substitutions for
                    {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                    version, respectively. The BaseOS will be the value in ImageLookupBaseOS
                    or ubuntu (the default), and the kubernetes version as defined
                    by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the
                    default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to look up
                    machine images when a machine does not specify an AMI. When set,
                    this will be used for all cluster machines unless a machine specifies
                    a different ImageLookupOrg.
                  type: string
                network:
                  description: NetworkSpec encapsulates all things related to AWS
                    network.
                  properties:
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: CNIIngressRules specify rules to apply to control
                            plane and worker node security groups. The source for
                            the rule will be set to control plane and worker security
                            group IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule
                              for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                      type: object
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: SecurityGroupOverrides is an optional set of security
                        groups to use for cluster instances This is optional - if
                        not provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability
                              zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same
                              AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: 'AvailabilityZoneSelection specifies how AZs
                            should be selected if there are more AZs in a region than
                            specified by AvailabilityZoneUsageLimit. There are 2 selection
                            schemes: Ordered - selects based on alphabetical order
                            Random - selects AZs randomly in a region Defaults to
                            Ordered'
                          enum:
                          - Ordered
                          - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: AvailabilityZoneUsageLimit specifies the maximum
                            number of availability zones (AZ) that should be used
                            in a region when automatically creating subnets. If a
                            region has more than this number of AZs then this number
                            of AZs will be picked randomly when creating default subnets.
                            Defaults to 3
                          minimum: 1
                          type: integer
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet
                            gateway associated with the VPC.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the bastion host. Valid values are empty string (do not use SSH
                    keys), a valid SSH key name, or omitted (use the default SSH key
                    name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster.
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated
                        addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for
                        Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA
                        is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated
                        with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage
                        volumes.
                      items:
                        description: Volume encapsulates the configuration options
                          for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported
                              for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group
                        IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances
                        to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared
                        or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64
                        encoded and should only be used when running a new instance.
                      type: string
                    volumeIDs:
                      description: IDs of the instance's volumes
                      items:
                        type: string
                      type: array
                  required:
                  - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational
                    state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                networkStatus:
                  description: NetworkStatus encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic
                                load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: IdleTimeout is time that the connection
                                is allowed to be idle (no data has been sent over
                                the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability
                            zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check
                            associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                          - healthyThreshold
                          - interval
                          - target
                          - timeout
                          - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic
                              load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                            - instancePort
                            - instanceProtocol
                            - port
                            - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either
                            internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC
                            attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule
                                for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the
                              security group.
                            type: object
                        required:
                        - id
                        - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsclusterstaticidentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterStaticIdentity
      listKind: AWSClusterStaticIdentityList
      plural: awsclusterstaticidentities
      shortNames:
      - awssi
      singular: awsclusterstaticidentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities
            API It represents a reference to an AWS access key ID and secret access
            key, stored in a secret.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                secretRef:
                  description: 'Reference to a secret containing the credentials.
                    The secret should contain the following data keys:  AccessKeyID:
                    AKIAIOSFODNN7EXAMPLE  SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY  SessionToken:
                    Optional'
                  type: string
              required:
              - secretRef
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsclustertemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterTemplate
      listKind: AWSClusterTemplateList
      plural: awsclustertemplates
      shortNames:
      - awsct
      singular: awsclustertemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes
            Cluster Templates.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.
              properties:
                template:
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: AWSClusterSpec defines the desired state of an
                        EC2-based Kubernetes cluster.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to AWS resources managed by the AWS provider, in addition
                            to the ones added by default.
                          type: object
                        bastion:
                          description: Bastion contains options to configure the bastion
                            host.
                          properties:
                            allowedCIDRBlocks:
                              description: AllowedCIDRBlocks is a list of CIDR blocks
                                allowed to access the bastion host. They are set as
                                ingress rules for the Bastion host's Security Group
                                (defaults to 0.0.0.0/0).
                              items:
                                type: string
                              type: array
                            ami:
                              description: AMI will use the specified AMI to boot
                                the bastion. If not specified, the AMI will default
                                to one picked out in public space.
                              type: string
                            disableIngressRules:
                              description: DisableIngressRules will ensure there are
                                no Ingress rules in the bastion host's security group.
                                Requires AllowedCIDRBlocks to be empty.
                              type: boolean
                            enabled:
                              description: Enabled allows this provider to create
                                a bastion host instance with a public ip to access
                                the VPC private network.
                              type: boolean
                            instanceType:
                              description: InstanceType will use the specified instance
                                type for the bastion. If not specified, Cluster API
                                Provider AWS will use t3.micro for all regions except
                                us-east-1, where t2.micro will be the default.
                              type: string
                          type: object
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint
                            used to communicate with the control plane.
                          properties:
                            host:
                              description: The hostname on which the API server is
                                serving.
                              type: string
                            port:
                              description: The port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                          - host
                          - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: ControlPlaneLoadBalancer is optional configuration
                            for customizing control plane behavior.
                          properties:
                            additionalSecurityGroups:
                              description: AdditionalSecurityGroups sets the security
                                groups used by the load balancer. Expected to be security
                                group IDs This is optional - if not provided new security
                                groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: "CrossZoneLoadBalancing enables the classic
                                ELB cross availability zone balancing. \n With cross-zone
                                load balancing, each load balancer node for your Classic
                                Load Balancer distributes requests evenly across the
                                registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load
                                balancer node distributes requests evenly across the
                                registered instances in its Availability Zone only.
                                \n Defaults to false."
                              type: boolean
                            name:
                              description: Name sets the name of the classic ELB load
                                balancer. As per AWS, the name must be unique within
                                your set of load balancers for the region, must have
                                a maximum of 32 characters, must contain only alphanumeric
                                characters or hyphens, and cannot begin or end with
                                a hyphen. Once set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer
                                (defaults to internet-facing)
                              enum:
                              - internet-facing
                              - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be
                                applied to the control plane load balancer (defaults
                                to discovered subnets for managed VPCs or an empty
                                set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        identityRef:
                          description: IdentityRef is a reference to a identity to
                            be used when reconciling this cluster
                          properties:
                            kind:
                              description: Kind of the identity.
                              enum:
                              - AWSClusterControllerIdentity
                              - AWSClusterRoleIdentity
                              - AWSClusterStaticIdentity
                              type: string
                            name:
                              description: Name of the identity.
                              minLength: 1
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system used to look up machine images when a machine does
                            not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different
                            ImageLookupBaseOS.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                            Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                            with the base OS and kubernetes version, respectively.
                            The BaseOS will be the value in ImageLookupBaseOS or ubuntu
                            (the default), and the kubernetes version as defined by
                            the packages produced by kubernetes/release without v
                            as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For
                            example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                          type: string
                        network:
                          description: NetworkSpec encapsulates all things related
                            to AWS network.
                          properties:
                            cni:
                              description: CNI configuration
                              properties:
                                cniIngressRules:
                                  description: CNIIngressRules specify rules to apply
                                    to control plane and worker node security groups.
                                    The source for the rule will be set to control
                                    plane and worker security group IDs.
                                  items:
                                    description: CNIIngressRule defines an AWS ingress
                                      rule for CNI requirements.
                                    properties:
                                      description:
                                        type: string
                                      fromPort:
                                        format: int64
                                        type: integer
                                      protocol:
                                        description: SecurityGroupProtocol defines
                                          the protocol type for a security group rule.
                                        type: string
                                      toPort:
                                        format: int64
                                        type: integer
                                    required:
                                    - description
                                    - fromPort
                                    - protocol
                                    - toPort
                                    type: object
                                  type: array
                              type: object
                            securityGroupOverrides:
                              additionalProperties:
                                type: string
                              description: SecurityGroupOverrides is an optional set
                                of security groups to use for cluster instances This
                                is optional - if not provided new security groups
                                will be created for the cluster
                              type: object
                            subnets:
                              description: Subnets configuration.
                              items:
                                description: SubnetSpec configures an AWS Subnet.
                                properties:
                                  availabilityZone:
                                    description: AvailabilityZone defines the availability
                                      zone to use for this subnet in the cluster's
                                      region.
                                    type: string
                                  cidrBlock:
                                    description: CidrBlock is the CIDR block to be
                                      used when the provider creates a managed VPC.
                                    type: string
                                  id:
                                    description: ID defines a unique identifier to
                                      reference this resource.
                                    type: string
                                  isPublic:
                                    description: IsPublic defines the subnet as a
                                      public subnet. A subnet is public when it is
                                      associated with a route table that has a route
                                      to an internet gateway.
                                    type: boolean
                                  natGatewayId:
                                    description: NatGatewayID is the NAT gateway id
                                      associated with the subnet. Ignored unless the
                                      subnet is managed by the provider, in which
                                      case this is set on the public subnet where
                                      the NAT gateway resides. It is then used to
                                      determine routes for private subnets in the
                                      same AZ as the public subnet.
                                    type: string
                                  routeTableId:
                                    description: RouteTableID is the routing table
                                      id associated with the subnet.
                                    type: string
                                  tags:
                                    additionalProperties:
                                      type: string
                                    description: Tags is a collection of tags describing
                                      the resource.
                                    type: object
                                type: object
                              type: array
                            vpc:
                              description: VPC configuration.
                              properties:
                                availabilityZoneSelection:
                                  default: Ordered
                                  description: 'AvailabilityZoneSelection specifies
                                    how AZs should be selected if there are more AZs
                                    in a region than specified by AvailabilityZoneUsageLimit.
                                    There are 2 selection schemes: Ordered - selects
                                    based on alphabetical order Random - selects AZs
                                    randomly in a region Defaults to Ordered'
                                  enum:
                                  - Ordered
                                  - Random
                                  type: string
                                availabilityZoneUsageLimit:
                                  default: 3
                                  description: AvailabilityZoneUsageLimit specifies
                                    the maximum number of availability zones (AZ)
                                    that should be used in a region when automatically
                                    creating subnets. If a region has more than this
                                    number of AZs then this number of AZs will be
                                    picked randomly when creating default subnets.
                                    Defaults to 3
                                  minimum: 1
                                  type: integer
                                cidrBlock:
                                  description: CidrBlock is the CIDR block to be used
                                    when the provider creates a managed VPC. Defaults
                                    to 10.0.0.0/16.
                                  type: string
                                id:
                                  description: ID is the vpc-id of the VPC this provider
                                    should use to create resources.
                                  type: string
                                internetGatewayId:
                                  description: InternetGatewayID is the id of the
                                    internet gateway associated with the VPC.
                                  type: string
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing
                                    the resource.
                                  type: object
                              type: object
                          type: object
                        region:
                          description: The AWS Region the cluster lives in.
                          type: string
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the bastion host. Valid values are empty string (do
                            not use SSH keys), a valid SSH key name, or omitted (use
                            the default SSH key name)
                          type: string
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsfargateprofiles.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSFargateProfile
      listKind: AWSFargateProfileList
      plural: awsfargateprofiles
      shortNames:
      - awsfp
      singular: awsfargateprofile
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: AWSFargateProfile ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EKS Fargate profile name
        jsonPath: .spec.profileName
        name: ProfileName
        type: string
      - description: Failure reason
        jsonPath: .status.failureReason
        name: FailureReason
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSFargateProfile is the Schema for the awsfargateprofiles
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FargateProfileSpec defines the desired state of FargateProfile.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                profileName:
                  description: ProfileName specifies the profile name.
                  type: string
                roleName:
                  description: RoleName specifies the name of IAM role for this fargate
                    pool If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                selectors:
                  description: Selectors specify fargate pod selectors.
                  items:
                    description: FargateSelector specifies a selector for pods that
                      should run on this fargate pool.
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies which pod labels this selector
                          should match.
                        type: object
                      namespace:
                        description: Namespace specifies which namespace this selector
                          should match.
                        type: string
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup.
                  items:
                    type: string
                  type: array
              required:
              - clusterName
              type: object
            status:
              description: FargateProfileStatus defines the observed state of FargateProfile.
              properties:
                conditions:
                  description: Conditions defines current state of the Fargate profile.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a succinct value suitable for machine interpretation.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the FargateProfile is available.
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsmachinepools.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachinePool
      listKind: AWSMachinePoolList
      plural: awsmachinepools
      shortNames:
      - awsmp
      singular: awsmachinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Machine ready status
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Minimum instanes in ASG
        jsonPath: .spec.minSize
        name: MinSize
        type: integer
      - description: Maximum instanes in ASG
        jsonPath: .spec.maxSize
        name: MaxSize
        type: integer
      - description: Launch Template ID
        jsonPath: .status.launchTemplateID
        name: LaunchTemplate ID
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider.
                  type: object
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and
                    version to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID, ARN, or filters. Only one of ID, ARN
                          or Filters may be specified. Specifying more than one will
                          result in a validation error.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look
                            up an EKS Optimized image in SSM Parameter store
                          enum:
                          - AmazonLinux
                          - AmazonLinuxGPU
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to
                        look up the image for this machine It will be ignored if an
                        explicit AMI is set. Supports substitutions for {{.BaseOS}}
                        and {{.K8sVersion}} with the base OS and kubernetes version,
                        respectively. The BaseOS will be the value in ImageLookupBaseOS
                        or ubuntu (the default), and the kubernetes version as defined
                        by the packages produced by kubernetes/release without v as
                        a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                        the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                        will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                        for a Machine that is targeting kubernetes v1.18.0 and the
                        ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                        Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach
                        to the instance. Valid values are empty string (do not use
                        SSH keys), a valid SSH key name, or omitted (use the default
                        SSH key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                        that is applied. Typically a new version is created when at
                        least one of the following happens: 1) A new launch template
                        spec is applied. 2) One or more parameters in an existing
                        template is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling
                    group feature
                  type: boolean
                defaultCoolDown:
                  description: The amount of time, in seconds, after a scaling activity
                    completes before another scaling activity can start. If no value
                    is supplied by user a default value of 300 seconds is set
                  type: string
                maxSize:
                  default: 1
                  description: MaxSize defines the maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: MinSize defines the minimum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance
                    types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution
                        of On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to
                            allocate instance types to fulfill On-Demand capacity.
                          enum:
                          - prioritized
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate
                            instances across Spot Instance pools.
                          enum:
                          - lowest-price
                          - capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: Overrides are used to override the instance type
                          specified by the launch template with multiple instance
                          types that can be used to launch On-Demand Instances and
                          Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                        - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated
                    with the instance refresh request.
                  properties:
                    instanceWarmup:
                      description: The number of seconds until a newly launched instance
                        is configured and ready to use. During this time, the next
                        replacement will not be initiated. The default is to use the
                        value for the health check grace period defined for the group.
                      format: int64
                      type: integer
                    minHealthyPercentage:
                      description: The amount of capacity as a percentage in ASG that
                        must remain healthy during an instance refresh. The default
                        is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: The strategy to use for the instance refresh. The
                        only valid value is Rolling. A rolling update is an update
                        that is applied to all instances in an Auto Scaling group
                        until all instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID, ARN, or filters. Only one of ID, ARN or
                      Filters may be specified. Specifying more than one will result
                      in a validation error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
              required:
              - awsLaunchTemplate
              - maxSize
              - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling
                    API.
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instances:
                  description: Instances contains the status for each instance in
                    the pool
                  items:
                    description: AWSMachinePoolInstanceStatus defines the status of
                      the AWSMachinePoolInstance.
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine
                          Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the
                          Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: awsmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachine
      listKind: AWSMachineList
      plural: awsmachines
      shortNames:
      - awsm
      singular: awsmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AWSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: EC2 instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EC2 instance ID
        jsonPath: .spec.providerID
        name: InstanceID
        type: string
      - description: Machine object which owns with this AWSMachine
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachine is the schema for Amazon EC2 machines.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of an Amazon EC2
                instance.
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references
                    to security groups that should be applied to the instance. These
                    security groups would be set in addition to any security groups
                    defined at the cluster level or in the actuator. It is possible
                    to specify either IDs of Filters. Using Filters will cause additional
                    requests to AWS API and if tags change the attached security groups
                    might change too.
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID, ARN, or filters. Only one of ID, ARN or
                      Filters may be specified. Specifying more than one will result
                      in a validation error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider. If both the AWSCluster and the AWSMachine specify the
                    same tag name with different values, the AWSMachine's value takes
                    precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look
                        up an EKS Optimized image in SSM Parameter store
                      enum:
                      - AmazonLinux
                      - AmazonLinuxGPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: InsecureSkipSecretsManager, when set to true will
                        not use AWS Secrets Manager or AWS Systems Manager Parameter
                        Store to ensure privacy of userdata. By default, a cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name.
                        This is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: SecureSecretsBackend, when set to parameter-store
                        will utilize the AWS Systems Manager Parameter Storage to
                        distribute secrets. By default or with the value of secrets-manager,
                        will use AWS Secrets Manager instead.
                      enum:
                      - secrets-manager
                      - ssm-parameter-store
                      type: string
                  type: object
                failureDomain:
                  description: FailureDomain is the failure domain unique identifier
                    this Machine should be attached to, as defined in Cluster API.
                    For this infrastructure provider, the ID is equivalent to an AWS
                    Availability Zone. If multiple subnets are matched for the availability
                    zone, the first one returned is picked.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system to use for image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up the image for this machine It will be ignored if an explicit
                    AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                    with the base OS and kubernetes version, respectively. The BaseOS
                    will be the value in ImageLookupBaseOS or ubuntu (the default),
                    and the kubernetes version as defined by the packages produced
                    by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                    or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  minLength: 2
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for
                      the storage device.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be
                          used. The key must already exist and be accessible by the
                          controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever
                          is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for
                          the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                    - size
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get
                    a public IP. Precedence for this setting is as follows: 1. This
                    field if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt
                        the volume. Can be either a KMS key ID or ARN. If Encrypted
                        is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever
                        is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for
                        the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1,
                        etc...).
                      type: string
                  required:
                  - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances
                    to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is
                        willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the instance. Valid values are empty string (do not use SSH keys),
                    a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this
                    instance. If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared
                    or single-tenant hardware.
                  enum:
                  - default
                  - dedicated
                  - host
                  type: string
                uncompressedUserData:
                  description: UncompressedUserData specify whether the user data
                    is gzip-compressed before it is sent to ec2 instance. cloud-init
                    has built-in support for gzip-compressed user data user data stored
                    in aws secret manager is always gzip-compressed.
                  type: boolean
              required:
              - instanceType
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine.
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for
                    this machine.
                  type: string
                interruptible:
                  description: Interruptible reports that this machine is using spot
                    instances and can therefore be interrupted by CAPI when it receives
                    a notice that the spot instance is to be terminated by AWS. This
                    will be set to true when SpotMarketOptions is not nil (i.e. this
                    machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachineTemplate
      listKind: AWSMachineTemplateList
      plural: awsmachinetemplates
      shortNames:
      - awsmt
      singular: awsmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the schema for the Amazon EC2 Machine
            Templates API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any
                            security groups defined at the cluster level or in the
                            actuator. It is possible to specify either IDs of Filters.
                            Using Filters will cause additional requests to AWS API
                            and if tags change the attached security groups might
                            change too.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID, ARN, or filters. Only one
                              of ID, ARN or Filters may be specified. Specifying more
                              than one will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource.
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which
                            to create the machine instance.
                          properties:
                            eksLookupType:
                              description: EKSOptimizedLookupType If specified, will
                                look up an EKS Optimized image in SSM Parameter store
                              enum:
                              - AmazonLinux
                              - AmazonLinuxGPU
                              type: string
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: InsecureSkipSecretsManager, when set to
                                true will not use AWS Secrets Manager or AWS Systems
                                Manager Parameter Store to ensure privacy of userdata.
                                By default, a cloud-init boothook shell script is
                                prepended to download the userdata from Secrets Manager
                                and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when
                                the machine registers as a node against the workload
                                cluster.
                              type: string
                            secureSecretsBackend:
                              description: SecureSecretsBackend, when set to parameter-store
                                will utilize the AWS Systems Manager Parameter Storage
                                to distribute secrets. By default or with the value
                                of secrets-manager, will use AWS Secrets Manager instead.
                              enum:
                              - secrets-manager
                              - ssm-parameter-store
                              type: string
                          type: object
                        failureDomain:
                          description: FailureDomain is the failure domain unique
                            identifier this Machine should be attached to, as defined
                            in Cluster API. For this infrastructure provider, the
                            ID is equivalent to an AWS Availability Zone. If multiple
                            subnets are matched for the availability zone, the first
                            one returned is picked.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system to use for image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up the image for this machine It will be ignored
                            if an explicit AMI is set. Supports substitutions for
                            {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                            version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes
                            version as defined by the packages produced by kubernetes/release
                            without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3.
                            For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this
                            machine.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                            Example: m4.xlarge'
                          minLength: 2
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage
                            volumes.
                          items:
                            description: Volume encapsulates the configuration options
                              for the storage device.
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should
                                  be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: EncryptionKey is the KMS key to use to
                                  encrypt the volume. Can be either a KMS key ID or
                                  ARN. If Encrypted is set and this is omitted, the
                                  default AWS key will be used. The key must already
                                  exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested
                                  for the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: Size specifies size (in Gi) of the storage
                                  device. Must be greater than the image snapshot
                                  size or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              throughput:
                                description: Throughput to provision in MiB/s supported
                                  for the volume type. Not applicable to all types.
                                format: int64
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g.
                                  gp2, io1, etc...).
                                type: string
                            required:
                            - size
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                            get a public IP. Precedence for this setting is as follows:
                            1. This field if set 2. Cluster/flavor setting 3. Subnet
                            default'
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options
                            for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported
                                for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure
                            instances to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the
                                user is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance. Valid values are empty string (do not
                            use SSH keys), a valid SSH key name, or omitted (use the
                            default SSH key name)
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use
                            for this instance. If not specified, the cluster subnet
                            will be used.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on
                            shared or single-tenant hardware.
                          enum:
                          - default
                          - dedicated
                          - host
                          type: string
                        uncompressedUserData:
                          description: UncompressedUserData specify whether the user
                            data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user
                            data user data stored in aws secret manager is always
                            gzip-compressed.
                          type: boolean
                      required:
                      - instanceType
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsmanagedmachinepools.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSManagedMachinePool
      listKind: AWSManagedMachinePoolList
      plural: awsmanagedmachinepools
      shortNames:
      - awsmmp
      singular: awsmanagedmachinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: MachinePool ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Number of replicas
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSManagedMachinePool is the Schema for the awsmanagedmachinepools
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedMachinePoolSpec defines the desired state of
                AWSManagedMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                amiType:
                  default: AL2_x86_64
                  description: AMIType defines the AMI type
                  enum:
                  - AL2_x86_64
                  - AL2_x86_64_GPU
                  - AL2_ARM_64
                  type: string
                amiVersion:
                  description: AMIVersion defines the desired AMI release version.
                    If no version number is supplied then the latest version for the
                    Kubernetes version will be used
                  minLength: 2
                  type: string
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                capacityType:
                  default: onDemand
                  description: CapacityType specifies the capacity type for the ASG
                    behind this pool
                  enum:
                  - onDemand
                  - spot
                  type: string
                diskSize:
                  description: DiskSize specifies the root disk size
                  format: int32
                  type: integer
                eksNodegroupName:
                  description: EKSNodegroupName specifies the name of the nodegroup
                    in AWS corresponding to this MachinePool. If you don't specify
                    a name then a default name will be created based on the namespace
                    and name of the managed machine pool.
                  type: string
                instanceType:
                  description: InstanceType specifies the AWS instance type
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Labels specifies labels for the Kubernetes node objects
                  type: object
                providerIDList:
                  description: ProviderIDList are the provider IDs of instances in
                    the autoscaling group corresponding to the nodegroup represented
                    by this machine pool
                  items:
                    type: string
                  type: array
                remoteAccess:
                  description: RemoteAccess specifies how machines can be accessed
                    remotely
                  properties:
                    public:
                      description: Public specifies whether to open port 22 to the
                        public internet
                      type: boolean
                    sourceSecurityGroups:
                      description: SourceSecurityGroups specifies which security groups
                        are allowed access
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: SSHKeyName specifies which EC2 SSH key can be used
                        to access machines. If left empty, the key from the control
                        plane is used.
                      type: string
                  type: object
                roleAdditionalPolicies:
                  description: RoleAdditionalPolicies allows you to attach additional
                    polices to the node group role. You must enable the EKSAllowAddRoles
                    feature flag to incorporate these into the created role.
                  items:
                    type: string
                  type: array
                roleName:
                  description: RoleName specifies the name of IAM role for the node
                    group. If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                scaling:
                  description: Scaling specifies scaling for the ASG behind this pool
                  properties:
                    maxSize:
                      format: int32
                      type: integer
                    minSize:
                      format: int32
                      type: integer
                  type: object
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup
                  items:
                    type: string
                  type: array
                taints:
                  description: Taints specifies the taints to apply to the nodes of
                    the machine pool
                  items:
                    description: Taint defines the specs for a Kubernetes taint.
                    properties:
                      effect:
                        description: Effect specifies the effect for the taint
                        enum:
                        - no-schedule
                        - no-execute
                        - prefer-no-schedule
                        type: string
                      key:
                        description: Key is the key of the taint
                        type: string
                      value:
                        description: Value is the value of the taint
                        type: string
                    required:
                    - effect
                    - key
                    - value
                    type: object
                  type: array
              type: object
            status:
              description: AWSManagedMachinePoolStatus defines the observed state
                of AWSManagedMachinePool.
              properties:
                conditions:
                  description: Conditions defines current service state of the managed
                    machine pool
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the MachinePool's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    MachinePools can be added as events to the MachinePool object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of MachinePools can
                    be added as events to the MachinePool object and/or logged in
                    the controller's output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the AWSManagedMachinePool nodegroup
                    has joined the cluster
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: ibmpowervsclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSCluster
      listKind: IBMPowerVSClusterList
      plural: ibmpowervsclusters
      singular: ibmpowervscluster
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                network:
                  description: Network is the reference to the Network to use for
                    this cluster.
                  properties:
                    id:
                      description: ID of resource
                      type: string
                    name:
                      description: Name of resource
                      type: string
                  type: object
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance
                    where the vsi instance will get deployed
                  type: string
              required:
              - network
              - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster
              properties:
                ready:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: ibmpowervsmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSMachine
      listKind: IBMPowerVSMachineList
      plural: ibmpowervsmachines
      singular: ibmpowervsmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this IBMPowerVSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for IBM PowerVS instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: PowerVS instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: PowerVS instance health
        jsonPath: .status.health
        name: Health
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine
              properties:
                image:
                  description: Image is the reference to the Image from which to create
                    the machine instance.
                  properties:
                    id:
                      description: ID of resource
                      type: string
                    name:
                      description: Name of resource
                      type: string
                  type: object
                memory:
                  description: Memory is Amount of memory allocated (in GB)
                  type: string
                network:
                  description: Network is the reference to the Network to use for
                    this instance.
                  properties:
                    id:
                      description: ID of resource
                      type: string
                    name:
                      description: Name of resource
                      type: string
                  type: object
                procType:
                  description: 'ProcType is the processor type, e.g: dedicated, shared,
                    capped'
                  type: string
                processors:
                  description: Processors is Number of processors allocated
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance
                    where the vsi instance will get deployed
                  type: string
                sshKey:
                  description: SSHKey is the name of the SSH key pair provided to
                    the vsi for authenticating users
                  type: string
                sysType:
                  description: SysType is the System type used to host the vsi
                  type: string
              required:
              - image
              - memory
              - network
              - procType
              - processors
              - serviceInstanceID
              - sysType
              type: object
            status:
              description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine
              properties:
                addresses:
                  description: Addresses contains the vsi associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                fault:
                  description: Fault will report if any fault messages for the vsi
                  type: string
                health:
                  description: Health is the health of the vsi
                  type: string
                instanceID:
                  type: string
                instanceState:
                  description: InstanceState is the status of the vsi
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              required:
              - instanceState
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: ibmpowervsmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSMachineTemplate
      listKind: IBMPowerVSMachineTemplateList
      plural: ibmpowervsmachinetemplates
      singular: ibmpowervsmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineTemplateSpec defines the desired state
                of IBMPowerVSMachineTemplate
              properties:
                template:
                  description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine
                    spec
                  properties:
                    spec:
                      description: IBMPowerVSMachineSpec defines the desired state
                        of IBMPowerVSMachine
                      properties:
                        image:
                          description: Image is the reference to the Image from which
                            to create the machine instance.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        memory:
                          description: Memory is Amount of memory allocated (in GB)
                          type: string
                        network:
                          description: Network is the reference to the Network to
                            use for this instance.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        procType:
                          description: 'ProcType is the processor type, e.g: dedicated,
                            shared, capped'
                          type: string
                        processors:
                          description: Processors is Number of processors allocated
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        serviceInstanceID:
                          description: ServiceInstanceID is the id of the power cloud
                            instance where the vsi instance will get deployed
                          type: string
                        sshKey:
                          description: SSHKey is the name of the SSH key pair provided
                            to the vsi for authenticating users
                          type: string
                        sysType:
                          description: SysType is the System type used to host the
                            vsi
                          type: string
                      required:
                      - image
                      - memory
                      - network
                      - procType
                      - processors
                      - serviceInstanceID
                      - sysType
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
            status:
              description: IBMPowerVSMachineTemplateStatus defines the observed state
                of IBMPowerVSMachineTemplate
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha4
    name: ibmvpcclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCCluster
      listKind: IBMVPCClusterList
      plural: ibmvpcclusters
      singular: ibmvpccluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this IBMVPCCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for IBM VPC instances
        jsonPath: .status.ready
        name: Ready
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCCluster is the Schema for the ibmvpcclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                region:
                  description: The IBM Cloud Region the cluster lives in.
                  type: string
                resourceGroup:
                  description: The VPC resources should be created under the resource
                    group
                  type: string
                vpc:
                  description: The Name of VPC
                  type: string
                zone:
                  description: The Name of availability zone
                  type: string
              required:
              - region
              - resourceGroup
              type: object
            status:
              description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster
              properties:
                ready:
                  description: Bastion Instance `json:"bastion,omitempty"`
                  type: boolean
                subnet:
                  description: Subnet describes a subnet
                  properties:
                    cidr:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    zone:
                      type: string
                  required:
                  - cidr
                  - id
                  - name
                  - zone
                  type: object
                vpc:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                  - id
                  - name
                  type: object
                vpcEndpoint:
                  description: VPCEndpoint describes a VPCEndpoint
                  properties:
                    address:
                      type: string
                    floatingIPID:
                      type: string
                  required:
                  - address
                  - floatingIPID
                  type: object
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: ibmvpcmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCMachine
      listKind: IBMVPCMachineList
      plural: ibmvpcmachines
      singular: ibmvpcmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster infrastructure is ready for IBM VPC instances
        jsonPath: .status.ready
        name: Ready
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachine is the Schema for the ibmvpcmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine
              properties:
                image:
                  description: 'Image is the id of OS image which would be install
                    on the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                    TODO: allow user to specify a image name is much reasonable. Example:
                    ibm-ubuntu-18-04-1-minimal-amd64-2'
                  type: string
                name:
                  description: Name of the instance
                  type: string
                primaryNetworkInterface:
                  description: PrimaryNetworkInterface is required to specify subnet
                  properties:
                    subnet:
                      description: Subnet ID of the network interface
                      type: string
                  type: object
                profile:
                  description: "Profile indicates the flavor of instance. Example:
                    bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a reference
                    link of profile"
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                sshKeys:
                  description: SSHKeys is the SSH pub keys that will be used to access
                    VM
                  items:
                    type: string
                  type: array
                zone:
                  description: 'Zone is the place where the instance should be created.
                    Example: us-south-3 TODO: Actually zone is transparent to user.
                    The field user can access is location. Example: Dallas 2'
                  type: string
              required:
              - image
              - profile
              - zone
              type: object
            status:
              description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine
              properties:
                addresses:
                  description: Addresses contains the GCP instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                instanceID:
                  type: string
                instanceState:
                  description: InstanceStatus is the status of the GCP instance for
                    this machine.
                  type: string
                ready:
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: ibmvpcmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCMachineTemplate
      listKind: IBMVPCMachineTemplateList
      plural: ibmvpcmachinetemplates
      singular: ibmvpcmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineTemplateSpec defines the desired state of
                IBMVPCMachineTemplate
              properties:
                template:
                  description: IBMVPCMachineTemplateResource describes the data needed
                    to create am IBMVPCMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        image:
                          description: 'Image is the id of OS image which would be
                            install on the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                            TODO: allow user to specify a image name is much reasonable.
                            Example: ibm-ubuntu-18-04-1-minimal-amd64-2'
                          type: string
                        name:
                          description: Name of the instance
                          type: string
                        primaryNetworkInterface:
                          description: PrimaryNetworkInterface is required to specify
                            subnet
                          properties:
                            subnet:
                              description: Subnet ID of the network interface
                              type: string
                          type: object
                        profile:
                          description: "Profile indicates the flavor of instance.
                            Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO:
                            add a reference link of profile"
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        sshKeys:
                          description: SSHKeys is the SSH pub keys that will be used
                            to access VM
                          items:
                            type: string
                          type: array
                        zone:
                          description: 'Zone is the place where the instance should
                            be created. Example: us-south-3 TODO: Actually zone is
                            transparent to user. The field user can access is location.
                            Example: Dallas 2'
                          type: string
                      required:
                      - image
                      - profile
                      - zone
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtCluster
      listKind: KubevirtClusterList
      plural: kubevirtclusters
      singular: kubevirtcluster
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtCluster is the Schema for the kubevirtclusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtClusterSpec defines the desired state of KubevirtCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                infraClusterSecretRef:
                  description: InfraClusterSecretRef is a reference to a secret with
                    a kubeconfig for external cluster used for infra.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                sshKeys:
                  description: SSHKeys is a reference to a local struct for SSH keys
                    persistence.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a resource containing
                        the keys. The reference is optional to allow users/operators
                        to specify Bootstrap.DataSecretName without the need of a
                        controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores
                        ssh keys.
                      type: string
                  type: object
              type: object
            status:
              description: KubevirtClusterStatus defines the observed state of KubevirtCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the KubevirtCluster.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains don't mean much in CAPD since it's all
                    local, but we can see how the rest of cluster API will use this
                    if we populate it.
                  type: object
                ready:
                  description: Ready denotes that the infrastructure is ready.
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtMachine
      listKind: KubevirtMachineList
      plural: kubevirtmachines
      singular: kubevirtmachine
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachine is the Schema for the kubevirtmachines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineSpec defines the desired state of KubevirtMachine.
              properties:
                providerID:
                  description: ProviderID TBD what to use for Kubevirt
                  type: string
                virtualMachineTemplate:
                  description: VirtualMachineTemplateSpec defines the desired state
                    of the kubevirt VM.
                  properties:
                    metadata:
                      nullable: true
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: VirtualMachineSpec contains the VirtualMachine
                        specification.
                      properties:
                        dataVolumeTemplates:
                          description: dataVolumeTemplates is a list of dataVolumes
                            that the VirtualMachineInstance template can reference.
                            DataVolumes in this list are dynamically created for the
                            VirtualMachine and are tied to the VirtualMachine's life-cycle.
                          items:
                            nullable: true
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: DataVolumeSpec contains the DataVolume
                                  specification.
                                properties:
                                  checkpoints:
                                    description: Checkpoints is a list of DataVolumeCheckpoints,
                                      representing stages in a multistage import.
                                    items:
                                      description: DataVolumeCheckpoint defines a
                                        stage in a warm migration.
                                      properties:
                                        current:
                                          description: Current is the identifier of
                                            the snapshot created for this checkpoint.
                                          type: string
                                        previous:
                                          description: Previous is the identifier
                                            of the snapshot from the previous checkpoint.
                                          type: string
                                      required:
                                      - current
                                      - previous
                                      type: object
                                    type: array
                                  contentType:
                                    description: 'DataVolumeContentType options: "kubevirt",
                                      "archive"'
                                    enum:
                                    - kubevirt
                                    - archive
                                    type: string
                                  finalCheckpoint:
                                    description: FinalCheckpoint indicates whether
                                      the current DataVolumeCheckpoint is the final
                                      checkpoint.
                                    type: boolean
                                  preallocation:
                                    description: Preallocation controls whether storage
                                      for DataVolumes should be allocated in advance.
                                    type: boolean
                                  priorityClassName:
                                    description: PriorityClassName for Importer, Cloner
                                      and Uploader pod
                                    type: string
                                  pvc:
                                    description: PVC is the PVC specification
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Alpha)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  source:
                                    description: Source is the src of the data for
                                      the requested DataVolume
                                    properties:
                                      blank:
                                        description: DataVolumeBlankImage provides
                                          the parameters to create a new raw blank
                                          image for the PVC
                                        type: object
                                      http:
                                        description: DataVolumeSourceHTTP can be either
                                          an http or https endpoint, with an optional
                                          basic auth user name and password, and an
                                          optional configmap containing additional
                                          CAs
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap
                                              reference, containing a Certificate
                                              Authority(CA) public key, and a base64
                                              encoded pem certificate
                                            type: string
                                          extraHeaders:
                                            description: ExtraHeaders is a list of
                                              strings containing extra headers to
                                              include with HTTP transfer requests
                                            items:
                                              type: string
                                            type: array
                                          secretExtraHeaders:
                                            description: SecretExtraHeaders is a list
                                              of Secret references, each containing
                                              an extra HTTP header that may include
                                              sensitive information
                                            items:
                                              type: string
                                            type: array
                                          secretRef:
                                            description: SecretRef A Secret reference,
                                              the secret should contain accessKeyId
                                              (user name) base64 encoded, and secretKey
                                              (password) also base64 encoded
                                            type: string
                                          url:
                                            description: URL is the URL of the http(s)
                                              endpoint
                                            type: string
                                        required:
                                        - url
                                        type: object
                                      imageio:
                                        description: DataVolumeSourceImageIO provides
                                          the parameters to create a Data Volume from
                                          an imageio source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a
                                              reference to the CA cert
                                            type: string
                                          diskId:
                                            description: DiskID provides id of a disk
                                              to be imported
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the ovirt-engine
                                            type: string
                                          url:
                                            description: URL is the URL of the ovirt-engine
                                            type: string
                                        required:
                                        - diskId
                                        - url
                                        type: object
                                      pvc:
                                        description: DataVolumeSourcePVC provides
                                          the parameters to create a Data Volume from
                                          an existing PVC
                                        properties:
                                          name:
                                            description: The name of the source PVC
                                            type: string
                                          namespace:
                                            description: The namespace of the source
                                              PVC
                                            type: string
                                        required:
                                        - name
                                        - namespace
                                        type: object
                                      registry:
                                        description: DataVolumeSourceRegistry provides
                                          the parameters to create a Data Volume from
                                          an registry source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a
                                              reference to the Registry certs
                                            type: string
                                          imageStream:
                                            description: ImageStream is the name of
                                              image stream for import
                                            type: string
                                          pullMethod:
                                            description: PullMethod can be either
                                              "pod" (default import), or "node" (node
                                              docker cache based import)
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the Registry
                                              source
                                            type: string
                                          url:
                                            description: 'URL is the url of the registry
                                              source (starting with the scheme: docker,
                                              oci-archive)'
                                            type: string
                                        type: object
                                      s3:
                                        description: DataVolumeSourceS3 provides the
                                          parameters to create a Data Volume from
                                          an S3 source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap
                                              reference, containing a Certificate
                                              Authority(CA) public key, and a base64
                                              encoded pem certificate
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the S3 source
                                            type: string
                                          url:
                                            description: URL is the url of the S3
                                              source
                                            type: string
                                        required:
                                        - url
                                        type: object
                                      upload:
                                        description: DataVolumeSourceUpload provides
                                          the parameters to create a Data Volume by
                                          uploading the source
                                        type: object
                                      vddk:
                                        description: DataVolumeSourceVDDK provides
                                          the parameters to create a Data Volume from
                                          a Vmware source
                                        properties:
                                          backingFile:
                                            description: BackingFile is the path to
                                              the virtual hard disk to migrate from
                                              vCenter/ESXi
                                            type: string
                                          secretRef:
                                            description: SecretRef provides a reference
                                              to a secret containing the username
                                              and password needed to access the vCenter
                                              or ESXi host
                                            type: string
                                          thumbprint:
                                            description: Thumbprint is the certificate
                                              thumbprint of the vCenter or ESXi host
                                            type: string
                                          url:
                                            description: URL is the URL of the vCenter
                                              or ESXi host with the VM to migrate
                                            type: string
                                          uuid:
                                            description: UUID is the UUID of the virtual
                                              machine that the backing file is attached
                                              to in vCenter/ESXi
                                            type: string
                                        type: object
                                    type: object
                                  sourceRef:
                                    description: SourceRef is an indirect reference
                                      to the source of data for the requested DataVolume
                                    properties:
                                      kind:
                                        description: The kind of the source reference,
                                          currently only "DataSource" is supported
                                        type: string
                                      name:
                                        description: The name of the source reference
                                        type: string
                                      namespace:
                                        description: The namespace of the source reference,
                                          defaults to the DataVolume namespace
                                        type: string
                                    required:
                                    - kind
                                    - name
                                    type: object
                                  storage:
                                    description: Storage is the requested storage
                                      specification
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          * An existing custom resource that implements
                                          data population (Alpha) In order to use
                                          custom resource types that implement data
                                          population, the AnyVolumeDataSource feature
                                          gate must be enabled. If the provisioner
                                          or an external controller can support the
                                          specified data source, it will create a
                                          new volume based on the contents of the
                                          specified data source.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                type: object
                              status:
                                description: DataVolumeTemplateDummyStatus is here
                                  simply for backwards compatibility with a previous
                                  API.
                                nullable: true
                                type: object
                            required:
                            - spec
                            type: object
                          type: array
                        flavor:
                          description: FlavorMatcher references a flavor that is used
                            to fill fields in Template
                          properties:
                            kind:
                              description: 'Kind specifies which flavor resource is
                                referenced. Allowed values are: "VirtualMachineFlavor"
                                and "VirtualMachineClusterFlavor". If not specified,
                                "VirtualMachineClusterFlavor" is used by default.'
                              type: string
                            name:
                              description: Name is the name of the VirtualMachineFlavor
                                or VirtualMachineClusterFlavor
                              type: string
                            profile:
                              description: Profile is the name of a custom profile
                                in the flavor. If left empty, the default profile
                                is used.
                              type: string
                          required:
                          - name
                          type: object
                        runStrategy:
                          description: Running state indicates the requested running
                            state of the VirtualMachineInstance mutually exclusive
                            with Running
                          type: string
                        running:
                          description: Running controls whether the associatied VirtualMachineInstance
                            is created or not Mutually exclusive with RunStrategy
                          type: boolean
                        template:
                          description: Template is the direct specification of VirtualMachineInstance
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineInstance Spec contains the
                                VirtualMachineInstance specification.
                              properties:
                                accessCredentials:
                                  description: Specifies a set of public keys to inject
                                    into the vm guest
                                  items:
                                    description: AccessCredential represents a credential
                                      source that can be used to authorize remote
                                      access to the vm guest Only one of its members
                                      may be specified.
                                    properties:
                                      sshPublicKey:
                                        description: SSHPublicKey represents the source
                                          and method of applying a ssh public key
                                          into a guest virtual machine.
                                        properties:
                                          propagationMethod:
                                            description: PropagationMethod represents
                                              how the public key is injected into
                                              the vm guest.
                                            properties:
                                              configDrive:
                                                description: ConfigDrivePropagation
                                                  means that the ssh public keys are
                                                  injected into the VM using metadata
                                                  using the configDrive cloud-init
                                                  provider
                                                type: object
                                              qemuGuestAgent:
                                                description: QemuGuestAgentAccessCredentailPropagation
                                                  means ssh public keys are dynamically
                                                  injected into the vm at runtime
                                                  via the qemu guest agent. This feature
                                                  requires the qemu guest agent to
                                                  be running within the guest.
                                                properties:
                                                  users:
                                                    description: Users represents
                                                      a list of guest users that should
                                                      have the ssh public keys added
                                                      to their authorized_keys file.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: set
                                                required:
                                                - users
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the
                                              public keys are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the
                                                  access credential is pulled from
                                                  a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents
                                                      the name of the secret in the
                                                      VMI's namespace
                                                    type: string
                                                required:
                                                - secretName
                                                type: object
                                            type: object
                                        required:
                                        - propagationMethod
                                        - source
                                        type: object
                                      userPassword:
                                        description: UserPassword represents the source
                                          and method for applying a guest user's password
                                        properties:
                                          propagationMethod:
                                            description: propagationMethod represents
                                              how the user passwords are injected
                                              into the vm guest.
                                            properties:
                                              qemuGuestAgent:
                                                description: QemuGuestAgentAccessCredentailPropagation
                                                  means passwords are dynamically
                                                  injected into the vm at runtime
                                                  via the qemu guest agent. This feature
                                                  requires the qemu guest agent to
                                                  be running within the guest.
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the
                                              user passwords are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the
                                                  access credential is pulled from
                                                  a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents
                                                      the name of the secret in the
                                                      VMI's namespace
                                                    type: string
                                                required:
                                                - secretName
                                                type: object
                                            type: object
                                        required:
                                        - propagationMethod
                                        - source
                                        type: object
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                affinity:
                                  description: If affinity is specifies, obey all
                                    the affinity rules
                                  properties:
                                    nodeAffinity:
                                      description: Describes node affinity scheduling
                                        rules for the pod.
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node matches the corresponding
                                            matchExpressions; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: An empty preferred scheduling
                                              term matches all objects with implicit
                                              weight 0 (i.e. it's a no-op). A null
                                              preferred scheduling term matches no
                                              objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term,
                                                  associated with the corresponding
                                                  weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              weight:
                                                description: Weight associated with
                                                  matching the corresponding nodeSelectorTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - preference
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to an update), the system may or may
                                            not try to eventually evict the pod from
                                            its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node
                                                selector terms. The terms are ORed.
                                              items:
                                                description: A null or empty node
                                                  selector term matches no objects.
                                                  The requirements of them are ANDed.
                                                  The TopologySelectorTerm type implements
                                                  a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              type: array
                                          required:
                                          - nodeSelectorTerms
                                          type: object
                                      type: object
                                    podAffinity:
                                      description: Describes pod affinity scheduling
                                        rules (e.g. co-locate this pod in the same
                                        node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node has pods which matches
                                            the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most
                                            preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces. This field is beta-level
                                                  and is only honored when PodAffinityNamespaceSelector
                                                  feature is enabled.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    podAntiAffinity:
                                      description: Describes pod anti-affinity scheduling
                                        rules (e.g. avoid putting this pod in the
                                        same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            anti-affinity expressions specified by
                                            this field, but it may choose a node that
                                            violates one or more of the expressions.
                                            The node that is most preferred is the
                                            one with the greatest sum of weights,
                                            i.e. for each node that meets all of the
                                            scheduling requirements (resource request,
                                            requiredDuringScheduling anti-affinity
                                            expressions, etc.), compute a sum by iterating
                                            through the elements of this field and
                                            adding "weight" to the sum if the node
                                            has pods which matches the corresponding
                                            podAffinityTerm; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the anti-affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the anti-affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces. This field is beta-level
                                                  and is only honored when PodAffinityNamespaceSelector
                                                  feature is enabled.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                dnsConfig:
                                  description: Specifies the DNS parameters of a pod.
                                    Parameters specified here will be merged to the
                                    generated DNS configuration based on DNSPolicy.
                                  properties:
                                    nameservers:
                                      description: A list of DNS name server IP addresses.
                                        This will be appended to the base nameservers
                                        generated from DNSPolicy. Duplicated nameservers
                                        will be removed.
                                      items:
                                        type: string
                                      type: array
                                    options:
                                      description: A list of DNS resolver options.
                                        This will be merged with the base options
                                        generated from DNSPolicy. Duplicated entries
                                        will be removed. Resolution options given
                                        in Options will override those that appear
                                        in the base DNSPolicy.
                                      items:
                                        description: PodDNSConfigOption defines DNS
                                          resolver options of a pod.
                                        properties:
                                          name:
                                            description: Required.
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    searches:
                                      description: A list of DNS search domains for
                                        host-name lookup. This will be appended to
                                        the base search paths generated from DNSPolicy.
                                        Duplicated search paths will be removed.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                dnsPolicy:
                                  description: Set DNS policy for the pod. Defaults
                                    to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet',
                                    'ClusterFirst', 'Default' or 'None'. DNS parameters
                                    given in DNSConfig will be merged with the policy
                                    selected with DNSPolicy. To have DNS options set
                                    along with hostNetwork, you have to specify DNS
                                    policy explicitly to 'ClusterFirstWithHostNet'.
                                  type: string
                                domain:
                                  description: Specification of the desired behavior
                                    of the VirtualMachineInstance on the host.
                                  properties:
                                    chassis:
                                      description: Chassis specifies the chassis info
                                        passed to the domain.
                                      properties:
                                        asset:
                                          type: string
                                        manufacturer:
                                          type: string
                                        serial:
                                          type: string
                                        sku:
                                          type: string
                                        version:
                                          type: string
                                      type: object
                                    clock:
                                      description: Clock sets the clock and timers
                                        of the vmi.
                                      properties:
                                        timer:
                                          description: Timer specifies whih timers
                                            are attached to the vmi.
                                          properties:
                                            hpet:
                                              description: HPET (High Precision Event
                                                Timer) - multiple timers with periodic
                                                interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup", "merge", "discard".
                                                  type: string
                                              type: object
                                            hyperv:
                                              description: Hyperv (Hypervclock) -
                                                lets guests read the host’s wall clock
                                                time (paravirtualized). For windows
                                                guests.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            kvm:
                                              description: "KVM \t(KVM clock) - lets
                                                guests read the host’s wall clock
                                                time (paravirtualized). For linux
                                                guests."
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            pit:
                                              description: PIT (Programmable Interval
                                                Timer) - a timer with periodic interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup", "discard".
                                                  type: string
                                              type: object
                                            rtc:
                                              description: RTC (Real Time Clock) -
                                                a continuously running timer with
                                                periodic interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup".
                                                  type: string
                                                track:
                                                  description: Track the guest or
                                                    the wall clock.
                                                  type: string
                                              type: object
                                          type: object
                                        timezone:
                                          description: Timezone sets the guest clock
                                            to the specified timezone. Zone name follows
                                            the TZ environment variable format (e.g.
                                            'America/New_York').
                                          type: string
                                        utc:
                                          description: UTC sets the guest clock to
                                            UTC on each boot. If an offset is specified,
                                            guest changes to the clock will be kept
                                            during reboots and are not reset.
                                          properties:
                                            offsetSeconds:
                                              description: OffsetSeconds specifies
                                                an offset in seconds, relative to
                                                UTC. If set, guest changes to the
                                                clock will be kept during reboots
                                                and not reset.
                                              type: integer
                                          type: object
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    cpu:
                                      description: CPU allow specified the detailed
                                        CPU topology inside the vmi.
                                      properties:
                                        cores:
                                          description: Cores specifies the number
                                            of cores inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                        dedicatedCpuPlacement:
                                          description: DedicatedCPUPlacement requests
                                            the scheduler to place the VirtualMachineInstance
                                            on a node with enough dedicated pCPUs
                                            and pin the vCPUs to it.
                                          type: boolean
                                        features:
                                          description: Features specifies the CPU
                                            features list inside the VMI.
                                          items:
                                            description: CPUFeature allows specifying
                                              a CPU feature.
                                            properties:
                                              name:
                                                description: Name of the CPU feature
                                                type: string
                                              policy:
                                                description: 'Policy is the CPU feature
                                                  attribute which can have the following
                                                  attributes: force    - The virtual
                                                  CPU will claim the feature is supported
                                                  regardless of it being supported
                                                  by host CPU. require  - Guest creation
                                                  will fail unless the feature is
                                                  supported by the host CPU or the
                                                  hypervisor is able to emulate it.
                                                  optional - The feature will be supported
                                                  by virtual CPU if and only if it
                                                  is supported by host CPU. disable  -
                                                  The feature will not be supported
                                                  by virtual CPU. forbid   - Guest
                                                  creation will fail if the feature
                                                  is supported by host CPU. Defaults
                                                  to require'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        isolateEmulatorThread:
                                          description: IsolateEmulatorThread requests
                                            one more dedicated pCPU to be allocated
                                            for the VMI to place the emulator thread
                                            on it.
                                          type: boolean
                                        model:
                                          description: Model specifies the CPU model
                                            inside the VMI. List of available models
                                            https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                            It is possible to specify special cases
                                            like "host-passthrough" to get the same
                                            CPU as the node and "host-model" to get
                                            CPU closest to the node one. Defaults
                                            to host-model.
                                          type: string
                                        numa:
                                          description: NUMA allows specifying settings
                                            for the guest NUMA topology
                                          properties:
                                            guestMappingPassthrough:
                                              description: GuestMappingPassthrough
                                                will create an efficient guest topology
                                                based on host CPUs exclusively assigned
                                                to a pod. The created topology ensures
                                                that memory and CPUs on the virtual
                                                numa nodes never cross boundaries
                                                of host numa nodes.
                                              type: object
                                          type: object
                                        realtime:
                                          description: Realtime instructs the virt-launcher
                                            to tune the VMI for lower latency, optional
                                            for real time workloads
                                          properties:
                                            mask:
                                              description: 'Mask defines the vcpu
                                                mask expression that defines which
                                                vcpus are used for realtime. Format
                                                matches libvirt''s expressions. Example:
                                                "0-3,^1","0,2,3","2-3"'
                                              type: string
                                          type: object
                                        sockets:
                                          description: Sockets specifies the number
                                            of sockets inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                        threads:
                                          description: Threads specifies the number
                                            of threads inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                      type: object
                                    devices:
                                      description: Devices allows adding disks, network
                                        interfaces, and others
                                      properties:
                                        autoattachGraphicsDevice:
                                          description: Whether to attach the default
                                            graphics device or not. VNC will not be
                                            available if set to false. Defaults to
                                            true.
                                          type: boolean
                                        autoattachMemBalloon:
                                          description: Whether to attach the Memory
                                            balloon device with default period. Period
                                            can be adjusted in virt-config. Defaults
                                            to true.
                                          type: boolean
                                        autoattachPodInterface:
                                          description: Whether to attach a pod network
                                            interface. Defaults to true.
                                          type: boolean
                                        autoattachSerialConsole:
                                          description: Whether to attach the default
                                            serial console or not. Serial console
                                            access will not be available if set to
                                            false. Defaults to true.
                                          type: boolean
                                        blockMultiQueue:
                                          description: Whether or not to enable virtio
                                            multi-queue for block devices. Defaults
                                            to false.
                                          type: boolean
                                        clientPassthrough:
                                          description: To configure and access client
                                            devices such as redirecting USB
                                          type: object
                                        disableHotplug:
                                          description: DisableHotplug disabled the
                                            ability to hotplug disks.
                                          type: boolean
                                        disks:
                                          description: Disks describes disks, cdroms,
                                            floppy and luns which are connected to
                                            the vmi.
                                          items:
                                            properties:
                                              blockSize:
                                                description: If specified, the virtual
                                                  disk will be presented with the
                                                  given block sizes.
                                                properties:
                                                  custom:
                                                    description: CustomBlockSize represents
                                                      the desired logical and physical
                                                      block size for a VM disk.
                                                    properties:
                                                      logical:
                                                        type: integer
                                                      physical:
                                                        type: integer
                                                    required:
                                                    - logical
                                                    - physical
                                                    type: object
                                                  matchVolume:
                                                    description: Represents if a feature
                                                      is enabled or disabled.
                                                    properties:
                                                      enabled:
                                                        description: Enabled determines
                                                          if the feature should be
                                                          enabled or disabled on the
                                                          guest. Defaults to true.
                                                        type: boolean
                                                    type: object
                                                type: object
                                              bootOrder:
                                                description: BootOrder is an integer
                                                  value > 0, used to determine ordering
                                                  of boot devices. Lower values take
                                                  precedence. Each disk or interface
                                                  that has a boot order must have
                                                  a unique value. Disks without a
                                                  boot order are not tried if a disk
                                                  with a boot order exists.
                                                type: integer
                                              cache:
                                                description: 'Cache specifies which
                                                  kvm disk cache mode should be used.
                                                  Supported values are: CacheNone,
                                                  CacheWriteThrough.'
                                                type: string
                                              cdrom:
                                                description: Attach a volume as a
                                                  cdrom to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to true.
                                                    type: boolean
                                                  tray:
                                                    description: Tray indicates if
                                                      the tray of the device is open
                                                      or closed. Allowed values are
                                                      "open" and "closed". Defaults
                                                      to closed.
                                                    type: string
                                                type: object
                                              dedicatedIOThread:
                                                description: dedicatedIOThread indicates
                                                  this disk should have an exclusive
                                                  IO Thread. Enabling this implies
                                                  useIOThreads = true. Defaults to
                                                  false.
                                                type: boolean
                                              disk:
                                                description: Attach a volume as a
                                                  disk to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  pciAddress:
                                                    description: 'If specified, the
                                                      virtual disk will be placed
                                                      on the guests pci address with
                                                      the specified PCI address. For
                                                      example: 0000:81:01.10'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                type: object
                                              floppy:
                                                description: Attach a volume as a
                                                  floppy to the vmi.
                                                properties:
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                  tray:
                                                    description: Tray indicates if
                                                      the tray of the device is open
                                                      or closed. Allowed values are
                                                      "open" and "closed". Defaults
                                                      to closed.
                                                    type: string
                                                type: object
                                              io:
                                                description: 'IO specifies which QEMU
                                                  disk IO mode should be used. Supported
                                                  values are: native, default, threads.'
                                                type: string
                                              lun:
                                                description: Attach a volume as a
                                                  LUN to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                type: object
                                              name:
                                                description: Name is the device name
                                                type: string
                                              serial:
                                                description: Serial provides the ability
                                                  to specify a serial number for the
                                                  disk device.
                                                type: string
                                              tag:
                                                description: If specified, disk address
                                                  and its tag will be provided to
                                                  the guest via config drive metadata
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        filesystems:
                                          description: Filesystems describes filesystem
                                            which is connected to the vmi.
                                          items:
                                            properties:
                                              name:
                                                description: Name is the device name
                                                type: string
                                              virtiofs:
                                                description: Virtiofs is supported
                                                type: object
                                            required:
                                            - name
                                            - virtiofs
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        gpus:
                                          description: Whether to attach a GPU device
                                            to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                type: string
                                              name:
                                                description: Name of the GPU device
                                                  as exposed by a device plugin
                                                type: string
                                              virtualGPUOptions:
                                                properties:
                                                  display:
                                                    properties:
                                                      enabled:
                                                        description: Enabled determines
                                                          if a display addapter backed
                                                          by a vGPU should be enabled
                                                          or disabled on the guest.
                                                          Defaults to true.
                                                        type: boolean
                                                      ramFB:
                                                        description: Enables a boot
                                                          framebuffer, until the guest
                                                          OS loads a real GPU driver
                                                          Defaults to true.
                                                        properties:
                                                          enabled:
                                                            description: Enabled determines
                                                              if the feature should
                                                              be enabled or disabled
                                                              on the guest. Defaults
                                                              to true.
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                type: object
                                            required:
                                            - deviceName
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        hostDevices:
                                          description: Whether to attach a host device
                                            to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                description: DeviceName is the resource
                                                  name of the host device exposed
                                                  by a device plugin
                                                type: string
                                              name:
                                                type: string
                                            required:
                                            - deviceName
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        inputs:
                                          description: Inputs describe input devices
                                          items:
                                            properties:
                                              bus:
                                                description: 'Bus indicates the bus
                                                  of input device to emulate. Supported
                                                  values: virtio, usb.'
                                                type: string
                                              name:
                                                description: Name is the device name
                                                type: string
                                              type:
                                                description: 'Type indicated the type
                                                  of input device. Supported values:
                                                  tablet.'
                                                type: string
                                            required:
                                            - name
                                            - type
                                            type: object
                                          type: array
                                        interfaces:
                                          description: Interfaces describe network
                                            interfaces which are added to the vmi.
                                          items:
                                            properties:
                                              bootOrder:
                                                description: BootOrder is an integer
                                                  value > 0, used to determine ordering
                                                  of boot devices. Lower values take
                                                  precedence. Each interface or disk
                                                  that has a boot order must have
                                                  a unique value. Interfaces without
                                                  a boot order are not tried.
                                                type: integer
                                              bridge:
                                                type: object
                                              dhcpOptions:
                                                description: If specified the network
                                                  interface will pass additional DHCP
                                                  options to the VMI
                                                properties:
                                                  bootFileName:
                                                    description: If specified will
                                                      pass option 67 to interface's
                                                      DHCP server
                                                    type: string
                                                  ntpServers:
                                                    description: If specified will
                                                      pass the configured NTP server
                                                      to the VM via DHCP option 042.
                                                    items:
                                                      type: string
                                                    type: array
                                                  privateOptions:
                                                    description: 'If specified will
                                                      pass extra DHCP options for
                                                      private use, range: 224-254'
                                                    items:
                                                      description: DHCPExtraOptions
                                                        defines Extra DHCP options
                                                        for a VM.
                                                      properties:
                                                        option:
                                                          description: Option is an
                                                            Integer value from 224-254
                                                            Required.
                                                          type: integer
                                                        value:
                                                          description: Value is a
                                                            String value for the Option
                                                            provided Required.
                                                          type: string
                                                      required:
                                                      - option
                                                      - value
                                                      type: object
                                                    type: array
                                                  tftpServerName:
                                                    description: If specified will
                                                      pass option 66 to interface's
                                                      DHCP server
                                                    type: string
                                                type: object
                                              macAddress:
                                                description: 'Interface MAC address.
                                                  For example: de:ad:00:00:be:af or
                                                  DE-AD-00-00-BE-AF.'
                                                type: string
                                              macvtap:
                                                type: object
                                              masquerade:
                                                type: object
                                              model:
                                                description: 'Interface model. One
                                                  of: e1000, e1000e, ne2k_pci, pcnet,
                                                  rtl8139, virtio. Defaults to virtio.
                                                  TODO:(ihar) switch to enums once
                                                  opengen-api supports them. See:
                                                  https://github.com/kubernetes/kube-openapi/issues/51'
                                                type: string
                                              name:
                                                description: Logical name of the interface
                                                  as well as a reference to the associated
                                                  networks. Must match the Name of
                                                  a Network.
                                                type: string
                                              pciAddress:
                                                description: 'If specified, the virtual
                                                  network interface will be placed
                                                  on the guests pci address with the
                                                  specified PCI address. For example:
                                                  0000:81:01.10'
                                                type: string
                                              ports:
                                                description: List of ports to be forwarded
                                                  to the virtual machine.
                                                items:
                                                  description: Port repesents a port
                                                    to expose from the virtual machine.
                                                    Default protocol TCP. The port
                                                    field is mandatory
                                                  properties:
                                                    name:
                                                      description: If specified, this
                                                        must be an IANA_SVC_NAME and
                                                        unique within the pod. Each
                                                        named port in a pod must have
                                                        a unique name. Name for the
                                                        port that can be referred
                                                        to by services.
                                                      type: string
                                                    port:
                                                      description: Number of port
                                                        to expose for the virtual
                                                        machine. This must be a valid
                                                        port number, 0 < x < 65536.
                                                      format: int32
                                                      type: integer
                                                    protocol:
                                                      description: Protocol for port.
                                                        Must be UDP or TCP. Defaults
                                                        to "TCP".
                                                      type: string
                                                  required:
                                                  - port
                                                  type: object
                                                type: array
                                              slirp:
                                                type: object
                                              sriov:
                                                type: object
                                              tag:
                                                description: If specified, the virtual
                                                  network interface address and its
                                                  tag will be provided to the guest
                                                  via config drive
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        networkInterfaceMultiqueue:
                                          description: If specified, virtual network
                                            interfaces configured with a virtio bus
                                            will also enable the vhost multiqueue
                                            feature for network devices. The number
                                            of queues created depends on additional
                                            factors of the VirtualMachineInstance,
                                            like the number of guest CPUs.
                                          type: boolean
                                        rng:
                                          description: Whether to have random number
                                            generator from host
                                          type: object
                                        useVirtioTransitional:
                                          description: Fall back to legacy virtio
                                            0.9 support if virtio bus is selected
                                            on devices. This is helpful for old machines
                                            like CentOS6 or RHEL6 which do not understand
                                            virtio_non_transitional (virtio 1.0).
                                          type: boolean
                                        watchdog:
                                          description: Watchdog describes a watchdog
                                            device which can be added to the vmi.
                                          properties:
                                            i6300esb:
                                              description: i6300esb watchdog device.
                                              properties:
                                                action:
                                                  description: The action to take.
                                                    Valid values are poweroff, reset,
                                                    shutdown. Defaults to reset.
                                                  type: string
                                              type: object
                                            name:
                                              description: Name of the watchdog.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                      type: object
                                    features:
                                      description: Features like acpi, apic, hyperv,
                                        smm.
                                      properties:
                                        acpi:
                                          description: ACPI enables/disables ACPI
                                            inside the guest. Defaults to enabled.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                        apic:
                                          description: Defaults to the machine type
                                            setting.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                            endOfInterrupt:
                                              description: EndOfInterrupt enables
                                                the end of interrupt notification
                                                in the guest. Defaults to false.
                                              type: boolean
                                          type: object
                                        hyperv:
                                          description: Defaults to the machine type
                                            setting.
                                          properties:
                                            evmcs:
                                              description: EVMCS Speeds up L2 vmexits,
                                                but disables other virtualization
                                                features. Requires vapic. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            frequencies:
                                              description: Frequencies improves the
                                                TSC clock source handling for Hyper-V
                                                on KVM. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            ipi:
                                              description: IPI improves performances
                                                in overcommited environments. Requires
                                                vpindex. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            reenlightenment:
                                              description: Reenlightenment enables
                                                the notifications on TSC frequency
                                                changes. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            relaxed:
                                              description: Relaxed instructs the guest
                                                OS to disable watchdog timeouts. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            reset:
                                              description: Reset enables Hyperv reboot/reset
                                                for the vmi. Requires synic. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            runtime:
                                              description: Runtime improves the time
                                                accounting to improve scheduling in
                                                the guest. Defaults to the machine
                                                type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            spinlocks:
                                              description: Spinlocks allows to configure
                                                the spinlock retry attempts.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                                spinlocks:
                                                  description: Retries indicates the
                                                    number of retries. Must be a value
                                                    greater or equal 4096. Defaults
                                                    to 4096.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            synic:
                                              description: SyNIC enables the Synthetic
                                                Interrupt Controller. Defaults to
                                                the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            synictimer:
                                              description: SyNICTimer enables Synthetic
                                                Interrupt Controller Timers, reducing
                                                CPU load. Defaults to the machine
                                                type setting.
                                              properties:
                                                direct:
                                                  description: Represents if a feature
                                                    is enabled or disabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                enabled:
                                                  type: boolean
                                              type: object
                                            tlbflush:
                                              description: TLBFlush improves performances
                                                in overcommited environments. Requires
                                                vpindex. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            vapic:
                                              description: VAPIC improves the paravirtualized
                                                handling of interrupts. Defaults to
                                                the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            vendorid:
                                              description: VendorID allows setting
                                                the hypervisor vendor id. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                                vendorid:
                                                  description: VendorID sets the hypervisor
                                                    vendor id, visible to the vmi.
                                                    String up to twelve characters.
                                                  type: string
                                              type: object
                                            vpindex:
                                              description: VPIndex enables the Virtual
                                                Processor Index to help windows identifying
                                                virtual processors. Defaults to the
                                                machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                          type: object
                                        kvm:
                                          description: Configure how KVM presence
                                            is exposed to the guest.
                                          properties:
                                            hidden:
                                              description: Hide the KVM hypervisor
                                                from standard MSR based discovery.
                                                Defaults to false
                                              type: boolean
                                          type: object
                                        pvspinlock:
                                          description: Notify the guest that the host
                                            supports paravirtual spinlocks. For older
                                            kernels this feature should be explicitly
                                            disabled.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                        smm:
                                          description: SMM enables/disables System
                                            Management Mode. TSEG not yet implemented.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                      type: object
                                    firmware:
                                      description: Firmware.
                                      properties:
                                        bootloader:
                                          description: Settings to control the bootloader
                                            that is used.
                                          properties:
                                            bios:
                                              description: If set (default), BIOS
                                                will be used.
                                              properties:
                                                useSerial:
                                                  description: If set, the BIOS output
                                                    will be transmitted over serial
                                                  type: boolean
                                              type: object
                                            efi:
                                              description: If set, EFI will be used
                                                instead of BIOS.
                                              properties:
                                                secureBoot:
                                                  description: If set, SecureBoot
                                                    will be enabled and the OVMF roms
                                                    will be swapped for SecureBoot-enabled
                                                    ones. Requires SMM to be enabled.
                                                    Defaults to true
                                                  type: boolean
                                              type: object
                                          type: object
                                        kernelBoot:
                                          description: Settings to set the kernel
                                            for booting.
                                          properties:
                                            container:
                                              description: Container defines the container
                                                that containes kernel artifacts
                                              properties:
                                                image:
                                                  description: Image that container
                                                    initrd / kernel files.
                                                  type: string
                                                imagePullPolicy:
                                                  description: 'Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest
                                                    tag is specified, or IfNotPresent
                                                    otherwise. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                  type: string
                                                imagePullSecret:
                                                  description: ImagePullSecret is
                                                    the name of the Docker registry
                                                    secret required to pull the image.
                                                    The secret must already exist.
                                                  type: string
                                                initrdPath:
                                                  description: the fully-qualified
                                                    path to the ramdisk image in the
                                                    host OS
                                                  type: string
                                                kernelPath:
                                                  description: The fully-qualified
                                                    path to the kernel image in the
                                                    host OS
                                                  type: string
                                              required:
                                              - image
                                              type: object
                                            kernelArgs:
                                              description: Arguments to be passed
                                                to the kernel at boot time
                                              type: string
                                          type: object
                                        serial:
                                          description: The system-serial-number in
                                            SMBIOS
                                          type: string
                                        uuid:
                                          description: UUID reported by the vmi bios.
                                            Defaults to a random generated uid.
                                          type: string
                                      type: object
                                    ioThreadsPolicy:
                                      description: 'Controls whether or not disks
                                        will share IOThreads. Omitting IOThreadsPolicy
                                        disables use of IOThreads. One of: shared,
                                        auto'
                                      type: string
                                    machine:
                                      description: Machine type.
                                      properties:
                                        type:
                                          description: QEMU machine type is the actual
                                            chipset of the VirtualMachineInstance.
                                          type: string
                                      type: object
                                    memory:
                                      description: Memory allow specifying the VMI
                                        memory features.
                                      properties:
                                        guest:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Guest allows to specifying
                                            the amount of memory which is visible
                                            inside the Guest OS. The Guest must lie
                                            between Requests and Limits from the resources
                                            section. Defaults to the requested memory
                                            in the resources section if not specified.
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        hugepages:
                                          description: Hugepages allow to use hugepages
                                            for the VirtualMachineInstance instead
                                            of regular memory.
                                          properties:
                                            pageSize:
                                              description: PageSize specifies the
                                                hugepage size, for x86_64 architecture
                                                valid values are 1Gi and 2Mi.
                                              type: string
                                          type: object
                                      type: object
                                    resources:
                                      description: Resources describes the Compute
                                        Resources required by this vmi.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Limits describes the maximum
                                            amount of compute resources allowed. Valid
                                            resource keys are "memory" and "cpu".
                                          type: object
                                        overcommitGuestOverhead:
                                          description: Don't ask the scheduler to
                                            take the guest-management overhead into
                                            account. Instead put the overhead only
                                            into the container's memory limit. This
                                            can lead to crashes if all memory is in
                                            use on a node. Defaults to false.
                                          type: boolean
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Requests is a description of
                                            the initial vmi resources. Valid resource
                                            keys are "memory" and "cpu".
                                          type: object
                                      type: object
                                  required:
                                  - devices
                                  type: object
                                evictionStrategy:
                                  description: EvictionStrategy can be set to "LiveMigrate"
                                    if the VirtualMachineInstance should be migrated
                                    instead of shut-off in case of a node drain.
                                  type: string
                                hostname:
                                  description: Specifies the hostname of the vmi If
                                    not specified, the hostname will be set to the
                                    name of the vmi, if dhcp or cloud-init is configured
                                    properly.
                                  type: string
                                livenessProbe:
                                  description: 'Periodic probe of VirtualMachineInstance
                                    liveness. VirtualmachineInstances will be stopped
                                    if the probe fails. Cannot be updated. More info:
                                    https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: One and only one of the following
                                        should be specified. Exec specifies the action
                                        to take, it will be executed on the guest
                                        through the qemu-guest-agent. If the guest
                                        agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent
                                        for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the VirtualMachineInstance
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: 'TCPSocket specifies an action
                                        involving a TCP port. TCP hooks not yet supported
                                        TODO: implement a realistic TCP lifecycle
                                        hook'
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. For exec probes the timeout
                                        fails the probe but does not terminate the
                                        command running on the guest. This means a
                                        blocking command can result in an increasing
                                        load on the guest. A small buffer will be
                                        added to the resulting workload exec probe
                                        to compensate for delays caused by the qemu
                                        guest exec mechanism. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                networks:
                                  description: List of networks that can be attached
                                    to a vm's virtual interface.
                                  items:
                                    description: Network represents a network type
                                      and a resource that should be connected to the
                                      vm.
                                    properties:
                                      multus:
                                        description: Represents the multus cni network.
                                        properties:
                                          default:
                                            description: Select the default network
                                              and add it to the multus-cni.io/default-network
                                              annotation.
                                            type: boolean
                                          networkName:
                                            description: 'References to a NetworkAttachmentDefinition
                                              CRD object. Format: <networkName>, <namespace>/<networkName>.
                                              If namespace is not specified, VMI namespace
                                              is assumed.'
                                            type: string
                                        required:
                                        - networkName
                                        type: object
                                      name:
                                        description: 'Network name. Must be a DNS_LABEL
                                          and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      pod:
                                        description: Represents the stock pod network
                                          interface.
                                        properties:
                                          vmIPv6NetworkCIDR:
                                            description: IPv6 CIDR for the vm network.
                                              Defaults to fd10:0:2::/120 if not specified.
                                            type: string
                                          vmNetworkCIDR:
                                            description: CIDR for vm network. Default
                                              10.0.2.0/24 if not specified.
                                            type: string
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: 'NodeSelector is a selector which must
                                    be true for the vmi to fit on a node. Selector
                                    which must match a node''s labels for the vmi
                                    to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                  type: object
                                priorityClassName:
                                  description: If specified, indicates the pod's priority.
                                    If not specified, the pod priority will be default
                                    or zero if there is no default.
                                  type: string
                                readinessProbe:
                                  description: 'Periodic probe of VirtualMachineInstance
                                    service readiness. VirtualmachineInstances will
                                    be removed from service endpoints if the probe
                                    fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: One and only one of the following
                                        should be specified. Exec specifies the action
                                        to take, it will be executed on the guest
                                        through the qemu-guest-agent. If the guest
                                        agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent
                                        for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the VirtualMachineInstance
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: 'TCPSocket specifies an action
                                        involving a TCP port. TCP hooks not yet supported
                                        TODO: implement a realistic TCP lifecycle
                                        hook'
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. For exec probes the timeout
                                        fails the probe but does not terminate the
                                        command running on the guest. This means a
                                        blocking command can result in an increasing
                                        load on the guest. A small buffer will be
                                        added to the resulting workload exec probe
                                        to compensate for delays caused by the qemu
                                        guest exec mechanism. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                schedulerName:
                                  description: If specified, the VMI will be dispatched
                                    by specified scheduler. If not specified, the
                                    VMI will be dispatched by default scheduler.
                                  type: string
                                startStrategy:
                                  description: StartStrategy can be set to "Paused"
                                    if Virtual Machine should be started in paused
                                    state.
                                  type: string
                                subdomain:
                                  description: If specified, the fully qualified vmi
                                    hostname will be "<hostname>.<subdomain>.<pod
                                    namespace>.svc.<cluster domain>". If not specified,
                                    the vmi will not have a domainname at all. The
                                    DNS entry will resolve to the vmi, no matter if
                                    the vmi itself can pick up a hostname.
                                  type: string
                                terminationGracePeriodSeconds:
                                  description: Grace period observed after signalling
                                    a VirtualMachineInstance to stop after which the
                                    VirtualMachineInstance is force terminated.
                                  format: int64
                                  type: integer
                                tolerations:
                                  description: If toleration is specified, obey all
                                    the toleration rules.
                                  items:
                                    description: The pod this Toleration is attached
                                      to tolerates any taint that matches the triple
                                      <key,value,effect> using the matching operator
                                      <operator>.
                                    properties:
                                      effect:
                                        description: Effect indicates the taint effect
                                          to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule,
                                          PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: Key is the taint key that the
                                          toleration applies to. Empty means match
                                          all taint keys. If the key is empty, operator
                                          must be Exists; this combination means to
                                          match all values and all keys.
                                        type: string
                                      operator:
                                        description: Operator represents a key's relationship
                                          to the value. Valid operators are Exists
                                          and Equal. Defaults to Equal. Exists is
                                          equivalent to wildcard for value, so that
                                          a pod can tolerate all taints of a particular
                                          category.
                                        type: string
                                      tolerationSeconds:
                                        description: TolerationSeconds represents
                                          the period of time the toleration (which
                                          must be of effect NoExecute, otherwise this
                                          field is ignored) tolerates the taint. By
                                          default, it is not set, which means tolerate
                                          the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict
                                          immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: Value is the taint value the
                                          toleration matches to. If the operator is
                                          Exists, the value should be empty, otherwise
                                          just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                volumes:
                                  description: List of volumes that can be mounted
                                    by disks belonging to the vmi.
                                  items:
                                    description: Volume represents a named volume
                                      in a vmi.
                                    properties:
                                      cloudInitConfigDrive:
                                        description: 'CloudInitConfigDrive represents
                                          a cloud-init Config Drive user-data source.
                                          The Config Drive data will be added as a
                                          disk to the vmi. A proper cloud-init installation
                                          is required inside the guest. More info:
                                          https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html'
                                        properties:
                                          networkData:
                                            description: NetworkData contains config
                                              drive inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains
                                              config drive cloud-init networkdata
                                              as a base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references
                                              a k8s secret that contains config drive
                                              networkdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                          secretRef:
                                            description: UserDataSecretRef references
                                              a k8s secret that contains config drive
                                              userdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                          userData:
                                            description: UserData contains config
                                              drive inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains config
                                              drive cloud-init userdata as a base64
                                              encoded string.
                                            type: string
                                        type: object
                                      cloudInitNoCloud:
                                        description: 'CloudInitNoCloud represents
                                          a cloud-init NoCloud user-data source. The
                                          NoCloud data will be added as a disk to
                                          the vmi. A proper cloud-init installation
                                          is required inside the guest. More info:
                                          http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                                        properties:
                                          networkData:
                                            description: NetworkData contains NoCloud
                                              inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains
                                              NoCloud cloud-init networkdata as a
                                              base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references
                                              a k8s secret that contains NoCloud networkdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                          secretRef:
                                            description: UserDataSecretRef references
                                              a k8s secret that contains NoCloud userdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                          userData:
                                            description: UserData contains NoCloud
                                              inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains NoCloud
                                              cloud-init userdata as a base64 encoded
                                              string.
                                            type: string
                                        type: object
                                      configMap:
                                        description: 'ConfigMapSource represents a
                                          reference to a ConfigMap in the same namespace.
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or it's keys must be defined
                                            type: boolean
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                      containerDisk:
                                        description: 'ContainerDisk references a docker
                                          image, embedding a qcow or raw disk. More
                                          info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                                        properties:
                                          image:
                                            description: Image is the name of the
                                              image with the embedded disk.
                                            type: string
                                          imagePullPolicy:
                                            description: 'Image pull policy. One of
                                              Always, Never, IfNotPresent. Defaults
                                              to Always if :latest tag is specified,
                                              or IfNotPresent otherwise. Cannot be
                                              updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                            type: string
                                          imagePullSecret:
                                            description: ImagePullSecret is the name
                                              of the Docker registry secret required
                                              to pull the image. The secret must already
                                              exist.
                                            type: string
                                          path:
                                            description: Path defines the path to
                                              disk file in the container
                                            type: string
                                        required:
                                        - image
                                        type: object
                                      dataVolume:
                                        description: DataVolume represents the dynamic
                                          creation a PVC for this volume as well as
                                          the process of populating that PVC with
                                          a disk image.
                                        properties:
                                          hotpluggable:
                                            description: Hotpluggable indicates whether
                                              the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          name:
                                            description: Name represents the name
                                              of the DataVolume in the same namespace
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      downwardAPI:
                                        description: DownwardAPI represents downward
                                          API about the pod that should populate this
                                          volume
                                        properties:
                                          fields:
                                            description: Fields is a list of downward
                                              API volume file
                                            items:
                                              description: DownwardAPIVolumeFile represents
                                                information to create the file containing
                                                the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name and namespace are
                                                    supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the
                                                        schema the FieldPath is written
                                                        in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field
                                                        to select in the specified
                                                        API version.
                                                      type: string
                                                  required:
                                                  - fieldPath
                                                  type: object
                                                mode:
                                                  description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file, must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created. Must not be absolute
                                                    or contain the ''..'' path. Must
                                                    be utf-8 encoded. The first item
                                                    of the relative path must not
                                                    start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: 'Selects a resource
                                                    of the container: only resources
                                                    limits and requests (limits.cpu,
                                                    limits.memory, requests.cpu and
                                                    requests.memory) are currently
                                                    supported.'
                                                  properties:
                                                    containerName:
                                                      description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: Specifies the output
                                                        format of the exposed resources,
                                                        defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource
                                                        to select'
                                                      type: string
                                                  required:
                                                  - resource
                                                  type: object
                                              required:
                                              - path
                                              type: object
                                            type: array
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                      downwardMetrics:
                                        description: DownwardMetrics adds a very small
                                          disk to VMIs which contains a limited view
                                          of host and guest metrics. The disk content
                                          is compatible with vhostmd (https://github.com/vhostmd/vhostmd)
                                          and vm-dump-metrics.
                                        type: object
                                      emptyDisk:
                                        description: 'EmptyDisk represents a temporary
                                          disk which shares the vmis lifecycle. More
                                          info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                                        properties:
                                          capacity:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Capacity of the sparse disk.
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - capacity
                                        type: object
                                      ephemeral:
                                        description: Ephemeral is a special volume
                                          source that "wraps" specified source and
                                          provides copy-on-write image on top of it.
                                        properties:
                                          persistentVolumeClaim:
                                            description: 'PersistentVolumeClaimVolumeSource
                                              represents a reference to a PersistentVolumeClaim
                                              in the same namespace. Directly attached
                                              to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            properties:
                                              claimName:
                                                description: 'ClaimName is the name
                                                  of a PersistentVolumeClaim in the
                                                  same namespace as the pod using
                                                  this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                type: string
                                              readOnly:
                                                description: Will force the ReadOnly
                                                  setting in VolumeMounts. Default
                                                  false.
                                                type: boolean
                                            required:
                                            - claimName
                                            type: object
                                        type: object
                                      hostDisk:
                                        description: HostDisk represents a disk created
                                          on the cluster level
                                        properties:
                                          capacity:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Capacity of the sparse disk
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          path:
                                            description: The path to HostDisk image
                                              located on the cluster
                                            type: string
                                          shared:
                                            description: Shared indicate whether the
                                              path is shared between nodes
                                            type: boolean
                                          type:
                                            description: Contains information if disk.img
                                              exists or should be created allowed
                                              options are 'Disk' and 'DiskOrCreate'
                                            type: string
                                        required:
                                        - path
                                        - type
                                        type: object
                                      name:
                                        description: 'Volume''s name. Must be a DNS_LABEL
                                          and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      persistentVolumeClaim:
                                        description: 'PersistentVolumeClaimVolumeSource
                                          represents a reference to a PersistentVolumeClaim
                                          in the same namespace. Directly attached
                                          to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          claimName:
                                            description: 'ClaimName is the name of
                                              a PersistentVolumeClaim in the same
                                              namespace as the pod using this volume.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            type: string
                                          hotpluggable:
                                            description: Hotpluggable indicates whether
                                              the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          readOnly:
                                            description: Will force the ReadOnly setting
                                              in VolumeMounts. Default false.
                                            type: boolean
                                        required:
                                        - claimName
                                        type: object
                                      secret:
                                        description: 'SecretVolumeSource represents
                                          a reference to a secret data in the same
                                          namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/'
                                        properties:
                                          optional:
                                            description: Specify whether the Secret
                                              or it's keys must be defined
                                            type: boolean
                                          secretName:
                                            description: 'Name of the secret in the
                                              pod''s namespace to use. More info:
                                              https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                            type: string
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                      serviceAccount:
                                        description: 'ServiceAccountVolumeSource represents
                                          a reference to a service account. There
                                          can only be one volume of this type! More
                                          info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                        properties:
                                          serviceAccountName:
                                            description: 'Name of the service account
                                              in the pod''s namespace to use. More
                                              info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                            type: string
                                        type: object
                                      sysprep:
                                        description: Represents a Sysprep volume source.
                                        properties:
                                          configMap:
                                            description: ConfigMap references a ConfigMap
                                              that contains Sysprep answer file named
                                              autounattend.xml that should be attached
                                              as disk of CDROM type.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                          secret:
                                            description: Secret references a k8s Secret
                                              that contains Sysprep answer file named
                                              autounattend.xml that should be attached
                                              as disk of CDROM type.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                              required:
                              - domain
                              type: object
                          type: object
                      required:
                      - template
                      type: object
                  type: object
              type: object
            status:
              description: KubevirtMachineStatus defines the observed state of KubevirtMachine.
              properties:
                addresses:
                  description: Addresses contains the associated addresses for the
                    machine.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the KubevirtMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                loadBalancerConfigured:
                  description: LoadBalancerConfigured denotes that the machine has
                    been added to the load balancer
                  type: boolean
                nodeupdated:
                  description: NodeUpdated denotes that the ProviderID is updated
                    on Node of this KubevirtMachine
                  type: boolean
                ready:
                  description: Ready denotes that the machine is ready
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtMachineTemplate
      listKind: KubevirtMachineTemplateList
      plural: kubevirtmachinetemplates
      singular: kubevirtmachinetemplate
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachineTemplate is the Schema for the kubevirtmachinetemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineTemplateSpec defines the desired state of
                KubevirtMachineTemplate.
              properties:
                template:
                  description: KubevirtMachineTemplateResource describes the data
                    needed to create a KubevirtMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        providerID:
                          description: ProviderID TBD what to use for Kubevirt
                          type: string
                        virtualMachineTemplate:
                          description: VirtualMachineTemplateSpec defines the desired
                            state of the kubevirt VM.
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineSpec contains the VirtualMachine
                                specification.
                              properties:
                                dataVolumeTemplates:
                                  description: dataVolumeTemplates is a list of dataVolumes
                                    that the VirtualMachineInstance template can reference.
                                    DataVolumes in this list are dynamically created
                                    for the VirtualMachine and are tied to the VirtualMachine's
                                    life-cycle.
                                  items:
                                    nullable: true
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        nullable: true
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      spec:
                                        description: DataVolumeSpec contains the DataVolume
                                          specification.
                                        properties:
                                          checkpoints:
                                            description: Checkpoints is a list of
                                              DataVolumeCheckpoints, representing
                                              stages in a multistage import.
                                            items:
                                              description: DataVolumeCheckpoint defines
                                                a stage in a warm migration.
                                              properties:
                                                current:
                                                  description: Current is the identifier
                                                    of the snapshot created for this
                                                    checkpoint.
                                                  type: string
                                                previous:
                                                  description: Previous is the identifier
                                                    of the snapshot from the previous
                                                    checkpoint.
                                                  type: string
                                              required:
                                              - current
                                              - previous
                                              type: object
                                            type: array
                                          contentType:
                                            description: 'DataVolumeContentType options:
                                              "kubevirt", "archive"'
                                            enum:
                                            - kubevirt
                                            - archive
                                            type: string
                                          finalCheckpoint:
                                            description: FinalCheckpoint indicates
                                              whether the current DataVolumeCheckpoint
                                              is the final checkpoint.
                                            type: boolean
                                          preallocation:
                                            description: Preallocation controls whether
                                              storage for DataVolumes should be allocated
                                              in advance.
                                            type: boolean
                                          priorityClassName:
                                            description: PriorityClassName for Importer,
                                              Cloner and Uploader pod
                                            type: string
                                          pvc:
                                            description: PVC is the PVC specification
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external
                                                  controller can support the specified
                                                  data source, it will create a new
                                                  volume based on the contents of
                                                  the specified data source. If the
                                                  AnyVolumeDataSource feature gate
                                                  is enabled, this field will always
                                                  have the same contents as the DataSourceRef
                                                  field.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              dataSourceRef:
                                                description: 'Specifies the object
                                                  from which to populate the volume
                                                  with data, if a non-empty volume
                                                  is desired. This may be any local
                                                  object from a non-empty API group
                                                  (non core object) or a PersistentVolumeClaim
                                                  object. When this field is specified,
                                                  volume binding will only succeed
                                                  if the type of the specified object
                                                  matches some installed volume populator
                                                  or dynamic provisioner. This field
                                                  will replace the functionality of
                                                  the DataSource field and as such
                                                  if both fields are non-empty, they
                                                  must have the same value. For backwards
                                                  compatibility, both fields (DataSource
                                                  and DataSourceRef) will be set to
                                                  the same value automatically if
                                                  one of them is empty and the other
                                                  is non-empty. There are two important
                                                  differences between DataSource and
                                                  DataSourceRef: * While DataSource
                                                  only allows two specific types of
                                                  objects, DataSourceRef   allows
                                                  any non-core object, as well as
                                                  PersistentVolumeClaim objects. *
                                                  While DataSource ignores disallowed
                                                  values (dropping them), DataSourceRef   preserves
                                                  all values, and generates an error
                                                  if a disallowed value is   specified.
                                                  (Alpha) Using this field requires
                                                  the AnyVolumeDataSource feature
                                                  gate to be enabled.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. If RecoverVolumeExpansionFailure
                                                  feature is enabled users are allowed
                                                  to specify resource requirements
                                                  that are lower than previous value
                                                  but must still be higher than capacity
                                                  recorded in the status field of
                                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                          source:
                                            description: Source is the src of the
                                              data for the requested DataVolume
                                            properties:
                                              blank:
                                                description: DataVolumeBlankImage
                                                  provides the parameters to create
                                                  a new raw blank image for the PVC
                                                type: object
                                              http:
                                                description: DataVolumeSourceHTTP
                                                  can be either an http or https endpoint,
                                                  with an optional basic auth user
                                                  name and password, and an optional
                                                  configmap containing additional
                                                  CAs
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  extraHeaders:
                                                    description: ExtraHeaders is a
                                                      list of strings containing extra
                                                      headers to include with HTTP
                                                      transfer requests
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretExtraHeaders:
                                                    description: SecretExtraHeaders
                                                      is a list of Secret references,
                                                      each containing an extra HTTP
                                                      header that may include sensitive
                                                      information
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretRef:
                                                    description: SecretRef A Secret
                                                      reference, the secret should
                                                      contain accessKeyId (user name)
                                                      base64 encoded, and secretKey
                                                      (password) also base64 encoded
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the http(s) endpoint
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              imageio:
                                                description: DataVolumeSourceImageIO
                                                  provides the parameters to create
                                                  a Data Volume from an imageio source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the CA cert
                                                    type: string
                                                  diskId:
                                                    description: DiskID provides id
                                                      of a disk to be imported
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the ovirt-engine
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the ovirt-engine
                                                    type: string
                                                required:
                                                - diskId
                                                - url
                                                type: object
                                              pvc:
                                                description: DataVolumeSourcePVC provides
                                                  the parameters to create a Data
                                                  Volume from an existing PVC
                                                properties:
                                                  name:
                                                    description: The name of the source
                                                      PVC
                                                    type: string
                                                  namespace:
                                                    description: The namespace of
                                                      the source PVC
                                                    type: string
                                                required:
                                                - name
                                                - namespace
                                                type: object
                                              registry:
                                                description: DataVolumeSourceRegistry
                                                  provides the parameters to create
                                                  a Data Volume from an registry source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the Registry
                                                      certs
                                                    type: string
                                                  imageStream:
                                                    description: ImageStream is the
                                                      name of image stream for import
                                                    type: string
                                                  pullMethod:
                                                    description: PullMethod can be
                                                      either "pod" (default import),
                                                      or "node" (node docker cache
                                                      based import)
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the Registry source
                                                    type: string
                                                  url:
                                                    description: 'URL is the url of
                                                      the registry source (starting
                                                      with the scheme: docker, oci-archive)'
                                                    type: string
                                                type: object
                                              s3:
                                                description: DataVolumeSourceS3 provides
                                                  the parameters to create a Data
                                                  Volume from an S3 source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the S3 source
                                                    type: string
                                                  url:
                                                    description: URL is the url of
                                                      the S3 source
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              upload:
                                                description: DataVolumeSourceUpload
                                                  provides the parameters to create
                                                  a Data Volume by uploading the source
                                                type: object
                                              vddk:
                                                description: DataVolumeSourceVDDK
                                                  provides the parameters to create
                                                  a Data Volume from a Vmware source
                                                properties:
                                                  backingFile:
                                                    description: BackingFile is the
                                                      path to the virtual hard disk
                                                      to migrate from vCenter/ESXi
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      a reference to a secret containing
                                                      the username and password needed
                                                      to access the vCenter or ESXi
                                                      host
                                                    type: string
                                                  thumbprint:
                                                    description: Thumbprint is the
                                                      certificate thumbprint of the
                                                      vCenter or ESXi host
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the vCenter or ESXi host with
                                                      the VM to migrate
                                                    type: string
                                                  uuid:
                                                    description: UUID is the UUID
                                                      of the virtual machine that
                                                      the backing file is attached
                                                      to in vCenter/ESXi
                                                    type: string
                                                type: object
                                            type: object
                                          sourceRef:
                                            description: SourceRef is an indirect
                                              reference to the source of data for
                                              the requested DataVolume
                                            properties:
                                              kind:
                                                description: The kind of the source
                                                  reference, currently only "DataSource"
                                                  is supported
                                                type: string
                                              name:
                                                description: The name of the source
                                                  reference
                                                type: string
                                              namespace:
                                                description: The namespace of the
                                                  source reference, defaults to the
                                                  DataVolume namespace
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          storage:
                                            description: Storage is the requested
                                              storage specification
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  * An existing custom resource that
                                                  implements data population (Alpha)
                                                  In order to use custom resource
                                                  types that implement data population,
                                                  the AnyVolumeDataSource feature
                                                  gate must be enabled. If the provisioner
                                                  or an external controller can support
                                                  the specified data source, it will
                                                  create a new volume based on the
                                                  contents of the specified data source.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                        type: object
                                      status:
                                        description: DataVolumeTemplateDummyStatus
                                          is here simply for backwards compatibility
                                          with a previous API.
                                        nullable: true
                                        type: object
                                    required:
                                    - spec
                                    type: object
                                  type: array
                                flavor:
                                  description: FlavorMatcher references a flavor that
                                    is used to fill fields in Template
                                  properties:
                                    kind:
                                      description: 'Kind specifies which flavor resource
                                        is referenced. Allowed values are: "VirtualMachineFlavor"
                                        and "VirtualMachineClusterFlavor". If not
                                        specified, "VirtualMachineClusterFlavor" is
                                        used by default.'
                                      type: string
                                    name:
                                      description: Name is the name of the VirtualMachineFlavor
                                        or VirtualMachineClusterFlavor
                                      type: string
                                    profile:
                                      description: Profile is the name of a custom
                                        profile in the flavor. If left empty, the
                                        default profile is used.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                runStrategy:
                                  description: Running state indicates the requested
                                    running state of the VirtualMachineInstance mutually
                                    exclusive with Running
                                  type: string
                                running:
                                  description: Running controls whether the associatied
                                    VirtualMachineInstance is created or not Mutually
                                    exclusive with RunStrategy
                                  type: boolean
                                template:
                                  description: Template is the direct specification
                                    of VirtualMachineInstance
                                  properties:
                                    metadata:
                                      nullable: true
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: VirtualMachineInstance Spec contains
                                        the VirtualMachineInstance specification.
                                      properties:
                                        accessCredentials:
                                          description: Specifies a set of public keys
                                            to inject into the vm guest
                                          items:
                                            description: AccessCredential represents
                                              a credential source that can be used
                                              to authorize remote access to the vm
                                              guest Only one of its members may be
                                              specified.
                                            properties:
                                              sshPublicKey:
                                                description: SSHPublicKey represents
                                                  the source and method of applying
                                                  a ssh public key into a guest virtual
                                                  machine.
                                                properties:
                                                  propagationMethod:
                                                    description: PropagationMethod
                                                      represents how the public key
                                                      is injected into the vm guest.
                                                    properties:
                                                      configDrive:
                                                        description: ConfigDrivePropagation
                                                          means that the ssh public
                                                          keys are injected into the
                                                          VM using metadata using
                                                          the configDrive cloud-init
                                                          provider
                                                        type: object
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means ssh public keys are
                                                          dynamically injected into
                                                          the vm at runtime via the
                                                          qemu guest agent. This feature
                                                          requires the qemu guest
                                                          agent to be running within
                                                          the guest.
                                                        properties:
                                                          users:
                                                            description: Users represents
                                                              a list of guest users
                                                              that should have the
                                                              ssh public keys added
                                                              to their authorized_keys
                                                              file.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: set
                                                        required:
                                                        - users
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the public keys are pulled
                                                      from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                              userPassword:
                                                description: UserPassword represents
                                                  the source and method for applying
                                                  a guest user's password
                                                properties:
                                                  propagationMethod:
                                                    description: propagationMethod
                                                      represents how the user passwords
                                                      are injected into the vm guest.
                                                    properties:
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means passwords are dynamically
                                                          injected into the vm at
                                                          runtime via the qemu guest
                                                          agent. This feature requires
                                                          the qemu guest agent to
                                                          be running within the guest.
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the user passwords are
                                                      pulled from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        affinity:
                                          description: If affinity is specifies, obey
                                            all the affinity rules
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - preference
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                      type: array
                                                  required:
                                                  - nodeSelectorTerms
                                                  type: object
                                              type: object
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces. This
                                                              field is beta-level
                                                              and is only honored
                                                              when PodAffinityNamespaceSelector
                                                              feature is enabled.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace"
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces. This
                                                              field is beta-level
                                                              and is only honored
                                                              when PodAffinityNamespaceSelector
                                                              feature is enabled.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace"
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                          type: object
                                        dnsConfig:
                                          description: Specifies the DNS parameters
                                            of a pod. Parameters specified here will
                                            be merged to the generated DNS configuration
                                            based on DNSPolicy.
                                          properties:
                                            nameservers:
                                              description: A list of DNS name server
                                                IP addresses. This will be appended
                                                to the base nameservers generated
                                                from DNSPolicy. Duplicated nameservers
                                                will be removed.
                                              items:
                                                type: string
                                              type: array
                                            options:
                                              description: A list of DNS resolver
                                                options. This will be merged with
                                                the base options generated from DNSPolicy.
                                                Duplicated entries will be removed.
                                                Resolution options given in Options
                                                will override those that appear in
                                                the base DNSPolicy.
                                              items:
                                                description: PodDNSConfigOption defines
                                                  DNS resolver options of a pod.
                                                properties:
                                                  name:
                                                    description: Required.
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            searches:
                                              description: A list of DNS search domains
                                                for host-name lookup. This will be
                                                appended to the base search paths
                                                generated from DNSPolicy. Duplicated
                                                search paths will be removed.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        dnsPolicy:
                                          description: Set DNS policy for the pod.
                                            Defaults to "ClusterFirst". Valid values
                                            are 'ClusterFirstWithHostNet', 'ClusterFirst',
                                            'Default' or 'None'. DNS parameters given
                                            in DNSConfig will be merged with the policy
                                            selected with DNSPolicy. To have DNS options
                                            set along with hostNetwork, you have to
                                            specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                                          type: string
                                        domain:
                                          description: Specification of the desired
                                            behavior of the VirtualMachineInstance
                                            on the host.
                                          properties:
                                            chassis:
                                              description: Chassis specifies the chassis
                                                info passed to the domain.
                                              properties:
                                                asset:
                                                  type: string
                                                manufacturer:
                                                  type: string
                                                serial:
                                                  type: string
                                                sku:
                                                  type: string
                                                version:
                                                  type: string
                                              type: object
                                            clock:
                                              description: Clock sets the clock and
                                                timers of the vmi.
                                              properties:
                                                timer:
                                                  description: Timer specifies whih
                                                    timers are attached to the vmi.
                                                  properties:
                                                    hpet:
                                                      description: HPET (High Precision
                                                        Event Timer) - multiple timers
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "merge", "discard".
                                                          type: string
                                                      type: object
                                                    hyperv:
                                                      description: Hyperv (Hypervclock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For windows guests.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    kvm:
                                                      description: "KVM \t(KVM clock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For linux guests."
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    pit:
                                                      description: PIT (Programmable
                                                        Interval Timer) - a timer
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "discard".
                                                          type: string
                                                      type: object
                                                    rtc:
                                                      description: RTC (Real Time
                                                        Clock) - a continuously running
                                                        timer with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup".
                                                          type: string
                                                        track:
                                                          description: Track the guest
                                                            or the wall clock.
                                                          type: string
                                                      type: object
                                                  type: object
                                                timezone:
                                                  description: Timezone sets the guest
                                                    clock to the specified timezone.
                                                    Zone name follows the TZ environment
                                                    variable format (e.g. 'America/New_York').
                                                  type: string
                                                utc:
                                                  description: UTC sets the guest
                                                    clock to UTC on each boot. If
                                                    an offset is specified, guest
                                                    changes to the clock will be kept
                                                    during reboots and are not reset.
                                                  properties:
                                                    offsetSeconds:
                                                      description: OffsetSeconds specifies
                                                        an offset in seconds, relative
                                                        to UTC. If set, guest changes
                                                        to the clock will be kept
                                                        during reboots and not reset.
                                                      type: integer
                                                  type: object
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            cpu:
                                              description: CPU allow specified the
                                                detailed CPU topology inside the vmi.
                                              properties:
                                                cores:
                                                  description: Cores specifies the
                                                    number of cores inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                dedicatedCpuPlacement:
                                                  description: DedicatedCPUPlacement
                                                    requests the scheduler to place
                                                    the VirtualMachineInstance on
                                                    a node with enough dedicated pCPUs
                                                    and pin the vCPUs to it.
                                                  type: boolean
                                                features:
                                                  description: Features specifies
                                                    the CPU features list inside the
                                                    VMI.
                                                  items:
                                                    description: CPUFeature allows
                                                      specifying a CPU feature.
                                                    properties:
                                                      name:
                                                        description: Name of the CPU
                                                          feature
                                                        type: string
                                                      policy:
                                                        description: 'Policy is the
                                                          CPU feature attribute which
                                                          can have the following attributes:
                                                          force    - The virtual CPU
                                                          will claim the feature is
                                                          supported regardless of
                                                          it being supported by host
                                                          CPU. require  - Guest creation
                                                          will fail unless the feature
                                                          is supported by the host
                                                          CPU or the hypervisor is
                                                          able to emulate it. optional
                                                          - The feature will be supported
                                                          by virtual CPU if and only
                                                          if it is supported by host
                                                          CPU. disable  - The feature
                                                          will not be supported by
                                                          virtual CPU. forbid   -
                                                          Guest creation will fail
                                                          if the feature is supported
                                                          by host CPU. Defaults to
                                                          require'
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                isolateEmulatorThread:
                                                  description: IsolateEmulatorThread
                                                    requests one more dedicated pCPU
                                                    to be allocated for the VMI to
                                                    place the emulator thread on it.
                                                  type: boolean
                                                model:
                                                  description: Model specifies the
                                                    CPU model inside the VMI. List
                                                    of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                                    It is possible to specify special
                                                    cases like "host-passthrough"
                                                    to get the same CPU as the node
                                                    and "host-model" to get CPU closest
                                                    to the node one. Defaults to host-model.
                                                  type: string
                                                numa:
                                                  description: NUMA allows specifying
                                                    settings for the guest NUMA topology
                                                  properties:
                                                    guestMappingPassthrough:
                                                      description: GuestMappingPassthrough
                                                        will create an efficient guest
                                                        topology based on host CPUs
                                                        exclusively assigned to a
                                                        pod. The created topology
                                                        ensures that memory and CPUs
                                                        on the virtual numa nodes
                                                        never cross boundaries of
                                                        host numa nodes.
                                                      type: object
                                                  type: object
                                                realtime:
                                                  description: Realtime instructs
                                                    the virt-launcher to tune the
                                                    VMI for lower latency, optional
                                                    for real time workloads
                                                  properties:
                                                    mask:
                                                      description: 'Mask defines the
                                                        vcpu mask expression that
                                                        defines which vcpus are used
                                                        for realtime. Format matches
                                                        libvirt''s expressions. Example:
                                                        "0-3,^1","0,2,3","2-3"'
                                                      type: string
                                                  type: object
                                                sockets:
                                                  description: Sockets specifies the
                                                    number of sockets inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                threads:
                                                  description: Threads specifies the
                                                    number of threads inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            devices:
                                              description: Devices allows adding disks,
                                                network interfaces, and others
                                              properties:
                                                autoattachGraphicsDevice:
                                                  description: Whether to attach the
                                                    default graphics device or not.
                                                    VNC will not be available if set
                                                    to false. Defaults to true.
                                                  type: boolean
                                                autoattachMemBalloon:
                                                  description: Whether to attach the
                                                    Memory balloon device with default
                                                    period. Period can be adjusted
                                                    in virt-config. Defaults to true.
                                                  type: boolean
                                                autoattachPodInterface:
                                                  description: Whether to attach a
                                                    pod network interface. Defaults
                                                    to true.
                                                  type: boolean
                                                autoattachSerialConsole:
                                                  description: Whether to attach the
                                                    default serial console or not.
                                                    Serial console access will not
                                                    be available if set to false.
                                                    Defaults to true.
                                                  type: boolean
                                                blockMultiQueue:
                                                  description: Whether or not to enable
                                                    virtio multi-queue for block devices.
                                                    Defaults to false.
                                                  type: boolean
                                                clientPassthrough:
                                                  description: To configure and access
                                                    client devices such as redirecting
                                                    USB
                                                  type: object
                                                disableHotplug:
                                                  description: DisableHotplug disabled
                                                    the ability to hotplug disks.
                                                  type: boolean
                                                disks:
                                                  description: Disks describes disks,
                                                    cdroms, floppy and luns which
                                                    are connected to the vmi.
                                                  items:
                                                    properties:
                                                      blockSize:
                                                        description: If specified,
                                                          the virtual disk will be
                                                          presented with the given
                                                          block sizes.
                                                        properties:
                                                          custom:
                                                            description: CustomBlockSize
                                                              represents the desired
                                                              logical and physical
                                                              block size for a VM
                                                              disk.
                                                            properties:
                                                              logical:
                                                                type: integer
                                                              physical:
                                                                type: integer
                                                            required:
                                                            - logical
                                                            - physical
                                                            type: object
                                                          matchVolume:
                                                            description: Represents
                                                              if a feature is enabled
                                                              or disabled.
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if the
                                                                  feature should be
                                                                  enabled or disabled
                                                                  on the guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                            type: object
                                                        type: object
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each disk
                                                          or interface that has a
                                                          boot order must have a unique
                                                          value. Disks without a boot
                                                          order are not tried if a
                                                          disk with a boot order exists.
                                                        type: integer
                                                      cache:
                                                        description: 'Cache specifies
                                                          which kvm disk cache mode
                                                          should be used. Supported
                                                          values are: CacheNone, CacheWriteThrough.'
                                                        type: string
                                                      cdrom:
                                                        description: Attach a volume
                                                          as a cdrom to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to true.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      dedicatedIOThread:
                                                        description: dedicatedIOThread
                                                          indicates this disk should
                                                          have an exclusive IO Thread.
                                                          Enabling this implies useIOThreads
                                                          = true. Defaults to false.
                                                        type: boolean
                                                      disk:
                                                        description: Attach a volume
                                                          as a disk to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          pciAddress:
                                                            description: 'If specified,
                                                              the virtual disk will
                                                              be placed on the guests
                                                              pci address with the
                                                              specified PCI address.
                                                              For example: 0000:81:01.10'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      floppy:
                                                        description: Attach a volume
                                                          as a floppy to the vmi.
                                                        properties:
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      io:
                                                        description: 'IO specifies
                                                          which QEMU disk IO mode
                                                          should be used. Supported
                                                          values are: native, default,
                                                          threads.'
                                                        type: string
                                                      lun:
                                                        description: Attach a volume
                                                          as a LUN to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      serial:
                                                        description: Serial provides
                                                          the ability to specify a
                                                          serial number for the disk
                                                          device.
                                                        type: string
                                                      tag:
                                                        description: If specified,
                                                          disk address and its tag
                                                          will be provided to the
                                                          guest via config drive metadata
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                filesystems:
                                                  description: Filesystems describes
                                                    filesystem which is connected
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      virtiofs:
                                                        description: Virtiofs is supported
                                                        type: object
                                                    required:
                                                    - name
                                                    - virtiofs
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                gpus:
                                                  description: Whether to attach a
                                                    GPU device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        type: string
                                                      name:
                                                        description: Name of the GPU
                                                          device as exposed by a device
                                                          plugin
                                                        type: string
                                                      virtualGPUOptions:
                                                        properties:
                                                          display:
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if a
                                                                  display addapter
                                                                  backed by a vGPU
                                                                  should be enabled
                                                                  or disabled on the
                                                                  guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                              ramFB:
                                                                description: Enables
                                                                  a boot framebuffer,
                                                                  until the guest
                                                                  OS loads a real
                                                                  GPU driver Defaults
                                                                  to true.
                                                                properties:
                                                                  enabled:
                                                                    description: Enabled
                                                                      determines if
                                                                      the feature
                                                                      should be enabled
                                                                      or disabled
                                                                      on the guest.
                                                                      Defaults to
                                                                      true.
                                                                    type: boolean
                                                                type: object
                                                            type: object
                                                        type: object
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                hostDevices:
                                                  description: Whether to attach a
                                                    host device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        description: DeviceName is
                                                          the resource name of the
                                                          host device exposed by a
                                                          device plugin
                                                        type: string
                                                      name:
                                                        type: string
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                inputs:
                                                  description: Inputs describe input
                                                    devices
                                                  items:
                                                    properties:
                                                      bus:
                                                        description: 'Bus indicates
                                                          the bus of input device
                                                          to emulate. Supported values:
                                                          virtio, usb.'
                                                        type: string
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      type:
                                                        description: 'Type indicated
                                                          the type of input device.
                                                          Supported values: tablet.'
                                                        type: string
                                                    required:
                                                    - name
                                                    - type
                                                    type: object
                                                  type: array
                                                interfaces:
                                                  description: Interfaces describe
                                                    network interfaces which are added
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each interface
                                                          or disk that has a boot
                                                          order must have a unique
                                                          value. Interfaces without
                                                          a boot order are not tried.
                                                        type: integer
                                                      bridge:
                                                        type: object
                                                      dhcpOptions:
                                                        description: If specified
                                                          the network interface will
                                                          pass additional DHCP options
                                                          to the VMI
                                                        properties:
                                                          bootFileName:
                                                            description: If specified
                                                              will pass option 67
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                          ntpServers:
                                                            description: If specified
                                                              will pass the configured
                                                              NTP server to the VM
                                                              via DHCP option 042.
                                                            items:
                                                              type: string
                                                            type: array
                                                          privateOptions:
                                                            description: 'If specified
                                                              will pass extra DHCP
                                                              options for private
                                                              use, range: 224-254'
                                                            items:
                                                              description: DHCPExtraOptions
                                                                defines Extra DHCP
                                                                options for a VM.
                                                              properties:
                                                                option:
                                                                  description: Option
                                                                    is an Integer
                                                                    value from 224-254
                                                                    Required.
                                                                  type: integer
                                                                value:
                                                                  description: Value
                                                                    is a String value
                                                                    for the Option
                                                                    provided Required.
                                                                  type: string
                                                              required:
                                                              - option
                                                              - value
                                                              type: object
                                                            type: array
                                                          tftpServerName:
                                                            description: If specified
                                                              will pass option 66
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                        type: object
                                                      macAddress:
                                                        description: 'Interface MAC
                                                          address. For example: de:ad:00:00:be:af
                                                          or DE-AD-00-00-BE-AF.'
                                                        type: string
                                                      macvtap:
                                                        type: object
                                                      masquerade:
                                                        type: object
                                                      model:
                                                        description: 'Interface model.
                                                          One of: e1000, e1000e, ne2k_pci,
                                                          pcnet, rtl8139, virtio.
                                                          Defaults to virtio. TODO:(ihar)
                                                          switch to enums once opengen-api
                                                          supports them. See: https://github.com/kubernetes/kube-openapi/issues/51'
                                                        type: string
                                                      name:
                                                        description: Logical name
                                                          of the interface as well
                                                          as a reference to the associated
                                                          networks. Must match the
                                                          Name of a Network.
                                                        type: string
                                                      pciAddress:
                                                        description: 'If specified,
                                                          the virtual network interface
                                                          will be placed on the guests
                                                          pci address with the specified
                                                          PCI address. For example:
                                                          0000:81:01.10'
                                                        type: string
                                                      ports:
                                                        description: List of ports
                                                          to be forwarded to the virtual
                                                          machine.
                                                        items:
                                                          description: Port repesents
                                                            a port to expose from
                                                            the virtual machine. Default
                                                            protocol TCP. The port
                                                            field is mandatory
                                                          properties:
                                                            name:
                                                              description: If specified,
                                                                this must be an IANA_SVC_NAME
                                                                and unique within
                                                                the pod. Each named
                                                                port in a pod must
                                                                have a unique name.
                                                                Name for the port
                                                                that can be referred
                                                                to by services.
                                                              type: string
                                                            port:
                                                              description: Number
                                                                of port to expose
                                                                for the virtual machine.
                                                                This must be a valid
                                                                port number, 0 < x
                                                                < 65536.
                                                              format: int32
                                                              type: integer
                                                            protocol:
                                                              description: Protocol
                                                                for port. Must be
                                                                UDP or TCP. Defaults
                                                                to "TCP".
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        type: array
                                                      slirp:
                                                        type: object
                                                      sriov:
                                                        type: object
                                                      tag:
                                                        description: If specified,
                                                          the virtual network interface
                                                          address and its tag will
                                                          be provided to the guest
                                                          via config drive
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                networkInterfaceMultiqueue:
                                                  description: If specified, virtual
                                                    network interfaces configured
                                                    with a virtio bus will also enable
                                                    the vhost multiqueue feature for
                                                    network devices. The number of
                                                    queues created depends on additional
                                                    factors of the VirtualMachineInstance,
                                                    like the number of guest CPUs.
                                                  type: boolean
                                                rng:
                                                  description: Whether to have random
                                                    number generator from host
                                                  type: object
                                                useVirtioTransitional:
                                                  description: Fall back to legacy
                                                    virtio 0.9 support if virtio bus
                                                    is selected on devices. This is
                                                    helpful for old machines like
                                                    CentOS6 or RHEL6 which do not
                                                    understand virtio_non_transitional
                                                    (virtio 1.0).
                                                  type: boolean
                                                watchdog:
                                                  description: Watchdog describes
                                                    a watchdog device which can be
                                                    added to the vmi.
                                                  properties:
                                                    i6300esb:
                                                      description: i6300esb watchdog
                                                        device.
                                                      properties:
                                                        action:
                                                          description: The action
                                                            to take. Valid values
                                                            are poweroff, reset, shutdown.
                                                            Defaults to reset.
                                                          type: string
                                                      type: object
                                                    name:
                                                      description: Name of the watchdog.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                              type: object
                                            features:
                                              description: Features like acpi, apic,
                                                hyperv, smm.
                                              properties:
                                                acpi:
                                                  description: ACPI enables/disables
                                                    ACPI inside the guest. Defaults
                                                    to enabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                apic:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                    endOfInterrupt:
                                                      description: EndOfInterrupt
                                                        enables the end of interrupt
                                                        notification in the guest.
                                                        Defaults to false.
                                                      type: boolean
                                                  type: object
                                                hyperv:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    evmcs:
                                                      description: EVMCS Speeds up
                                                        L2 vmexits, but disables other
                                                        virtualization features. Requires
                                                        vapic. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    frequencies:
                                                      description: Frequencies improves
                                                        the TSC clock source handling
                                                        for Hyper-V on KVM. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    ipi:
                                                      description: IPI improves performances
                                                        in overcommited environments.
                                                        Requires vpindex. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reenlightenment:
                                                      description: Reenlightenment
                                                        enables the notifications
                                                        on TSC frequency changes.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    relaxed:
                                                      description: Relaxed instructs
                                                        the guest OS to disable watchdog
                                                        timeouts. Defaults to the
                                                        machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reset:
                                                      description: Reset enables Hyperv
                                                        reboot/reset for the vmi.
                                                        Requires synic. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    runtime:
                                                      description: Runtime improves
                                                        the time accounting to improve
                                                        scheduling in the guest. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    spinlocks:
                                                      description: Spinlocks allows
                                                        to configure the spinlock
                                                        retry attempts.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        spinlocks:
                                                          description: Retries indicates
                                                            the number of retries.
                                                            Must be a value greater
                                                            or equal 4096. Defaults
                                                            to 4096.
                                                          format: int32
                                                          type: integer
                                                      type: object
                                                    synic:
                                                      description: SyNIC enables the
                                                        Synthetic Interrupt Controller.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    synictimer:
                                                      description: SyNICTimer enables
                                                        Synthetic Interrupt Controller
                                                        Timers, reducing CPU load.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        direct:
                                                          description: Represents
                                                            if a feature is enabled
                                                            or disabled.
                                                          properties:
                                                            enabled:
                                                              description: Enabled
                                                                determines if the
                                                                feature should be
                                                                enabled or disabled
                                                                on the guest. Defaults
                                                                to true.
                                                              type: boolean
                                                          type: object
                                                        enabled:
                                                          type: boolean
                                                      type: object
                                                    tlbflush:
                                                      description: TLBFlush improves
                                                        performances in overcommited
                                                        environments. Requires vpindex.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vapic:
                                                      description: VAPIC improves
                                                        the paravirtualized handling
                                                        of interrupts. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vendorid:
                                                      description: VendorID allows
                                                        setting the hypervisor vendor
                                                        id. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        vendorid:
                                                          description: VendorID sets
                                                            the hypervisor vendor
                                                            id, visible to the vmi.
                                                            String up to twelve characters.
                                                          type: string
                                                      type: object
                                                    vpindex:
                                                      description: VPIndex enables
                                                        the Virtual Processor Index
                                                        to help windows identifying
                                                        virtual processors. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kvm:
                                                  description: Configure how KVM presence
                                                    is exposed to the guest.
                                                  properties:
                                                    hidden:
                                                      description: Hide the KVM hypervisor
                                                        from standard MSR based discovery.
                                                        Defaults to false
                                                      type: boolean
                                                  type: object
                                                pvspinlock:
                                                  description: Notify the guest that
                                                    the host supports paravirtual
                                                    spinlocks. For older kernels this
                                                    feature should be explicitly disabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                smm:
                                                  description: SMM enables/disables
                                                    System Management Mode. TSEG not
                                                    yet implemented.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                              type: object
                                            firmware:
                                              description: Firmware.
                                              properties:
                                                bootloader:
                                                  description: Settings to control
                                                    the bootloader that is used.
                                                  properties:
                                                    bios:
                                                      description: If set (default),
                                                        BIOS will be used.
                                                      properties:
                                                        useSerial:
                                                          description: If set, the
                                                            BIOS output will be transmitted
                                                            over serial
                                                          type: boolean
                                                      type: object
                                                    efi:
                                                      description: If set, EFI will
                                                        be used instead of BIOS.
                                                      properties:
                                                        secureBoot:
                                                          description: If set, SecureBoot
                                                            will be enabled and the
                                                            OVMF roms will be swapped
                                                            for SecureBoot-enabled
                                                            ones. Requires SMM to
                                                            be enabled. Defaults to
                                                            true
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kernelBoot:
                                                  description: Settings to set the
                                                    kernel for booting.
                                                  properties:
                                                    container:
                                                      description: Container defines
                                                        the container that containes
                                                        kernel artifacts
                                                      properties:
                                                        image:
                                                          description: Image that
                                                            container initrd / kernel
                                                            files.
                                                          type: string
                                                        imagePullPolicy:
                                                          description: 'Image pull
                                                            policy. One of Always,
                                                            Never, IfNotPresent. Defaults
                                                            to Always if :latest tag
                                                            is specified, or IfNotPresent
                                                            otherwise. Cannot be updated.
                                                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                          type: string
                                                        imagePullSecret:
                                                          description: ImagePullSecret
                                                            is the name of the Docker
                                                            registry secret required
                                                            to pull the image. The
                                                            secret must already exist.
                                                          type: string
                                                        initrdPath:
                                                          description: the fully-qualified
                                                            path to the ramdisk image
                                                            in the host OS
                                                          type: string
                                                        kernelPath:
                                                          description: The fully-qualified
                                                            path to the kernel image
                                                            in the host OS
                                                          type: string
                                                      required:
                                                      - image
                                                      type: object
                                                    kernelArgs:
                                                      description: Arguments to be
                                                        passed to the kernel at boot
                                                        time
                                                      type: string
                                                  type: object
                                                serial:
                                                  description: The system-serial-number
                                                    in SMBIOS
                                                  type: string
                                                uuid:
                                                  description: UUID reported by the
                                                    vmi bios. Defaults to a random
                                                    generated uid.
                                                  type: string
                                              type: object
                                            ioThreadsPolicy:
                                              description: 'Controls whether or not
                                                disks will share IOThreads. Omitting
                                                IOThreadsPolicy disables use of IOThreads.
                                                One of: shared, auto'
                                              type: string
                                            machine:
                                              description: Machine type.
                                              properties:
                                                type:
                                                  description: QEMU machine type is
                                                    the actual chipset of the VirtualMachineInstance.
                                                  type: string
                                              type: object
                                            memory:
                                              description: Memory allow specifying
                                                the VMI memory features.
                                              properties:
                                                guest:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Guest allows to specifying
                                                    the amount of memory which is
                                                    visible inside the Guest OS. The
                                                    Guest must lie between Requests
                                                    and Limits from the resources
                                                    section. Defaults to the requested
                                                    memory in the resources section
                                                    if not specified.
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                hugepages:
                                                  description: Hugepages allow to
                                                    use hugepages for the VirtualMachineInstance
                                                    instead of regular memory.
                                                  properties:
                                                    pageSize:
                                                      description: PageSize specifies
                                                        the hugepage size, for x86_64
                                                        architecture valid values
                                                        are 1Gi and 2Mi.
                                                      type: string
                                                  type: object
                                              type: object
                                            resources:
                                              description: Resources describes the
                                                Compute Resources required by this
                                                vmi.
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. Valid resource keys are
                                                    "memory" and "cpu".
                                                  type: object
                                                overcommitGuestOverhead:
                                                  description: Don't ask the scheduler
                                                    to take the guest-management overhead
                                                    into account. Instead put the
                                                    overhead only into the container's
                                                    memory limit. This can lead to
                                                    crashes if all memory is in use
                                                    on a node. Defaults to false.
                                                  type: boolean
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Requests is a description
                                                    of the initial vmi resources.
                                                    Valid resource keys are "memory"
                                                    and "cpu".
                                                  type: object
                                              type: object
                                          required:
                                          - devices
                                          type: object
                                        evictionStrategy:
                                          description: EvictionStrategy can be set
                                            to "LiveMigrate" if the VirtualMachineInstance
                                            should be migrated instead of shut-off
                                            in case of a node drain.
                                          type: string
                                        hostname:
                                          description: Specifies the hostname of the
                                            vmi If not specified, the hostname will
                                            be set to the name of the vmi, if dhcp
                                            or cloud-init is configured properly.
                                          type: string
                                        livenessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            liveness. VirtualmachineInstances will
                                            be stopped if the probe fails. Cannot
                                            be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        networks:
                                          description: List of networks that can be
                                            attached to a vm's virtual interface.
                                          items:
                                            description: Network represents a network
                                              type and a resource that should be connected
                                              to the vm.
                                            properties:
                                              multus:
                                                description: Represents the multus
                                                  cni network.
                                                properties:
                                                  default:
                                                    description: Select the default
                                                      network and add it to the multus-cni.io/default-network
                                                      annotation.
                                                    type: boolean
                                                  networkName:
                                                    description: 'References to a
                                                      NetworkAttachmentDefinition
                                                      CRD object. Format: <networkName>,
                                                      <namespace>/<networkName>. If
                                                      namespace is not specified,
                                                      VMI namespace is assumed.'
                                                    type: string
                                                required:
                                                - networkName
                                                type: object
                                              name:
                                                description: 'Network name. Must be
                                                  a DNS_LABEL and unique within the
                                                  vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              pod:
                                                description: Represents the stock
                                                  pod network interface.
                                                properties:
                                                  vmIPv6NetworkCIDR:
                                                    description: IPv6 CIDR for the
                                                      vm network. Defaults to fd10:0:2::/120
                                                      if not specified.
                                                    type: string
                                                  vmNetworkCIDR:
                                                    description: CIDR for vm network.
                                                      Default 10.0.2.0/24 if not specified.
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: 'NodeSelector is a selector
                                            which must be true for the vmi to fit
                                            on a node. Selector which must match a
                                            node''s labels for the vmi to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                        priorityClassName:
                                          description: If specified, indicates the
                                            pod's priority. If not specified, the
                                            pod priority will be default or zero if
                                            there is no default.
                                          type: string
                                        readinessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            service readiness. VirtualmachineInstances
                                            will be removed from service endpoints
                                            if the probe fails. Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        schedulerName:
                                          description: If specified, the VMI will
                                            be dispatched by specified scheduler.
                                            If not specified, the VMI will be dispatched
                                            by default scheduler.
                                          type: string
                                        startStrategy:
                                          description: StartStrategy can be set to
                                            "Paused" if Virtual Machine should be
                                            started in paused state.
                                          type: string
                                        subdomain:
                                          description: If specified, the fully qualified
                                            vmi hostname will be "<hostname>.<subdomain>.<pod
                                            namespace>.svc.<cluster domain>". If not
                                            specified, the vmi will not have a domainname
                                            at all. The DNS entry will resolve to
                                            the vmi, no matter if the vmi itself can
                                            pick up a hostname.
                                          type: string
                                        terminationGracePeriodSeconds:
                                          description: Grace period observed after
                                            signalling a VirtualMachineInstance to
                                            stop after which the VirtualMachineInstance
                                            is force terminated.
                                          format: int64
                                          type: integer
                                        tolerations:
                                          description: If toleration is specified,
                                            obey all the toleration rules.
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                format: int64
                                                type: integer
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                            type: object
                                          type: array
                                        volumes:
                                          description: List of volumes that can be
                                            mounted by disks belonging to the vmi.
                                          items:
                                            description: Volume represents a named
                                              volume in a vmi.
                                            properties:
                                              cloudInitConfigDrive:
                                                description: 'CloudInitConfigDrive
                                                  represents a cloud-init Config Drive
                                                  user-data source. The Config Drive
                                                  data will be added as a disk to
                                                  the vmi. A proper cloud-init installation
                                                  is required inside the guest. More
                                                  info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      config drive inline cloud-init
                                                      networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains config drive cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  userData:
                                                    description: UserData contains
                                                      config drive inline cloud-init
                                                      userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      config drive cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              cloudInitNoCloud:
                                                description: 'CloudInitNoCloud represents
                                                  a cloud-init NoCloud user-data source.
                                                  The NoCloud data will be added as
                                                  a disk to the vmi. A proper cloud-init
                                                  installation is required inside
                                                  the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      NoCloud inline cloud-init networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains NoCloud cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  userData:
                                                    description: UserData contains
                                                      NoCloud inline cloud-init userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      NoCloud cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              configMap:
                                                description: 'ConfigMapSource represents
                                                  a reference to a ConfigMap in the
                                                  same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/'
                                                properties:
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or it's keys must
                                                      be defined
                                                    type: boolean
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              containerDisk:
                                                description: 'ContainerDisk references
                                                  a docker image, embedding a qcow
                                                  or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                                                properties:
                                                  image:
                                                    description: Image is the name
                                                      of the image with the embedded
                                                      disk.
                                                    type: string
                                                  imagePullPolicy:
                                                    description: 'Image pull policy.
                                                      One of Always, Never, IfNotPresent.
                                                      Defaults to Always if :latest
                                                      tag is specified, or IfNotPresent
                                                      otherwise. Cannot be updated.
                                                      More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                    type: string
                                                  imagePullSecret:
                                                    description: ImagePullSecret is
                                                      the name of the Docker registry
                                                      secret required to pull the
                                                      image. The secret must already
                                                      exist.
                                                    type: string
                                                  path:
                                                    description: Path defines the
                                                      path to disk file in the container
                                                    type: string
                                                required:
                                                - image
                                                type: object
                                              dataVolume:
                                                description: DataVolume represents
                                                  the dynamic creation a PVC for this
                                                  volume as well as the process of
                                                  populating that PVC with a disk
                                                  image.
                                                properties:
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  name:
                                                    description: Name represents the
                                                      name of the DataVolume in the
                                                      same namespace
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              downwardAPI:
                                                description: DownwardAPI represents
                                                  downward API about the pod that
                                                  should populate this volume
                                                properties:
                                                  fields:
                                                    description: Fields is a list
                                                      of downward API volume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              downwardMetrics:
                                                description: DownwardMetrics adds
                                                  a very small disk to VMIs which
                                                  contains a limited view of host
                                                  and guest metrics. The disk content
                                                  is compatible with vhostmd (https://github.com/vhostmd/vhostmd)
                                                  and vm-dump-metrics.
                                                type: object
                                              emptyDisk:
                                                description: 'EmptyDisk represents
                                                  a temporary disk which shares the
                                                  vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk.
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                - capacity
                                                type: object
                                              ephemeral:
                                                description: Ephemeral is a special
                                                  volume source that "wraps" specified
                                                  source and provides copy-on-write
                                                  image on top of it.
                                                properties:
                                                  persistentVolumeClaim:
                                                    description: 'PersistentVolumeClaimVolumeSource
                                                      represents a reference to a
                                                      PersistentVolumeClaim in the
                                                      same namespace. Directly attached
                                                      to the vmi via qemu. More info:
                                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    properties:
                                                      claimName:
                                                        description: 'ClaimName is
                                                          the name of a PersistentVolumeClaim
                                                          in the same namespace as
                                                          the pod using this volume.
                                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                        type: string
                                                      readOnly:
                                                        description: Will force the
                                                          ReadOnly setting in VolumeMounts.
                                                          Default false.
                                                        type: boolean
                                                    required:
                                                    - claimName
                                                    type: object
                                                type: object
                                              hostDisk:
                                                description: HostDisk represents a
                                                  disk created on the cluster level
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  path:
                                                    description: The path to HostDisk
                                                      image located on the cluster
                                                    type: string
                                                  shared:
                                                    description: Shared indicate whether
                                                      the path is shared between nodes
                                                    type: boolean
                                                  type:
                                                    description: Contains information
                                                      if disk.img exists or should
                                                      be created allowed options are
                                                      'Disk' and 'DiskOrCreate'
                                                    type: string
                                                required:
                                                - path
                                                - type
                                                type: object
                                              name:
                                                description: 'Volume''s name. Must
                                                  be a DNS_LABEL and unique within
                                                  the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              persistentVolumeClaim:
                                                description: 'PersistentVolumeClaimVolumeSource
                                                  represents a reference to a PersistentVolumeClaim
                                                  in the same namespace. Directly
                                                  attached to the vmi via qemu. More
                                                  info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                properties:
                                                  claimName:
                                                    description: 'ClaimName is the
                                                      name of a PersistentVolumeClaim
                                                      in the same namespace as the
                                                      pod using this volume. More
                                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    type: string
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  readOnly:
                                                    description: Will force the ReadOnly
                                                      setting in VolumeMounts. Default
                                                      false.
                                                    type: boolean
                                                required:
                                                - claimName
                                                type: object
                                              secret:
                                                description: 'SecretVolumeSource represents
                                                  a reference to a secret data in
                                                  the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/'
                                                properties:
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or it's keys must be
                                                      defined
                                                    type: boolean
                                                  secretName:
                                                    description: 'Name of the secret
                                                      in the pod''s namespace to use.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                    type: string
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              serviceAccount:
                                                description: 'ServiceAccountVolumeSource
                                                  represents a reference to a service
                                                  account. There can only be one volume
                                                  of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                properties:
                                                  serviceAccountName:
                                                    description: 'Name of the service
                                                      account in the pod''s namespace
                                                      to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                    type: string
                                                type: object
                                              sysprep:
                                                description: Represents a Sysprep
                                                  volume source.
                                                properties:
                                                  configMap:
                                                    description: ConfigMap references
                                                      a ConfigMap that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secret:
                                                    description: Secret references
                                                      a k8s Secret that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                      required:
                                      - domain
                                      type: object
                                  type: object
                              required:
                              - template
                              type: object
                          type: object
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: awsendpointservices.hypershift.openshift.io
  spec:
    group: hypershift.openshift.io
    names:
      kind: AWSEndpointService
      listKind: AWSEndpointServiceList
      plural: awsendpointservices
      singular: awsendpointservice
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AWSEndpointService specifies a request for an Endpoint Service
            in AWS
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSEndpointServiceSpec defines the desired state of AWSEndpointService
              properties:
                networkLoadBalancerName:
                  description: The name of the NLB for which an Endpoint Service should
                    be configured
                  type: string
                resourceTags:
                  description: Tags to apply to the EndpointService
                  items:
                    description: AWSResourceTag is a tag to apply to AWS resources
                      created for the cluster.
                    properties:
                      key:
                        description: Key is the key of the tag.
                        maxLength: 128
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                      value:
                        description: "Value is the value of the tag. \n Some AWS service
                          do not support empty values. Since tags are added to resources
                          in many services, the length of the tag value must meet
                          the requirements of all services."
                        maxLength: 256
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs is the list of subnet IDs to which guest
                    nodes can attach
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: AWSEndpointServiceStatus defines the observed state of
                AWSEndpointService
              properties:
                conditions:
                  description: "Conditions contains details for the current state
                    of the Endpoint Service request If there is an error processing
                    the request e.g. the NLB doesn't exist, then the Available condition
                    will be false, reason AWSErrorReason, and the error reported in
                    the message. \n Current condition types are: \"Available\""
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                dnsName:
                  description: DNSName is the name for the record created in the hypershift
                    private zone
                  type: string
                dnsZoneID:
                  description: DNSZoneID is ID for the hypershift private zone
                  type: string
                endpointID:
                  description: EndpointID is the ID of the Endpoint created in the
                    guest VPC
                  type: string
                endpointServiceName:
                  description: EndpointServiceName is the name of the Endpoint Service
                    created in the management VPC
                  type: string
              required:
              - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: hostedclusters.hypershift.openshift.io
  spec:
    group: hypershift.openshift.io
    names:
      kind: HostedCluster
      listKind: HostedClusterList
      plural: hostedclusters
      shortNames:
      - hc
      - hcs
      singular: hostedcluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Version
        jsonPath: .status.version.history[?(@.state=="Completed")].version
        name: Version
        type: string
      - description: KubeConfig Secret
        jsonPath: .status.kubeconfig.name
        name: KubeConfig
        type: string
      - description: Progress
        jsonPath: .status.version.history[?(@.state!="")].state
        name: Progress
        type: string
      - description: Available
        jsonPath: .status.conditions[?(@.type=="Available")].status
        name: Available
        type: string
      - description: Reason
        jsonPath: .status.conditions[?(@.type=="Available")].reason
        name: Reason
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HostedCluster is the primary representation of a HyperShift
            cluster and encapsulates the control plane and common data plane configuration.
            Creating a HostedCluster results in a fully functional OpenShift control
            plane with no attached nodes. To support workloads (e.g. pods), a HostedCluster
            may have one or more associated NodePool resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the HostedCluster.
              properties:
                auditWebhook:
                  description: "AuditWebhook contains metadata for configuring an
                    audit webhook endpoint for a cluster to process cluster audit
                    events. It references a secret that contains the webhook information
                    for the audit webhook endpoint. It is a secret because if the
                    endpoint has mTLS the kubeconfig will contain client keys. The
                    kubeconfig needs to be stored in the secret with a secret key
                    name that corresponds to the constant AuditWebhookKubeconfigKey.
                    \n This field is currently only supported on the IBMCloud platform."
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                autoscaling:
                  description: Autoscaling specifies auto-scaling behavior that applies
                    to all NodePools associated with the control plane.
                  properties:
                    maxNodeProvisionTime:
                      description: MaxNodeProvisionTime is the maximum time to wait
                        for node provisioning before considering the provisioning
                        to be unsuccessful, expressed as a Go duration string. The
                        default is 15 minutes.
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: MaxNodesTotal is the maximum allowable number of
                        nodes across all NodePools for a HostedCluster. The autoscaler
                        will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: MaxPodGracePeriod is the maximum seconds to wait
                        for graceful pod termination before scaling down a NodePool.
                        The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: "PodPriorityThreshold enables users to schedule
                        \"best-effort\" pods, which shouldn't trigger autoscaler actions,
                        but only run when there are spare resources available. The
                        default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption"
                      format: int32
                      type: integer
                  type: object
                configuration:
                  description: Configuration specifies configuration for individual
                    OCP components in the cluster, represented as embedded resources
                    that correspond to the openshift configuration API.
                  properties:
                    configMapRefs:
                      description: ConfigMapRefs holds references to any configmaps
                        referenced by configuration entries. Entries can reference
                        the configmaps using local object references.
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    items:
                      description: Items embeds the serialized configuration resources.
                      items:
                        type: object
                      type: array
                      x-kubernetes-preserve-unknown-fields: true
                    secretRefs:
                      description: SecretRefs holds references to any secrets referenced
                        by configuration entries. Entries can reference the secrets
                        using local object references.
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                  type: object
                controllerAvailabilityPolicy:
                  description: ControllerAvailabilityPolicy specifies the availability
                    policy applied to critical control plane components. The default
                    value is SingleReplica.
                  type: string
                dns:
                  description: DNS specifies DNS configuration for the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  default:
                    managementType: Managed
                  description: Etcd specifies configuration for the control plane
                    etcd cluster. The default ManagementType is Managed. Once set,
                    the ManagementType cannot be changed.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n     https://etcd-client:2379 \n If
                            the URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n     etcd-client-ca.crt:
                                Certificate Authority value     etcd-client.crt: Client
                                certificate value     etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS indicates whether this cluster's nodes will be
                    running in FIPS mode. If set to true, the control plane's ignition
                    server will be configured to expect that nodes joining the cluster
                    will be FIPS-enabled.
                  type: boolean
                imageContentSources:
                  description: ImageContentSources specifies image mirrors that can
                    be used by cluster nodes to pull content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  description: "InfraID is a globally unique identifier for the cluster.
                    This identifier will be used to associate various cloud resources
                    with the HostedCluster and its associated NodePools. \n TODO(dan):
                    consider moving this to .platform.aws.infraID"
                  type: string
                infrastructureAvailabilityPolicy:
                  description: InfrastructureAvailabilityPolicy specifies the availability
                    policy applied to infrastructure services which run on cluster
                    nodes. The default value is HighlyAvailable.
                  type: string
                issuerURL:
                  default: https://kubernetes.default.svc
                  description: IssuerURL is an OIDC issuer URL which is used as the
                    issuer in all ServiceAccount tokens generated by the control plane
                    API server. The default value is kubernetes.default.svc, which
                    only works for in-cluster validation.
                  type: string
                networking:
                  description: Networking specifies network configuration for the
                    cluster.
                  properties:
                    apiServer:
                      description: APIServer contains advanced network settings for
                        the API server that affect how the APIServer is exposed inside
                        a cluster node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress is the address that nodes
                            will use to talk to the API server. This is an address
                            associated with the loopback adapter of each node. If
                            not specified, 172.20.0.1 is used.
                          type: string
                        port:
                          description: Port is the port at which the APIServer is
                            exposed inside a node. Other pods using host networking
                            cannot listen on this port. If not specified, 6443 is
                            used.
                          format: int32
                          type: integer
                      type: object
                    machineCIDR:
                      description: "MachineCIDR is... \n TODO(dan): document it"
                      type: string
                    networkType:
                      default: OpenShiftSDN
                      description: NetworkType specifies the SDN provider used for
                        cluster networking.
                      enum:
                      - OpenShiftSDN
                      - Calico
                      type: string
                    podCIDR:
                      description: "PodCIDR is... \n TODO(dan): document it"
                      type: string
                    serviceCIDR:
                      description: "ServiceCIDR is... \n TODO(dan): document it"
                      type: string
                  required:
                  - machineCIDR
                  - networkType
                  - podCIDR
                  - serviceCIDR
                  type: object
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the cluster and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        cloudProviderConfig:
                          description: "CloudProviderConfig specifies AWS networking
                            configuration for the control plane. \n TODO(dan): should
                            this be named AWSNetworkConfig?"
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                arn:
                                  description: ARN of resource
                                  type: string
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        controlPlaneOperatorCreds:
                          description: "ControlPlaneOperatorCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the control-plane-operator policy. The secret
                            should have exactly one key, `credentials`, whose value
                            is an AWS credentials file. \n TODO(dan): document the
                            \"control plane operator policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. The secret should
                            have exactly one key, `credentials`, whose value is an
                            AWS credentials file. \n TODO(dan): document the \"cloud
                            controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. The secret should
                            have exactly one key, `credentials`, whose value is an
                            AWS credentials file. \n TODO(dan): document the \"node
                            pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        roles:
                          description: "Roles must contain exactly 4 entries representing
                            the locators for roles supporting the following OCP services:
                            \n - openshift-ingress-operator/cloud-credentials - openshift-image-registry/installer-cloud-credentials
                            - openshift-cluster-csi-drivers/ebs-cloud-credentials
                            - cloud-network-config-controller/cloud-credentials \n
                            Each role has unique permission requirements whose documentation
                            is TBD. \n TODO(dan): revisit this field; it's really
                            3 required fields with specific content requirements"
                          items:
                            properties:
                              arn:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - arn
                            - name
                            - namespace
                            type: object
                          type: array
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - controlPlaneOperatorCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      type: string
                  required:
                  - type
                  type: object
                pullSecret:
                  description: PullSecret references a pull secret to be injected
                    into the container runtime of all cluster nodes. The secret must
                    have a key named ".dockerconfigjson" whose value is the pull secret
                    JSON.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                release:
                  description: "Release specifies the desired OCP release payload
                    for the hosted cluster. \n Updating this field will trigger a
                    rollout of the control plane. The behavior of the rollout will
                    be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy."
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
                secretEncryption:
                  description: SecretEncryption specifies a Kubernetes secret encryption
                    strategy for the control plane.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                credentials:
                                  description: Credentials contains the name of the
                                    secret that holds the aws credentials that can
                                    be used to make the necessary KMS calls. It should
                                    at key AWSCredentialsFileSecretKey contain the
                                    aws credentials file that can be used to configure
                                    AWS SDKs
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                              required:
                              - credentials
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                services:
                  description: "Services specifies how individual control plane services
                    are published from the hosting cluster of the control plane. \n
                    If a given service is not present in this list, it will be exposed
                    publicly by default."
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: SSHKey references an SSH key to be injected into all
                    cluster node sshd servers. The secret must have a single key "id_rsa.pub"
                    whose value is the public part of an SSH key.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
              required:
              - infraID
              - issuerURL
              - networking
              - platform
              - pullSecret
              - release
              - services
              - sshKey
              type: object
            status:
              description: Status is the latest observed status of the HostedCluster.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a control plane's current state.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                ignitionEndpoint:
                  description: IgnitionEndpoint is the endpoint injected in the ign
                    config userdata. It exposes the config for instances to become
                    kubernetes nodes.
                  type: string
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret that
                    contains the initial kubeadmin user password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                kubeconfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for the cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                version:
                  description: Version is the status of the release version applied
                    to the HostedCluster.
                  properties:
                    desired:
                      description: desired is the version that the cluster is reconciling
                        towards. If the cluster is not yet fully initialized desired
                        will be set with the information available, which may be an
                        image or a tag.
                      properties:
                        image:
                          description: Image is the image pullspec of an OCP release
                            payload image.
                          pattern: ^(\w+\S+)$
                          type: string
                      required:
                      - image
                      type: object
                    history:
                      description: history contains a list of the most recent versions
                        applied to the cluster. This value may be empty during cluster
                        startup, and then will be updated when a new update is being
                        applied. The newest update is first in the list and it is
                        ordered by recency. Updates in the history have state Completed
                        if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of
                        update history is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to
                          the cluster.
                        properties:
                          acceptedRisks:
                            description: acceptedRisks records risks which were accepted
                              to initiate the update. For example, it may menition
                              an Upgradeable=False or missing signature that was overriden
                              via desiredUpdate.force, or an update that was initiated
                              despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: completionTime, if set, is when the update
                              was fully applied. The update that is currently being
                              applied will have a null completion time. Completion
                              time will always be set for entries that are not the
                              current update (usually to the started time of the next
                              update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: image is a container image location that
                              contains the update. This value is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update
                              was started.
                            format: date-time
                            type: string
                          state:
                            description: state reflects whether the update was fully
                              applied. The Partial state indicates the update is not
                              fully applied, while the Completed state indicates the
                              update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: verified indicates whether the provided update
                              was properly verified before it was installed. If this
                              is false the cluster may not be trusted. Verified does
                              not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: version is a semantic versioning identifying
                              the update version. If the requested image does not
                              define a version, or if a failure occurs retrieving
                              the image, this value may be empty.
                            type: string
                        required:
                        - completionTime
                        - image
                        - startedTime
                        - state
                        - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: observedGeneration reports which version of the
                        spec is being synced. If this value is not equal to metadata.generation,
                        then the desired and conditions fields may represent a previous
                        version.
                      format: int64
                      type: integer
                  required:
                  - desired
                  - observedGeneration
                  type: object
              required:
              - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: hostedcontrolplanes.hypershift.openshift.io
  spec:
    group: hypershift.openshift.io
    names:
      categories:
      - cluster-api
      kind: HostedControlPlane
      listKind: HostedControlPlaneList
      plural: hostedcontrolplanes
      shortNames:
      - hcp
      - hcps
      singular: hostedcontrolplane
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HostedControlPlane defines the desired state of HostedControlPlane
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HostedControlPlaneSpec defines the desired state of HostedControlPlane
              properties:
                apiAdvertiseAddress:
                  description: APIAdvertiseAddress is the address at which the APIServer
                    listens inside a worker.
                  type: string
                apiPort:
                  description: APIPort is the port at which the APIServer listens
                    inside a worker
                  format: int32
                  type: integer
                auditWebhook:
                  description: AuditWebhook contains metadata for configuring an audit
                    webhook endpoint for a cluster to process cluster audit events.
                    It references a secret that contains the webhook information for
                    the audit webhook endpoint. It is a secret because if the endpoint
                    has MTLS the kubeconfig will contain client keys. This is currently
                    only supported in IBM Cloud. The kubeconfig needs to be stored
                    in the secret with a secret key name that corresponds to the constant
                    AuditWebhookKubeconfigKey.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                configuration:
                  description: 'Configuration embeds resources that correspond to
                    the openshift configuration API: https://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html'
                  properties:
                    configMapRefs:
                      description: ConfigMapRefs holds references to any configmaps
                        referenced by configuration entries. Entries can reference
                        the configmaps using local object references.
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    items:
                      description: Items embeds the serialized configuration resources.
                      items:
                        type: object
                      type: array
                      x-kubernetes-preserve-unknown-fields: true
                    secretRefs:
                      description: SecretRefs holds references to any secrets referenced
                        by configuration entries. Entries can reference the secrets
                        using local object references.
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                  type: object
                controllerAvailabilityPolicy:
                  description: ControllerAvailabilityPolicy specifies whether to run
                    control plane controllers in HA mode Defaults to SingleReplica
                    when not set
                  type: string
                dns:
                  description: DNSSpec specifies the DNS configuration in the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  description: Etcd contains metadata about the etcd cluster the hypershift
                    managed Openshift control plane components use to store data.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n     https://etcd-client:2379 \n If
                            the URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n     etcd-client-ca.crt:
                                Certificate Authority value     etcd-client.crt: Client
                                certificate value     etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS specifies if the nodes for the cluster will be
                    running in FIPS mode
                  type: boolean
                imageContentSources:
                  description: ImageContentSources lists sources/repositories for
                    the release-image content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  type: string
                infrastructureAvailabilityPolicy:
                  description: InfrastructureAvailabilityPolicy specifies whether
                    to run infrastructure services that run on the guest cluster nodes
                    in HA mode Defaults to HighlyAvailable when not set
                  type: string
                issuerURL:
                  type: string
                kubeconfig:
                  description: KubeConfig specifies the name and key for the kubeconfig
                    secret
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                machineCIDR:
                  type: string
                networkType:
                  description: NetworkType specifies the SDN provider used for cluster
                    networking.
                  enum:
                  - OpenShiftSDN
                  - Calico
                  type: string
                platform:
                  description: PlatformSpec specifies the underlying infrastructure
                    provider for the cluster and is used to configure platform specific
                    behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        cloudProviderConfig:
                          description: "CloudProviderConfig specifies AWS networking
                            configuration for the control plane. \n TODO(dan): should
                            this be named AWSNetworkConfig?"
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                arn:
                                  description: ARN of resource
                                  type: string
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        controlPlaneOperatorCreds:
                          description: "ControlPlaneOperatorCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the control-plane-operator policy. The secret
                            should have exactly one key, `credentials`, whose value
                            is an AWS credentials file. \n TODO(dan): document the
                            \"control plane operator policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. The secret should
                            have exactly one key, `credentials`, whose value is an
                            AWS credentials file. \n TODO(dan): document the \"cloud
                            controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. The secret should
                            have exactly one key, `credentials`, whose value is an
                            AWS credentials file. \n TODO(dan): document the \"node
                            pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        roles:
                          description: "Roles must contain exactly 4 entries representing
                            the locators for roles supporting the following OCP services:
                            \n - openshift-ingress-operator/cloud-credentials - openshift-image-registry/installer-cloud-credentials
                            - openshift-cluster-csi-drivers/ebs-cloud-credentials
                            - cloud-network-config-controller/cloud-credentials \n
                            Each role has unique permission requirements whose documentation
                            is TBD. \n TODO(dan): revisit this field; it's really
                            3 required fields with specific content requirements"
                          items:
                            properties:
                              arn:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - arn
                            - name
                            - namespace
                            type: object
                          type: array
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - controlPlaneOperatorCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      type: string
                  required:
                  - type
                  type: object
                podCIDR:
                  type: string
                pullSecret:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                releaseImage:
                  type: string
                secretEncryption:
                  description: SecretEncryption contains metadata about the kubernetes
                    secret encryption strategy being used for the cluster when applicable.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                credentials:
                                  description: Credentials contains the name of the
                                    secret that holds the aws credentials that can
                                    be used to make the necessary KMS calls. It should
                                    at key AWSCredentialsFileSecretKey contain the
                                    aws credentials file that can be used to configure
                                    AWS SDKs
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                              required:
                              - credentials
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                serviceCIDR:
                  type: string
                services:
                  description: Services defines metadata about how control plane services
                    are published in the management cluster.
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
              required:
              - dns
              - etcd
              - infraID
              - issuerURL
              - machineCIDR
              - networkType
              - platform
              - podCIDR
              - pullSecret
              - releaseImage
              - serviceCIDR
              - services
              - sshKey
              type: object
            status:
              description: HostedControlPlaneStatus defines the observed state of
                HostedControlPlane
              properties:
                conditions:
                  description: 'Condition contains details for one aspect of the current
                    state of the HostedControlPlane. Current condition types are:
                    "Available"'
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint contains the endpoint information
                    by which external clients can access the control plane.  This
                    is populated after the infrastructure is ready.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                externalManagedControlPlane:
                  default: true
                  description: ExternalManagedControlPlane indicates to cluster-api
                    that the control plane is managed by an external service. https://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468
                  type: boolean
                initialized:
                  default: false
                  description: Initialized denotes whether or not the control plane
                    has provided a kubeadm-config. Once this condition is marked true,
                    its value is never changed. See the Ready condition for an indication
                    of the current readiness of the cluster's control plane. This
                    satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252
                  type: boolean
                kubeConfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for this control plane.
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret containing
                    the initial kubeadmin password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                lastReleaseImageTransitionTime:
                  description: lastReleaseImageTransitionTime is the time of the last
                    update to the current releaseImage property.
                  format: date-time
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the HostedControlPlane API Server
                    is ready to receive requests This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230
                  type: boolean
                releaseImage:
                  description: ReleaseImage is the release image applied to the hosted
                    control plane.
                  type: string
                version:
                  description: Version is the semantic version of the release applied
                    by the hosted control plane operator
                  type: string
              required:
              - conditions
              - initialized
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: null
    name: nodepools.hypershift.openshift.io
  spec:
    group: hypershift.openshift.io
    names:
      kind: NodePool
      listKind: NodePoolList
      plural: nodepools
      shortNames:
      - np
      - nps
      singular: nodepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Available Nodes
        jsonPath: .status.nodeCount
        name: NodeCount
        type: integer
      - description: Autoscaling Enabled
        jsonPath: .status.conditions[?(@.type=="AutoscalingEnabled")].status
        name: Autoscaling
        type: string
      - description: Node Autorepair Enabled
        jsonPath: .status.conditions[?(@.type=="AutorepairEnabled")].status
        name: Autorepair
        type: string
      - description: Current version
        jsonPath: .status.version
        name: Version
        type: string
      - description: UpdatingVersion in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingVersion")].status
        name: UpdatingVersion
        type: string
      - description: UpdatingConfig in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingConfig")].status
        name: UpdatingConfig
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: NodePool is a scalable set of worker nodes attached to a HostedCluster.
            NodePool machine architectures are uniform within a given pool, and are
            independent of the control plane’s underlying machine architecture.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the NodePool.
              properties:
                autoScaling:
                  description: Autoscaling specifies auto-scaling behavior for the
                    NodePool.
                  properties:
                    max:
                      description: Max is the maximum number of nodes allowed in the
                        pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                    min:
                      description: Min is the minimum number of nodes to maintain
                        in the pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - max
                  - min
                  type: object
                clusterName:
                  description: "ClusterName is the name of the HostedCluster this
                    NodePool belongs to. \n TODO(dan): Should this be a LocalObjectReference?"
                  type: string
                config:
                  description: "Config is a list of references to ConfigMaps containing
                    serialized MachineConfig resources to be injected into the ignition
                    configurations of nodes in the NodePool. The MachineConfig API
                    schema is defined here: \n https://github.com/openshift/machine-config-operator/blob/master/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L172
                    \n Each ConfigMap must have a single key named \"config\" whose
                    value is the JSON or YAML of a serialized MachineConfig. \n TODO
                    (alberto): this ConfigMaps are meant to contain MachineConfig,
                    KubeletConfig and ContainerRuntimeConfig but MCO only supports
                    MachineConfig in bootstrap mode atm. See: https://github.com/openshift/machine-config-operator/blob/9c6c2bfd7ed498bfbc296d530d1839bd6a177b0b/pkg/controller/bootstrap/bootstrap.go#L104-L119"
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  type: array
                management:
                  description: Management specifies behavior for managing nodes in
                    the pool, such as upgrade strategies and auto-repair behaviors.
                  properties:
                    autoRepair:
                      description: AutoRepair specifies whether health checks should
                        be enabled for machines in the NodePool. The default is false.
                      type: boolean
                    inPlace:
                      description: InPlace is the configuration for in-place upgrades.
                      type: object
                    replace:
                      default:
                        rollingUpdate:
                          maxSurge: 1
                          maxUnavailable: 0
                        strategy: RollingUpdate
                      description: Replace is the configuration for rolling upgrades.
                      properties:
                        rollingUpdate:
                          description: RollingUpdate specifies a rolling update strategy
                            which upgrades nodes by creating new nodes and deleting
                            the old ones.
                          properties:
                            maxSurge:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxSurge is the maximum number of nodes
                                that can be provisioned above the desired number of
                                nodes. \n Value can be an absolute number (ex: 5)
                                or a percentage of desired nodes (ex: 10%). \n Absolute
                                number is calculated from percentage by rounding up.
                                \n This can not be 0 if MaxUnavailable is 0. \n Defaults
                                to 1. \n Example: when this is set to 30%, new nodes
                                can be provisioned immediately when the rolling update
                                starts, such that the total number of old and new
                                nodes do not exceed 130% of desired nodes. Once old
                                nodes have been deleted, new nodes can be provisioned,
                                ensuring that total number of nodes running at any
                                time during the update is at most 130% of desired
                                nodes."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxUnavailable is the maximum number of
                                nodes that can be unavailable during the update. \n
                                Value can be an absolute number (ex: 5) or a percentage
                                of desired nodes (ex: 10%). \n Absolute number is
                                calculated from percentage by rounding down. \n This
                                can not be 0 if MaxSurge is 0. \n Defaults to 0. \n
                                Example: when this is set to 30%, old nodes can be
                                deleted down to 70% of desired nodes immediately when
                                the rolling update starts. Once new nodes are ready,
                                more old nodes be deleted, followed by provisioning
                                new nodes, ensuring that the total number of nodes
                                available at all times during the update is at least
                                70% of desired nodes."
                              x-kubernetes-int-or-string: true
                          type: object
                        strategy:
                          description: Strategy is the node replacement strategy for
                            nodes in the pool.
                          enum:
                          - RollingUpdate
                          - OnDelete
                          type: string
                      type: object
                    upgradeType:
                      description: UpgradeType specifies the type of strategy for
                        handling upgrades.
                      enum:
                      - Replace
                      - InPlace
                      type: string
                  required:
                  - upgradeType
                  type: object
                nodeCount:
                  description: NodeCount is the desired number of nodes the pool should
                    maintain. If unset, the default value is 0.
                  format: int32
                  type: integer
                nodeDrainTimeout:
                  description: 'NodeDrainTimeout is the total amount of time that
                    the controller will spend on draining a node. The default value
                    is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                    TODO (alberto): Today changing this field will trigger a recreate
                    rolling update, which kind of defeats the purpose of the change.
                    In future we plan to propagate this field in-place. https://github.com/kubernetes-sigs/cluster-api/issues/5880'
                  type: string
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the NodePool and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies the configuration used when using
                        Agent platform.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains labels that must
                            be set on an Agent in order to be selected for a Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        minCPUs:
                          description: MinCPUs specifies the minimum number of CPU
                            cores required.
                          format: int32
                          type: integer
                        minMemoryMiB:
                          description: MinMemoryMiB specifies the minimum amount of
                            RAM required, in MiB.
                          format: int32
                          type: integer
                      type: object
                    aws:
                      description: AWS specifies the configuration used when operating
                        on AWS.
                      properties:
                        ami:
                          description: AMI is the image id to use for node instances.
                            If unspecified, the default is chosen based on the NodePool
                            release payload image.
                          type: string
                        instanceProfile:
                          description: InstanceProfile is the AWS EC2 instance profile,
                            which is a container for an IAM role that the EC2 instance
                            uses.
                          type: string
                        instanceType:
                          description: InstanceType is an ec2 instance type for node
                            instances (e.g. m5.large).
                          type: string
                        resourceTags:
                          description: "ResourceTags is an optional list of additional
                            tags to apply to AWS node instances. \n These will be
                            merged with HostedCluster scoped tags, and HostedCluster
                            tags take precedence in case of conflicts. \n See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user."
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        rootVolume:
                          description: RootVolume specifies configuration for the
                            root volume of node instances.
                          properties:
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. This is only valid for type io1.
                              format: int64
                              type: integer
                            size:
                              description: "Size specifies size (in Gi) of the storage
                                device. \n Must be greater than the image snapshot
                                size or 8 (whichever is greater)."
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                        securityGroups:
                          description: SecurityGroups is an optional set of security
                            groups to associate with node instances.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID, ARN, or filters. Only one
                              of ID, ARN or Filters may be specified. Specifying more
                              than one will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        subnet:
                          description: Subnet is the subnet to use for node instances.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                      required:
                      - instanceType
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: Kubevirt specifies the configuration used when
                        operating on KubeVirt platform.
                      properties:
                        nodeTemplate:
                          description: NodeTemplate Spec contains the VirtualMachineInstance
                            specification.
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineSpec contains the VirtualMachine
                                specification.
                              properties:
                                dataVolumeTemplates:
                                  description: dataVolumeTemplates is a list of dataVolumes
                                    that the VirtualMachineInstance template can reference.
                                    DataVolumes in this list are dynamically created
                                    for the VirtualMachine and are tied to the VirtualMachine's
                                    life-cycle.
                                  items:
                                    nullable: true
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        nullable: true
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      spec:
                                        description: DataVolumeSpec contains the DataVolume
                                          specification.
                                        properties:
                                          checkpoints:
                                            description: Checkpoints is a list of
                                              DataVolumeCheckpoints, representing
                                              stages in a multistage import.
                                            items:
                                              description: DataVolumeCheckpoint defines
                                                a stage in a warm migration.
                                              properties:
                                                current:
                                                  description: Current is the identifier
                                                    of the snapshot created for this
                                                    checkpoint.
                                                  type: string
                                                previous:
                                                  description: Previous is the identifier
                                                    of the snapshot from the previous
                                                    checkpoint.
                                                  type: string
                                              required:
                                              - current
                                              - previous
                                              type: object
                                            type: array
                                          contentType:
                                            description: 'DataVolumeContentType options:
                                              "kubevirt", "archive"'
                                            enum:
                                            - kubevirt
                                            - archive
                                            type: string
                                          finalCheckpoint:
                                            description: FinalCheckpoint indicates
                                              whether the current DataVolumeCheckpoint
                                              is the final checkpoint.
                                            type: boolean
                                          preallocation:
                                            description: Preallocation controls whether
                                              storage for DataVolumes should be allocated
                                              in advance.
                                            type: boolean
                                          priorityClassName:
                                            description: PriorityClassName for Importer,
                                              Cloner and Uploader pod
                                            type: string
                                          pvc:
                                            description: PVC is the PVC specification
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external
                                                  controller can support the specified
                                                  data source, it will create a new
                                                  volume based on the contents of
                                                  the specified data source. If the
                                                  AnyVolumeDataSource feature gate
                                                  is enabled, this field will always
                                                  have the same contents as the DataSourceRef
                                                  field.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              dataSourceRef:
                                                description: 'Specifies the object
                                                  from which to populate the volume
                                                  with data, if a non-empty volume
                                                  is desired. This may be any local
                                                  object from a non-empty API group
                                                  (non core object) or a PersistentVolumeClaim
                                                  object. When this field is specified,
                                                  volume binding will only succeed
                                                  if the type of the specified object
                                                  matches some installed volume populator
                                                  or dynamic provisioner. This field
                                                  will replace the functionality of
                                                  the DataSource field and as such
                                                  if both fields are non-empty, they
                                                  must have the same value. For backwards
                                                  compatibility, both fields (DataSource
                                                  and DataSourceRef) will be set to
                                                  the same value automatically if
                                                  one of them is empty and the other
                                                  is non-empty. There are two important
                                                  differences between DataSource and
                                                  DataSourceRef: * While DataSource
                                                  only allows two specific types of
                                                  objects, DataSourceRef   allows
                                                  any non-core object, as well as
                                                  PersistentVolumeClaim objects. *
                                                  While DataSource ignores disallowed
                                                  values (dropping them), DataSourceRef   preserves
                                                  all values, and generates an error
                                                  if a disallowed value is   specified.
                                                  (Alpha) Using this field requires
                                                  the AnyVolumeDataSource feature
                                                  gate to be enabled.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. If RecoverVolumeExpansionFailure
                                                  feature is enabled users are allowed
                                                  to specify resource requirements
                                                  that are lower than previous value
                                                  but must still be higher than capacity
                                                  recorded in the status field of
                                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                          source:
                                            description: Source is the src of the
                                              data for the requested DataVolume
                                            properties:
                                              blank:
                                                description: DataVolumeBlankImage
                                                  provides the parameters to create
                                                  a new raw blank image for the PVC
                                                type: object
                                              http:
                                                description: DataVolumeSourceHTTP
                                                  can be either an http or https endpoint,
                                                  with an optional basic auth user
                                                  name and password, and an optional
                                                  configmap containing additional
                                                  CAs
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  extraHeaders:
                                                    description: ExtraHeaders is a
                                                      list of strings containing extra
                                                      headers to include with HTTP
                                                      transfer requests
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretExtraHeaders:
                                                    description: SecretExtraHeaders
                                                      is a list of Secret references,
                                                      each containing an extra HTTP
                                                      header that may include sensitive
                                                      information
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretRef:
                                                    description: SecretRef A Secret
                                                      reference, the secret should
                                                      contain accessKeyId (user name)
                                                      base64 encoded, and secretKey
                                                      (password) also base64 encoded
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the http(s) endpoint
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              imageio:
                                                description: DataVolumeSourceImageIO
                                                  provides the parameters to create
                                                  a Data Volume from an imageio source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the CA cert
                                                    type: string
                                                  diskId:
                                                    description: DiskID provides id
                                                      of a disk to be imported
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the ovirt-engine
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the ovirt-engine
                                                    type: string
                                                required:
                                                - diskId
                                                - url
                                                type: object
                                              pvc:
                                                description: DataVolumeSourcePVC provides
                                                  the parameters to create a Data
                                                  Volume from an existing PVC
                                                properties:
                                                  name:
                                                    description: The name of the source
                                                      PVC
                                                    type: string
                                                  namespace:
                                                    description: The namespace of
                                                      the source PVC
                                                    type: string
                                                required:
                                                - name
                                                - namespace
                                                type: object
                                              registry:
                                                description: DataVolumeSourceRegistry
                                                  provides the parameters to create
                                                  a Data Volume from an registry source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the Registry
                                                      certs
                                                    type: string
                                                  imageStream:
                                                    description: ImageStream is the
                                                      name of image stream for import
                                                    type: string
                                                  pullMethod:
                                                    description: PullMethod can be
                                                      either "pod" (default import),
                                                      or "node" (node docker cache
                                                      based import)
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the Registry source
                                                    type: string
                                                  url:
                                                    description: 'URL is the url of
                                                      the registry source (starting
                                                      with the scheme: docker, oci-archive)'
                                                    type: string
                                                type: object
                                              s3:
                                                description: DataVolumeSourceS3 provides
                                                  the parameters to create a Data
                                                  Volume from an S3 source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the S3 source
                                                    type: string
                                                  url:
                                                    description: URL is the url of
                                                      the S3 source
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              upload:
                                                description: DataVolumeSourceUpload
                                                  provides the parameters to create
                                                  a Data Volume by uploading the source
                                                type: object
                                              vddk:
                                                description: DataVolumeSourceVDDK
                                                  provides the parameters to create
                                                  a Data Volume from a Vmware source
                                                properties:
                                                  backingFile:
                                                    description: BackingFile is the
                                                      path to the virtual hard disk
                                                      to migrate from vCenter/ESXi
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      a reference to a secret containing
                                                      the username and password needed
                                                      to access the vCenter or ESXi
                                                      host
                                                    type: string
                                                  thumbprint:
                                                    description: Thumbprint is the
                                                      certificate thumbprint of the
                                                      vCenter or ESXi host
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the vCenter or ESXi host with
                                                      the VM to migrate
                                                    type: string
                                                  uuid:
                                                    description: UUID is the UUID
                                                      of the virtual machine that
                                                      the backing file is attached
                                                      to in vCenter/ESXi
                                                    type: string
                                                type: object
                                            type: object
                                          sourceRef:
                                            description: SourceRef is an indirect
                                              reference to the source of data for
                                              the requested DataVolume
                                            properties:
                                              kind:
                                                description: The kind of the source
                                                  reference, currently only "DataSource"
                                                  is supported
                                                type: string
                                              name:
                                                description: The name of the source
                                                  reference
                                                type: string
                                              namespace:
                                                description: The namespace of the
                                                  source reference, defaults to the
                                                  DataVolume namespace
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          storage:
                                            description: Storage is the requested
                                              storage specification
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  * An existing custom resource that
                                                  implements data population (Alpha)
                                                  In order to use custom resource
                                                  types that implement data population,
                                                  the AnyVolumeDataSource feature
                                                  gate must be enabled. If the provisioner
                                                  or an external controller can support
                                                  the specified data source, it will
                                                  create a new volume based on the
                                                  contents of the specified data source.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                        type: object
                                      status:
                                        description: DataVolumeTemplateDummyStatus
                                          is here simply for backwards compatibility
                                          with a previous API.
                                        nullable: true
                                        type: object
                                    required:
                                    - spec
                                    type: object
                                  type: array
                                flavor:
                                  description: FlavorMatcher references a flavor that
                                    is used to fill fields in Template
                                  properties:
                                    kind:
                                      description: 'Kind specifies which flavor resource
                                        is referenced. Allowed values are: "VirtualMachineFlavor"
                                        and "VirtualMachineClusterFlavor". If not
                                        specified, "VirtualMachineClusterFlavor" is
                                        used by default.'
                                      type: string
                                    name:
                                      description: Name is the name of the VirtualMachineFlavor
                                        or VirtualMachineClusterFlavor
                                      type: string
                                    profile:
                                      description: Profile is the name of a custom
                                        profile in the flavor. If left empty, the
                                        default profile is used.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                runStrategy:
                                  description: Running state indicates the requested
                                    running state of the VirtualMachineInstance mutually
                                    exclusive with Running
                                  type: string
                                running:
                                  description: Running controls whether the associatied
                                    VirtualMachineInstance is created or not Mutually
                                    exclusive with RunStrategy
                                  type: boolean
                                template:
                                  description: Template is the direct specification
                                    of VirtualMachineInstance
                                  properties:
                                    metadata:
                                      nullable: true
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: VirtualMachineInstance Spec contains
                                        the VirtualMachineInstance specification.
                                      properties:
                                        accessCredentials:
                                          description: Specifies a set of public keys
                                            to inject into the vm guest
                                          items:
                                            description: AccessCredential represents
                                              a credential source that can be used
                                              to authorize remote access to the vm
                                              guest Only one of its members may be
                                              specified.
                                            properties:
                                              sshPublicKey:
                                                description: SSHPublicKey represents
                                                  the source and method of applying
                                                  a ssh public key into a guest virtual
                                                  machine.
                                                properties:
                                                  propagationMethod:
                                                    description: PropagationMethod
                                                      represents how the public key
                                                      is injected into the vm guest.
                                                    properties:
                                                      configDrive:
                                                        description: ConfigDrivePropagation
                                                          means that the ssh public
                                                          keys are injected into the
                                                          VM using metadata using
                                                          the configDrive cloud-init
                                                          provider
                                                        type: object
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means ssh public keys are
                                                          dynamically injected into
                                                          the vm at runtime via the
                                                          qemu guest agent. This feature
                                                          requires the qemu guest
                                                          agent to be running within
                                                          the guest.
                                                        properties:
                                                          users:
                                                            description: Users represents
                                                              a list of guest users
                                                              that should have the
                                                              ssh public keys added
                                                              to their authorized_keys
                                                              file.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: set
                                                        required:
                                                        - users
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the public keys are pulled
                                                      from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                              userPassword:
                                                description: UserPassword represents
                                                  the source and method for applying
                                                  a guest user's password
                                                properties:
                                                  propagationMethod:
                                                    description: propagationMethod
                                                      represents how the user passwords
                                                      are injected into the vm guest.
                                                    properties:
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means passwords are dynamically
                                                          injected into the vm at
                                                          runtime via the qemu guest
                                                          agent. This feature requires
                                                          the qemu guest agent to
                                                          be running within the guest.
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the user passwords are
                                                      pulled from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        affinity:
                                          description: If affinity is specifies, obey
                                            all the affinity rules
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - preference
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                      type: array
                                                  required:
                                                  - nodeSelectorTerms
                                                  type: object
                                              type: object
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces. This
                                                              field is beta-level
                                                              and is only honored
                                                              when PodAffinityNamespaceSelector
                                                              feature is enabled.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace"
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces. This
                                                              field is beta-level
                                                              and is only honored
                                                              when PodAffinityNamespaceSelector
                                                              feature is enabled.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace"
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                          type: object
                                        dnsConfig:
                                          description: Specifies the DNS parameters
                                            of a pod. Parameters specified here will
                                            be merged to the generated DNS configuration
                                            based on DNSPolicy.
                                          properties:
                                            nameservers:
                                              description: A list of DNS name server
                                                IP addresses. This will be appended
                                                to the base nameservers generated
                                                from DNSPolicy. Duplicated nameservers
                                                will be removed.
                                              items:
                                                type: string
                                              type: array
                                            options:
                                              description: A list of DNS resolver
                                                options. This will be merged with
                                                the base options generated from DNSPolicy.
                                                Duplicated entries will be removed.
                                                Resolution options given in Options
                                                will override those that appear in
                                                the base DNSPolicy.
                                              items:
                                                description: PodDNSConfigOption defines
                                                  DNS resolver options of a pod.
                                                properties:
                                                  name:
                                                    description: Required.
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            searches:
                                              description: A list of DNS search domains
                                                for host-name lookup. This will be
                                                appended to the base search paths
                                                generated from DNSPolicy. Duplicated
                                                search paths will be removed.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        dnsPolicy:
                                          description: Set DNS policy for the pod.
                                            Defaults to "ClusterFirst". Valid values
                                            are 'ClusterFirstWithHostNet', 'ClusterFirst',
                                            'Default' or 'None'. DNS parameters given
                                            in DNSConfig will be merged with the policy
                                            selected with DNSPolicy. To have DNS options
                                            set along with hostNetwork, you have to
                                            specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                                          type: string
                                        domain:
                                          description: Specification of the desired
                                            behavior of the VirtualMachineInstance
                                            on the host.
                                          properties:
                                            chassis:
                                              description: Chassis specifies the chassis
                                                info passed to the domain.
                                              properties:
                                                asset:
                                                  type: string
                                                manufacturer:
                                                  type: string
                                                serial:
                                                  type: string
                                                sku:
                                                  type: string
                                                version:
                                                  type: string
                                              type: object
                                            clock:
                                              description: Clock sets the clock and
                                                timers of the vmi.
                                              properties:
                                                timer:
                                                  description: Timer specifies whih
                                                    timers are attached to the vmi.
                                                  properties:
                                                    hpet:
                                                      description: HPET (High Precision
                                                        Event Timer) - multiple timers
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "merge", "discard".
                                                          type: string
                                                      type: object
                                                    hyperv:
                                                      description: Hyperv (Hypervclock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For windows guests.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    kvm:
                                                      description: "KVM \t(KVM clock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For linux guests."
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    pit:
                                                      description: PIT (Programmable
                                                        Interval Timer) - a timer
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "discard".
                                                          type: string
                                                      type: object
                                                    rtc:
                                                      description: RTC (Real Time
                                                        Clock) - a continuously running
                                                        timer with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup".
                                                          type: string
                                                        track:
                                                          description: Track the guest
                                                            or the wall clock.
                                                          type: string
                                                      type: object
                                                  type: object
                                                timezone:
                                                  description: Timezone sets the guest
                                                    clock to the specified timezone.
                                                    Zone name follows the TZ environment
                                                    variable format (e.g. 'America/New_York').
                                                  type: string
                                                utc:
                                                  description: UTC sets the guest
                                                    clock to UTC on each boot. If
                                                    an offset is specified, guest
                                                    changes to the clock will be kept
                                                    during reboots and are not reset.
                                                  properties:
                                                    offsetSeconds:
                                                      description: OffsetSeconds specifies
                                                        an offset in seconds, relative
                                                        to UTC. If set, guest changes
                                                        to the clock will be kept
                                                        during reboots and not reset.
                                                      type: integer
                                                  type: object
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            cpu:
                                              description: CPU allow specified the
                                                detailed CPU topology inside the vmi.
                                              properties:
                                                cores:
                                                  description: Cores specifies the
                                                    number of cores inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                dedicatedCpuPlacement:
                                                  description: DedicatedCPUPlacement
                                                    requests the scheduler to place
                                                    the VirtualMachineInstance on
                                                    a node with enough dedicated pCPUs
                                                    and pin the vCPUs to it.
                                                  type: boolean
                                                features:
                                                  description: Features specifies
                                                    the CPU features list inside the
                                                    VMI.
                                                  items:
                                                    description: CPUFeature allows
                                                      specifying a CPU feature.
                                                    properties:
                                                      name:
                                                        description: Name of the CPU
                                                          feature
                                                        type: string
                                                      policy:
                                                        description: 'Policy is the
                                                          CPU feature attribute which
                                                          can have the following attributes:
                                                          force    - The virtual CPU
                                                          will claim the feature is
                                                          supported regardless of
                                                          it being supported by host
                                                          CPU. require  - Guest creation
                                                          will fail unless the feature
                                                          is supported by the host
                                                          CPU or the hypervisor is
                                                          able to emulate it. optional
                                                          - The feature will be supported
                                                          by virtual CPU if and only
                                                          if it is supported by host
                                                          CPU. disable  - The feature
                                                          will not be supported by
                                                          virtual CPU. forbid   -
                                                          Guest creation will fail
                                                          if the feature is supported
                                                          by host CPU. Defaults to
                                                          require'
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                isolateEmulatorThread:
                                                  description: IsolateEmulatorThread
                                                    requests one more dedicated pCPU
                                                    to be allocated for the VMI to
                                                    place the emulator thread on it.
                                                  type: boolean
                                                model:
                                                  description: Model specifies the
                                                    CPU model inside the VMI. List
                                                    of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                                    It is possible to specify special
                                                    cases like "host-passthrough"
                                                    to get the same CPU as the node
                                                    and "host-model" to get CPU closest
                                                    to the node one. Defaults to host-model.
                                                  type: string
                                                numa:
                                                  description: NUMA allows specifying
                                                    settings for the guest NUMA topology
                                                  properties:
                                                    guestMappingPassthrough:
                                                      description: GuestMappingPassthrough
                                                        will create an efficient guest
                                                        topology based on host CPUs
                                                        exclusively assigned to a
                                                        pod. The created topology
                                                        ensures that memory and CPUs
                                                        on the virtual numa nodes
                                                        never cross boundaries of
                                                        host numa nodes.
                                                      type: object
                                                  type: object
                                                realtime:
                                                  description: Realtime instructs
                                                    the virt-launcher to tune the
                                                    VMI for lower latency, optional
                                                    for real time workloads
                                                  properties:
                                                    mask:
                                                      description: 'Mask defines the
                                                        vcpu mask expression that
                                                        defines which vcpus are used
                                                        for realtime. Format matches
                                                        libvirt''s expressions. Example:
                                                        "0-3,^1","0,2,3","2-3"'
                                                      type: string
                                                  type: object
                                                sockets:
                                                  description: Sockets specifies the
                                                    number of sockets inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                threads:
                                                  description: Threads specifies the
                                                    number of threads inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            devices:
                                              description: Devices allows adding disks,
                                                network interfaces, and others
                                              properties:
                                                autoattachGraphicsDevice:
                                                  description: Whether to attach the
                                                    default graphics device or not.
                                                    VNC will not be available if set
                                                    to false. Defaults to true.
                                                  type: boolean
                                                autoattachMemBalloon:
                                                  description: Whether to attach the
                                                    Memory balloon device with default
                                                    period. Period can be adjusted
                                                    in virt-config. Defaults to true.
                                                  type: boolean
                                                autoattachPodInterface:
                                                  description: Whether to attach a
                                                    pod network interface. Defaults
                                                    to true.
                                                  type: boolean
                                                autoattachSerialConsole:
                                                  description: Whether to attach the
                                                    default serial console or not.
                                                    Serial console access will not
                                                    be available if set to false.
                                                    Defaults to true.
                                                  type: boolean
                                                blockMultiQueue:
                                                  description: Whether or not to enable
                                                    virtio multi-queue for block devices.
                                                    Defaults to false.
                                                  type: boolean
                                                clientPassthrough:
                                                  description: To configure and access
                                                    client devices such as redirecting
                                                    USB
                                                  type: object
                                                disableHotplug:
                                                  description: DisableHotplug disabled
                                                    the ability to hotplug disks.
                                                  type: boolean
                                                disks:
                                                  description: Disks describes disks,
                                                    cdroms, floppy and luns which
                                                    are connected to the vmi.
                                                  items:
                                                    properties:
                                                      blockSize:
                                                        description: If specified,
                                                          the virtual disk will be
                                                          presented with the given
                                                          block sizes.
                                                        properties:
                                                          custom:
                                                            description: CustomBlockSize
                                                              represents the desired
                                                              logical and physical
                                                              block size for a VM
                                                              disk.
                                                            properties:
                                                              logical:
                                                                type: integer
                                                              physical:
                                                                type: integer
                                                            required:
                                                            - logical
                                                            - physical
                                                            type: object
                                                          matchVolume:
                                                            description: Represents
                                                              if a feature is enabled
                                                              or disabled.
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if the
                                                                  feature should be
                                                                  enabled or disabled
                                                                  on the guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                            type: object
                                                        type: object
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each disk
                                                          or interface that has a
                                                          boot order must have a unique
                                                          value. Disks without a boot
                                                          order are not tried if a
                                                          disk with a boot order exists.
                                                        type: integer
                                                      cache:
                                                        description: 'Cache specifies
                                                          which kvm disk cache mode
                                                          should be used. Supported
                                                          values are: CacheNone, CacheWriteThrough.'
                                                        type: string
                                                      cdrom:
                                                        description: Attach a volume
                                                          as a cdrom to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to true.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      dedicatedIOThread:
                                                        description: dedicatedIOThread
                                                          indicates this disk should
                                                          have an exclusive IO Thread.
                                                          Enabling this implies useIOThreads
                                                          = true. Defaults to false.
                                                        type: boolean
                                                      disk:
                                                        description: Attach a volume
                                                          as a disk to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          pciAddress:
                                                            description: 'If specified,
                                                              the virtual disk will
                                                              be placed on the guests
                                                              pci address with the
                                                              specified PCI address.
                                                              For example: 0000:81:01.10'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      floppy:
                                                        description: Attach a volume
                                                          as a floppy to the vmi.
                                                        properties:
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      io:
                                                        description: 'IO specifies
                                                          which QEMU disk IO mode
                                                          should be used. Supported
                                                          values are: native, default,
                                                          threads.'
                                                        type: string
                                                      lun:
                                                        description: Attach a volume
                                                          as a LUN to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      serial:
                                                        description: Serial provides
                                                          the ability to specify a
                                                          serial number for the disk
                                                          device.
                                                        type: string
                                                      tag:
                                                        description: If specified,
                                                          disk address and its tag
                                                          will be provided to the
                                                          guest via config drive metadata
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                filesystems:
                                                  description: Filesystems describes
                                                    filesystem which is connected
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      virtiofs:
                                                        description: Virtiofs is supported
                                                        type: object
                                                    required:
                                                    - name
                                                    - virtiofs
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                gpus:
                                                  description: Whether to attach a
                                                    GPU device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        type: string
                                                      name:
                                                        description: Name of the GPU
                                                          device as exposed by a device
                                                          plugin
                                                        type: string
                                                      virtualGPUOptions:
                                                        properties:
                                                          display:
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if a
                                                                  display addapter
                                                                  backed by a vGPU
                                                                  should be enabled
                                                                  or disabled on the
                                                                  guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                              ramFB:
                                                                description: Enables
                                                                  a boot framebuffer,
                                                                  until the guest
                                                                  OS loads a real
                                                                  GPU driver Defaults
                                                                  to true.
                                                                properties:
                                                                  enabled:
                                                                    description: Enabled
                                                                      determines if
                                                                      the feature
                                                                      should be enabled
                                                                      or disabled
                                                                      on the guest.
                                                                      Defaults to
                                                                      true.
                                                                    type: boolean
                                                                type: object
                                                            type: object
                                                        type: object
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                hostDevices:
                                                  description: Whether to attach a
                                                    host device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        description: DeviceName is
                                                          the resource name of the
                                                          host device exposed by a
                                                          device plugin
                                                        type: string
                                                      name:
                                                        type: string
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                inputs:
                                                  description: Inputs describe input
                                                    devices
                                                  items:
                                                    properties:
                                                      bus:
                                                        description: 'Bus indicates
                                                          the bus of input device
                                                          to emulate. Supported values:
                                                          virtio, usb.'
                                                        type: string
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      type:
                                                        description: 'Type indicated
                                                          the type of input device.
                                                          Supported values: tablet.'
                                                        type: string
                                                    required:
                                                    - name
                                                    - type
                                                    type: object
                                                  type: array
                                                interfaces:
                                                  description: Interfaces describe
                                                    network interfaces which are added
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each interface
                                                          or disk that has a boot
                                                          order must have a unique
                                                          value. Interfaces without
                                                          a boot order are not tried.
                                                        type: integer
                                                      bridge:
                                                        type: object
                                                      dhcpOptions:
                                                        description: If specified
                                                          the network interface will
                                                          pass additional DHCP options
                                                          to the VMI
                                                        properties:
                                                          bootFileName:
                                                            description: If specified
                                                              will pass option 67
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                          ntpServers:
                                                            description: If specified
                                                              will pass the configured
                                                              NTP server to the VM
                                                              via DHCP option 042.
                                                            items:
                                                              type: string
                                                            type: array
                                                          privateOptions:
                                                            description: 'If specified
                                                              will pass extra DHCP
                                                              options for private
                                                              use, range: 224-254'
                                                            items:
                                                              description: DHCPExtraOptions
                                                                defines Extra DHCP
                                                                options for a VM.
                                                              properties:
                                                                option:
                                                                  description: Option
                                                                    is an Integer
                                                                    value from 224-254
                                                                    Required.
                                                                  type: integer
                                                                value:
                                                                  description: Value
                                                                    is a String value
                                                                    for the Option
                                                                    provided Required.
                                                                  type: string
                                                              required:
                                                              - option
                                                              - value
                                                              type: object
                                                            type: array
                                                          tftpServerName:
                                                            description: If specified
                                                              will pass option 66
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                        type: object
                                                      macAddress:
                                                        description: 'Interface MAC
                                                          address. For example: de:ad:00:00:be:af
                                                          or DE-AD-00-00-BE-AF.'
                                                        type: string
                                                      macvtap:
                                                        type: object
                                                      masquerade:
                                                        type: object
                                                      model:
                                                        description: 'Interface model.
                                                          One of: e1000, e1000e, ne2k_pci,
                                                          pcnet, rtl8139, virtio.
                                                          Defaults to virtio. TODO:(ihar)
                                                          switch to enums once opengen-api
                                                          supports them. See: https://github.com/kubernetes/kube-openapi/issues/51'
                                                        type: string
                                                      name:
                                                        description: Logical name
                                                          of the interface as well
                                                          as a reference to the associated
                                                          networks. Must match the
                                                          Name of a Network.
                                                        type: string
                                                      pciAddress:
                                                        description: 'If specified,
                                                          the virtual network interface
                                                          will be placed on the guests
                                                          pci address with the specified
                                                          PCI address. For example:
                                                          0000:81:01.10'
                                                        type: string
                                                      ports:
                                                        description: List of ports
                                                          to be forwarded to the virtual
                                                          machine.
                                                        items:
                                                          description: Port repesents
                                                            a port to expose from
                                                            the virtual machine. Default
                                                            protocol TCP. The port
                                                            field is mandatory
                                                          properties:
                                                            name:
                                                              description: If specified,
                                                                this must be an IANA_SVC_NAME
                                                                and unique within
                                                                the pod. Each named
                                                                port in a pod must
                                                                have a unique name.
                                                                Name for the port
                                                                that can be referred
                                                                to by services.
                                                              type: string
                                                            port:
                                                              description: Number
                                                                of port to expose
                                                                for the virtual machine.
                                                                This must be a valid
                                                                port number, 0 < x
                                                                < 65536.
                                                              format: int32
                                                              type: integer
                                                            protocol:
                                                              description: Protocol
                                                                for port. Must be
                                                                UDP or TCP. Defaults
                                                                to "TCP".
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        type: array
                                                      slirp:
                                                        type: object
                                                      sriov:
                                                        type: object
                                                      tag:
                                                        description: If specified,
                                                          the virtual network interface
                                                          address and its tag will
                                                          be provided to the guest
                                                          via config drive
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                networkInterfaceMultiqueue:
                                                  description: If specified, virtual
                                                    network interfaces configured
                                                    with a virtio bus will also enable
                                                    the vhost multiqueue feature for
                                                    network devices. The number of
                                                    queues created depends on additional
                                                    factors of the VirtualMachineInstance,
                                                    like the number of guest CPUs.
                                                  type: boolean
                                                rng:
                                                  description: Whether to have random
                                                    number generator from host
                                                  type: object
                                                useVirtioTransitional:
                                                  description: Fall back to legacy
                                                    virtio 0.9 support if virtio bus
                                                    is selected on devices. This is
                                                    helpful for old machines like
                                                    CentOS6 or RHEL6 which do not
                                                    understand virtio_non_transitional
                                                    (virtio 1.0).
                                                  type: boolean
                                                watchdog:
                                                  description: Watchdog describes
                                                    a watchdog device which can be
                                                    added to the vmi.
                                                  properties:
                                                    i6300esb:
                                                      description: i6300esb watchdog
                                                        device.
                                                      properties:
                                                        action:
                                                          description: The action
                                                            to take. Valid values
                                                            are poweroff, reset, shutdown.
                                                            Defaults to reset.
                                                          type: string
                                                      type: object
                                                    name:
                                                      description: Name of the watchdog.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                              type: object
                                            features:
                                              description: Features like acpi, apic,
                                                hyperv, smm.
                                              properties:
                                                acpi:
                                                  description: ACPI enables/disables
                                                    ACPI inside the guest. Defaults
                                                    to enabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                apic:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                    endOfInterrupt:
                                                      description: EndOfInterrupt
                                                        enables the end of interrupt
                                                        notification in the guest.
                                                        Defaults to false.
                                                      type: boolean
                                                  type: object
                                                hyperv:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    evmcs:
                                                      description: EVMCS Speeds up
                                                        L2 vmexits, but disables other
                                                        virtualization features. Requires
                                                        vapic. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    frequencies:
                                                      description: Frequencies improves
                                                        the TSC clock source handling
                                                        for Hyper-V on KVM. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    ipi:
                                                      description: IPI improves performances
                                                        in overcommited environments.
                                                        Requires vpindex. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reenlightenment:
                                                      description: Reenlightenment
                                                        enables the notifications
                                                        on TSC frequency changes.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    relaxed:
                                                      description: Relaxed instructs
                                                        the guest OS to disable watchdog
                                                        timeouts. Defaults to the
                                                        machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reset:
                                                      description: Reset enables Hyperv
                                                        reboot/reset for the vmi.
                                                        Requires synic. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    runtime:
                                                      description: Runtime improves
                                                        the time accounting to improve
                                                        scheduling in the guest. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    spinlocks:
                                                      description: Spinlocks allows
                                                        to configure the spinlock
                                                        retry attempts.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        spinlocks:
                                                          description: Retries indicates
                                                            the number of retries.
                                                            Must be a value greater
                                                            or equal 4096. Defaults
                                                            to 4096.
                                                          format: int32
                                                          type: integer
                                                      type: object
                                                    synic:
                                                      description: SyNIC enables the
                                                        Synthetic Interrupt Controller.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    synictimer:
                                                      description: SyNICTimer enables
                                                        Synthetic Interrupt Controller
                                                        Timers, reducing CPU load.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        direct:
                                                          description: Represents
                                                            if a feature is enabled
                                                            or disabled.
                                                          properties:
                                                            enabled:
                                                              description: Enabled
                                                                determines if the
                                                                feature should be
                                                                enabled or disabled
                                                                on the guest. Defaults
                                                                to true.
                                                              type: boolean
                                                          type: object
                                                        enabled:
                                                          type: boolean
                                                      type: object
                                                    tlbflush:
                                                      description: TLBFlush improves
                                                        performances in overcommited
                                                        environments. Requires vpindex.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vapic:
                                                      description: VAPIC improves
                                                        the paravirtualized handling
                                                        of interrupts. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vendorid:
                                                      description: VendorID allows
                                                        setting the hypervisor vendor
                                                        id. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        vendorid:
                                                          description: VendorID sets
                                                            the hypervisor vendor
                                                            id, visible to the vmi.
                                                            String up to twelve characters.
                                                          type: string
                                                      type: object
                                                    vpindex:
                                                      description: VPIndex enables
                                                        the Virtual Processor Index
                                                        to help windows identifying
                                                        virtual processors. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kvm:
                                                  description: Configure how KVM presence
                                                    is exposed to the guest.
                                                  properties:
                                                    hidden:
                                                      description: Hide the KVM hypervisor
                                                        from standard MSR based discovery.
                                                        Defaults to false
                                                      type: boolean
                                                  type: object
                                                pvspinlock:
                                                  description: Notify the guest that
                                                    the host supports paravirtual
                                                    spinlocks. For older kernels this
                                                    feature should be explicitly disabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                smm:
                                                  description: SMM enables/disables
                                                    System Management Mode. TSEG not
                                                    yet implemented.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                              type: object
                                            firmware:
                                              description: Firmware.
                                              properties:
                                                bootloader:
                                                  description: Settings to control
                                                    the bootloader that is used.
                                                  properties:
                                                    bios:
                                                      description: If set (default),
                                                        BIOS will be used.
                                                      properties:
                                                        useSerial:
                                                          description: If set, the
                                                            BIOS output will be transmitted
                                                            over serial
                                                          type: boolean
                                                      type: object
                                                    efi:
                                                      description: If set, EFI will
                                                        be used instead of BIOS.
                                                      properties:
                                                        secureBoot:
                                                          description: If set, SecureBoot
                                                            will be enabled and the
                                                            OVMF roms will be swapped
                                                            for SecureBoot-enabled
                                                            ones. Requires SMM to
                                                            be enabled. Defaults to
                                                            true
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kernelBoot:
                                                  description: Settings to set the
                                                    kernel for booting.
                                                  properties:
                                                    container:
                                                      description: Container defines
                                                        the container that containes
                                                        kernel artifacts
                                                      properties:
                                                        image:
                                                          description: Image that
                                                            container initrd / kernel
                                                            files.
                                                          type: string
                                                        imagePullPolicy:
                                                          description: 'Image pull
                                                            policy. One of Always,
                                                            Never, IfNotPresent. Defaults
                                                            to Always if :latest tag
                                                            is specified, or IfNotPresent
                                                            otherwise. Cannot be updated.
                                                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                          type: string
                                                        imagePullSecret:
                                                          description: ImagePullSecret
                                                            is the name of the Docker
                                                            registry secret required
                                                            to pull the image. The
                                                            secret must already exist.
                                                          type: string
                                                        initrdPath:
                                                          description: the fully-qualified
                                                            path to the ramdisk image
                                                            in the host OS
                                                          type: string
                                                        kernelPath:
                                                          description: The fully-qualified
                                                            path to the kernel image
                                                            in the host OS
                                                          type: string
                                                      required:
                                                      - image
                                                      type: object
                                                    kernelArgs:
                                                      description: Arguments to be
                                                        passed to the kernel at boot
                                                        time
                                                      type: string
                                                  type: object
                                                serial:
                                                  description: The system-serial-number
                                                    in SMBIOS
                                                  type: string
                                                uuid:
                                                  description: UUID reported by the
                                                    vmi bios. Defaults to a random
                                                    generated uid.
                                                  type: string
                                              type: object
                                            ioThreadsPolicy:
                                              description: 'Controls whether or not
                                                disks will share IOThreads. Omitting
                                                IOThreadsPolicy disables use of IOThreads.
                                                One of: shared, auto'
                                              type: string
                                            machine:
                                              description: Machine type.
                                              properties:
                                                type:
                                                  description: QEMU machine type is
                                                    the actual chipset of the VirtualMachineInstance.
                                                  type: string
                                              type: object
                                            memory:
                                              description: Memory allow specifying
                                                the VMI memory features.
                                              properties:
                                                guest:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Guest allows to specifying
                                                    the amount of memory which is
                                                    visible inside the Guest OS. The
                                                    Guest must lie between Requests
                                                    and Limits from the resources
                                                    section. Defaults to the requested
                                                    memory in the resources section
                                                    if not specified.
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                hugepages:
                                                  description: Hugepages allow to
                                                    use hugepages for the VirtualMachineInstance
                                                    instead of regular memory.
                                                  properties:
                                                    pageSize:
                                                      description: PageSize specifies
                                                        the hugepage size, for x86_64
                                                        architecture valid values
                                                        are 1Gi and 2Mi.
                                                      type: string
                                                  type: object
                                              type: object
                                            resources:
                                              description: Resources describes the
                                                Compute Resources required by this
                                                vmi.
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. Valid resource keys are
                                                    "memory" and "cpu".
                                                  type: object
                                                overcommitGuestOverhead:
                                                  description: Don't ask the scheduler
                                                    to take the guest-management overhead
                                                    into account. Instead put the
                                                    overhead only into the container's
                                                    memory limit. This can lead to
                                                    crashes if all memory is in use
                                                    on a node. Defaults to false.
                                                  type: boolean
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Requests is a description
                                                    of the initial vmi resources.
                                                    Valid resource keys are "memory"
                                                    and "cpu".
                                                  type: object
                                              type: object
                                          required:
                                          - devices
                                          type: object
                                        evictionStrategy:
                                          description: EvictionStrategy can be set
                                            to "LiveMigrate" if the VirtualMachineInstance
                                            should be migrated instead of shut-off
                                            in case of a node drain.
                                          type: string
                                        hostname:
                                          description: Specifies the hostname of the
                                            vmi If not specified, the hostname will
                                            be set to the name of the vmi, if dhcp
                                            or cloud-init is configured properly.
                                          type: string
                                        livenessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            liveness. VirtualmachineInstances will
                                            be stopped if the probe fails. Cannot
                                            be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        networks:
                                          description: List of networks that can be
                                            attached to a vm's virtual interface.
                                          items:
                                            description: Network represents a network
                                              type and a resource that should be connected
                                              to the vm.
                                            properties:
                                              multus:
                                                description: Represents the multus
                                                  cni network.
                                                properties:
                                                  default:
                                                    description: Select the default
                                                      network and add it to the multus-cni.io/default-network
                                                      annotation.
                                                    type: boolean
                                                  networkName:
                                                    description: 'References to a
                                                      NetworkAttachmentDefinition
                                                      CRD object. Format: <networkName>,
                                                      <namespace>/<networkName>. If
                                                      namespace is not specified,
                                                      VMI namespace is assumed.'
                                                    type: string
                                                required:
                                                - networkName
                                                type: object
                                              name:
                                                description: 'Network name. Must be
                                                  a DNS_LABEL and unique within the
                                                  vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              pod:
                                                description: Represents the stock
                                                  pod network interface.
                                                properties:
                                                  vmIPv6NetworkCIDR:
                                                    description: IPv6 CIDR for the
                                                      vm network. Defaults to fd10:0:2::/120
                                                      if not specified.
                                                    type: string
                                                  vmNetworkCIDR:
                                                    description: CIDR for vm network.
                                                      Default 10.0.2.0/24 if not specified.
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: 'NodeSelector is a selector
                                            which must be true for the vmi to fit
                                            on a node. Selector which must match a
                                            node''s labels for the vmi to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                        priorityClassName:
                                          description: If specified, indicates the
                                            pod's priority. If not specified, the
                                            pod priority will be default or zero if
                                            there is no default.
                                          type: string
                                        readinessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            service readiness. VirtualmachineInstances
                                            will be removed from service endpoints
                                            if the probe fails. Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        schedulerName:
                                          description: If specified, the VMI will
                                            be dispatched by specified scheduler.
                                            If not specified, the VMI will be dispatched
                                            by default scheduler.
                                          type: string
                                        startStrategy:
                                          description: StartStrategy can be set to
                                            "Paused" if Virtual Machine should be
                                            started in paused state.
                                          type: string
                                        subdomain:
                                          description: If specified, the fully qualified
                                            vmi hostname will be "<hostname>.<subdomain>.<pod
                                            namespace>.svc.<cluster domain>". If not
                                            specified, the vmi will not have a domainname
                                            at all. The DNS entry will resolve to
                                            the vmi, no matter if the vmi itself can
                                            pick up a hostname.
                                          type: string
                                        terminationGracePeriodSeconds:
                                          description: Grace period observed after
                                            signalling a VirtualMachineInstance to
                                            stop after which the VirtualMachineInstance
                                            is force terminated.
                                          format: int64
                                          type: integer
                                        tolerations:
                                          description: If toleration is specified,
                                            obey all the toleration rules.
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                format: int64
                                                type: integer
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                            type: object
                                          type: array
                                        volumes:
                                          description: List of volumes that can be
                                            mounted by disks belonging to the vmi.
                                          items:
                                            description: Volume represents a named
                                              volume in a vmi.
                                            properties:
                                              cloudInitConfigDrive:
                                                description: 'CloudInitConfigDrive
                                                  represents a cloud-init Config Drive
                                                  user-data source. The Config Drive
                                                  data will be added as a disk to
                                                  the vmi. A proper cloud-init installation
                                                  is required inside the guest. More
                                                  info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      config drive inline cloud-init
                                                      networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains config drive cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  userData:
                                                    description: UserData contains
                                                      config drive inline cloud-init
                                                      userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      config drive cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              cloudInitNoCloud:
                                                description: 'CloudInitNoCloud represents
                                                  a cloud-init NoCloud user-data source.
                                                  The NoCloud data will be added as
                                                  a disk to the vmi. A proper cloud-init
                                                  installation is required inside
                                                  the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      NoCloud inline cloud-init networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains NoCloud cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  userData:
                                                    description: UserData contains
                                                      NoCloud inline cloud-init userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      NoCloud cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              configMap:
                                                description: 'ConfigMapSource represents
                                                  a reference to a ConfigMap in the
                                                  same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/'
                                                properties:
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or it's keys must
                                                      be defined
                                                    type: boolean
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              containerDisk:
                                                description: 'ContainerDisk references
                                                  a docker image, embedding a qcow
                                                  or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                                                properties:
                                                  image:
                                                    description: Image is the name
                                                      of the image with the embedded
                                                      disk.
                                                    type: string
                                                  imagePullPolicy:
                                                    description: 'Image pull policy.
                                                      One of Always, Never, IfNotPresent.
                                                      Defaults to Always if :latest
                                                      tag is specified, or IfNotPresent
                                                      otherwise. Cannot be updated.
                                                      More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                    type: string
                                                  imagePullSecret:
                                                    description: ImagePullSecret is
                                                      the name of the Docker registry
                                                      secret required to pull the
                                                      image. The secret must already
                                                      exist.
                                                    type: string
                                                  path:
                                                    description: Path defines the
                                                      path to disk file in the container
                                                    type: string
                                                required:
                                                - image
                                                type: object
                                              dataVolume:
                                                description: DataVolume represents
                                                  the dynamic creation a PVC for this
                                                  volume as well as the process of
                                                  populating that PVC with a disk
                                                  image.
                                                properties:
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  name:
                                                    description: Name represents the
                                                      name of the DataVolume in the
                                                      same namespace
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              downwardAPI:
                                                description: DownwardAPI represents
                                                  downward API about the pod that
                                                  should populate this volume
                                                properties:
                                                  fields:
                                                    description: Fields is a list
                                                      of downward API volume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              downwardMetrics:
                                                description: DownwardMetrics adds
                                                  a very small disk to VMIs which
                                                  contains a limited view of host
                                                  and guest metrics. The disk content
                                                  is compatible with vhostmd (https://github.com/vhostmd/vhostmd)
                                                  and vm-dump-metrics.
                                                type: object
                                              emptyDisk:
                                                description: 'EmptyDisk represents
                                                  a temporary disk which shares the
                                                  vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk.
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                - capacity
                                                type: object
                                              ephemeral:
                                                description: Ephemeral is a special
                                                  volume source that "wraps" specified
                                                  source and provides copy-on-write
                                                  image on top of it.
                                                properties:
                                                  persistentVolumeClaim:
                                                    description: 'PersistentVolumeClaimVolumeSource
                                                      represents a reference to a
                                                      PersistentVolumeClaim in the
                                                      same namespace. Directly attached
                                                      to the vmi via qemu. More info:
                                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    properties:
                                                      claimName:
                                                        description: 'ClaimName is
                                                          the name of a PersistentVolumeClaim
                                                          in the same namespace as
                                                          the pod using this volume.
                                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                        type: string
                                                      readOnly:
                                                        description: Will force the
                                                          ReadOnly setting in VolumeMounts.
                                                          Default false.
                                                        type: boolean
                                                    required:
                                                    - claimName
                                                    type: object
                                                type: object
                                              hostDisk:
                                                description: HostDisk represents a
                                                  disk created on the cluster level
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  path:
                                                    description: The path to HostDisk
                                                      image located on the cluster
                                                    type: string
                                                  shared:
                                                    description: Shared indicate whether
                                                      the path is shared between nodes
                                                    type: boolean
                                                  type:
                                                    description: Contains information
                                                      if disk.img exists or should
                                                      be created allowed options are
                                                      'Disk' and 'DiskOrCreate'
                                                    type: string
                                                required:
                                                - path
                                                - type
                                                type: object
                                              name:
                                                description: 'Volume''s name. Must
                                                  be a DNS_LABEL and unique within
                                                  the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              persistentVolumeClaim:
                                                description: 'PersistentVolumeClaimVolumeSource
                                                  represents a reference to a PersistentVolumeClaim
                                                  in the same namespace. Directly
                                                  attached to the vmi via qemu. More
                                                  info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                properties:
                                                  claimName:
                                                    description: 'ClaimName is the
                                                      name of a PersistentVolumeClaim
                                                      in the same namespace as the
                                                      pod using this volume. More
                                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    type: string
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  readOnly:
                                                    description: Will force the ReadOnly
                                                      setting in VolumeMounts. Default
                                                      false.
                                                    type: boolean
                                                required:
                                                - claimName
                                                type: object
                                              secret:
                                                description: 'SecretVolumeSource represents
                                                  a reference to a secret data in
                                                  the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/'
                                                properties:
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or it's keys must be
                                                      defined
                                                    type: boolean
                                                  secretName:
                                                    description: 'Name of the secret
                                                      in the pod''s namespace to use.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                    type: string
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              serviceAccount:
                                                description: 'ServiceAccountVolumeSource
                                                  represents a reference to a service
                                                  account. There can only be one volume
                                                  of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                properties:
                                                  serviceAccountName:
                                                    description: 'Name of the service
                                                      account in the pod''s namespace
                                                      to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                    type: string
                                                type: object
                                              sysprep:
                                                description: Represents a Sysprep
                                                  volume source.
                                                properties:
                                                  configMap:
                                                    description: ConfigMap references
                                                      a ConfigMap that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                  secret:
                                                    description: Secret references
                                                      a k8s Secret that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                      required:
                                      - domain
                                      type: object
                                  type: object
                              required:
                              - template
                              type: object
                          type: object
                      type: object
                    type:
                      description: Type specifies the platform name.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      type: string
                  required:
                  - type
                  type: object
                release:
                  description: Release specifies the OCP release used for the NodePool.
                    This informs the ignition configuration for machines, as well
                    as other platform specific machine properties (e.g. an AMI on
                    the AWS platform).
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
              required:
              - clusterName
              - management
              - platform
              - release
              type: object
            status:
              description: Status is the latest observed status of the NodePool.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of the node pool's current state.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                nodeCount:
                  description: NodeCount is the latest observed number of nodes in
                    the pool.
                  format: int32
                  type: integer
                version:
                  description: Version is the semantic version of the latest applied
                    release specified by the NodePool.
                  type: string
              required:
              - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.nodeCount
          statusReplicasPath: .status.nodeCount
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
parameters:
- name: OPERATOR_IMG
  value: quay.io/hypershift/hypershift-operator
- name: IMAGE_TAG
  value: latest
- name: NAMESPACE
  value: hypershift
- name: OIDC_S3_NAME
- name: OIDC_S3_REGION
- name: OIDC_S3_CREDS_SECRET
  value: oidc-s3-creds
- name: OIDC_S3_CREDS_SECRET_KEY
  value: credentials
- name: OPERATOR_REPLICAS
  value: "1"
