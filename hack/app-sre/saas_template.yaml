apiVersion: v1
kind: Template
metadata:
  name: hypershift-operator-template
objects:
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift control plane pods
    not critical to serving the API.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-control-plane
  value: 100000000
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift etcd pods.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-etcd
  value: 100002000
- apiVersion: scheduling.k8s.io/v1
  description: This priority class should be used for hypershift control plane pods
    critical to serving the API.
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-api-critical
  value: 100001000
- apiVersion: scheduling.k8s.io/v1
  description: This priority class is used for hypershift operator pods
  kind: PriorityClass
  metadata:
    creationTimestamp: null
    name: hypershift-operator
  value: 100003000
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: null
    name: ${NAMESPACE}
  spec: {}
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: hypershift-operator
  rules:
  - apiGroups:
    - hypershift.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - config.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - '*'
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - '*'
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - '*'
  - apiGroups:
    - bootstrap.cluster.x-k8s.io
    - controlplane.cluster.x-k8s.io
    - infrastructure.cluster.x-k8s.io
    - machines.cluster.x-k8s.io
    - exp.infrastructure.cluster.x-k8s.io
    - addons.cluster.x-k8s.io
    - exp.cluster.x-k8s.io
    - cluster.x-k8s.io
    - monitoring.coreos.com
    - monitoring.rhobs
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - '*'
  - apiGroups:
    - operator.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - route.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - image.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - '*'
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    - configmaps
    - persistentvolumeclaims
    - pods
    - pods/log
    - secrets
    - nodes
    - namespaces
    - serviceaccounts
    - services
    - endpoints
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - deployments
    - replicasets
    - statefulsets
    verbs:
    - '*'
  - apiGroups:
    - etcd.database.coreos.com
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - machine.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - monitoring.coreos.com
    - monitoring.rhobs
    resources:
    - podmonitors
    verbs:
    - get
    - list
    - watch
    - create
    - update
  - apiGroups:
    - capi-provider.agent-install.openshift.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - operator.openshift.io
    resources:
    - ingresscontrollers
    verbs:
    - '*'
  - apiGroups:
    - kubevirt.io
    resources:
    - virtualmachineinstances
    - virtualmachines
    verbs:
    - '*'
  - apiGroups:
    - subresources.kubevirt.io
    resources:
    - virtualmachineinstances/addvolume
    - virtualmachineinstances/removevolume
    verbs:
    - '*'
  - apiGroups:
    - cdi.kubevirt.io
    resources:
    - datavolumes
    verbs:
    - '*'
  - apiGroups:
    - agent-install.openshift.io
    resources:
    - agents
    verbs:
    - '*'
  - apiGroups:
    - extensions.hive.openshift.io
    resources:
    - agentclusterinstalls
    verbs:
    - '*'
  - apiGroups:
    - hive.openshift.io
    resources:
    - clusterdeployments
    verbs:
    - '*'
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-operator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: hypershift-operator
  subjects:
  - kind: ServiceAccount
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    name: hypershift-operator
    namespace: ${NAMESPACE}
  rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-operator
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: hypershift-operator
  subjects:
  - kind: ServiceAccount
    name: operator
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: external-dns
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: external-dns
  rules:
  - apiGroups:
    - route.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: external-dns
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: external-dns
  subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: ${NAMESPACE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: external-dns
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: external-dns
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: external-dns
          hypershift.openshift.io/operator-component: external-dns
          name: external-dns
      spec:
        containers:
        - args:
          - --source=service
          - --source=openshift-route
          - --domain-filter=${EXTERNAL_DNS_DOMAIN_FILTER}
          - --provider=aws
          - --registry=txt
          - --txt-suffix=-external-dns
          - --txt-owner-id=${EXTERNAL_DNS_TXT_OWNER_ID}
          - --aws-zone-type=public
          - --aws-batch-change-interval=10s
          command:
          - /external-dns
          env:
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: /etc/provider/credentials
          - name: AWS_REGION
            value: us-east-1
          image: registry.redhat.io/edo/external-dns-rhel8@sha256:e8c50c1c158d08a99b1f388c65860c533209299fd0ff87f5c9fe29d7c9b5a4d1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 7979
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: external-dns
          ports:
          - containerPort: 7979
            name: metrics
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
          volumeMounts:
          - mountPath: /etc/provider
            name: credentials
        serviceAccountName: external-dns
        volumes:
        - name: credentials
          secret:
            secretName: ${EXTERNAL_DNS_CREDS_SECRET}
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
  spec:
    replicas: ${{OPERATOR_REPLICAS}}
    selector:
      matchLabels:
        name: operator
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: operator
          hypershift.openshift.io/operator-component: operator
          name: operator
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - operator
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - run
          - --namespace=$(MY_NAMESPACE)
          - --pod-name=$(MY_NAME)
          - --metrics-addr=:9000
          - --enable-ocp-cluster-monitoring=false
          - --enable-ci-debug-output=false
          - --private-platform=AWS
          - --cert-dir=/var/run/secrets/serving-cert
          - --oidc-storage-provider-s3-bucket-name=${OIDC_S3_NAME}
          - --oidc-storage-provider-s3-region=${OIDC_S3_REGION}
          - --oidc-storage-provider-s3-credentials=/etc/oidc-storage-provider-s3-creds/${OIDC_S3_CREDS_SECRET_KEY}
          command:
          - /usr/bin/hypershift-operator
          env:
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: METRICS_SET
            value: SRE
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: /etc/provider/${AWS_PRIVATE_CREDS_SECRET_KEY}
          - name: AWS_REGION
            value: ${AWS_PRIVATE_REGION}
          - name: AWS_SDK_LOAD_CONFIG
            value: "1"
          image: ${OPERATOR_IMG}:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: operator
          ports:
          - containerPort: 9000
            name: metrics
            protocol: TCP
          - containerPort: 9443
            name: manager
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            runAsUser: 1000
          volumeMounts:
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/oidc-storage-provider-s3-creds
            name: oidc-storage-provider-s3-creds
          - mountPath: /etc/provider
            name: credentials
          - mountPath: /var/run/secrets/openshift/serviceaccount
            name: token
        priorityClassName: hypershift-operator
        serviceAccountName: operator
        volumes:
        - name: serving-cert
          secret:
            secretName: manager-serving-cert
        - name: oidc-storage-provider-s3-creds
          secret:
            secretName: ${OIDC_S3_CREDS_SECRET}
        - name: credentials
          secret:
            secretName: ${AWS_PRIVATE_CREDS_SECRET}
        - name: token
          projected:
            sources:
            - serviceAccountToken:
                audience: openshift
                path: token
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: manager-serving-cert
    creationTimestamp: null
    labels:
      name: operator
    name: operator
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: metrics
      port: 9393
      protocol: TCP
      targetPort: metrics
    - name: manager
      port: 443
      protocol: TCP
      targetPort: manager
    selector:
      name: operator
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    name: prometheus
    namespace: ${NAMESPACE}
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: prometheus
    namespace: ${NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus
  subjects:
  - kind: ServiceAccount
    name: prometheus-user-workload
    namespace: openshift-user-workload-monitoring
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    name: operator
    namespace: ${NAMESPACE}
  spec:
    endpoints:
    - bearerTokenSecret:
        key: ""
      interval: 30s
      port: metrics
    jobLabel: component
    namespaceSelector: {}
    selector:
      matchLabels:
        name: operator
- apiVersion: monitoring.coreos.com/v1
  kind: PrometheusRule
  metadata:
    creationTimestamp: null
    name: metrics
    namespace: ${NAMESPACE}
  spec:
    groups:
    - interval: 30s
      name: hypershift.rules
      rules:
      - expr: sort_desc(sum(rate(apiserver_request_aborts_total[1m])) by (resource,
          verb))
        record: hypershift:apiserver_request_aborts_total
      - expr: sum by (app, namespace, code, method, pod) ( sum(rest_client_requests_total)
          by (pod, namespace, code, method) * on (pod, namespace) group_left(app)
          label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_api_requests_total
      - expr: sum by (app, namespace, pod) ( sum(container_memory_usage_bytes{container!="POD",container!=""})
          by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_memory_usage
      - expr: sum by (app, namespace, pod) ( sum(container_memory_rss{container!="POD",container!=""})
          by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_memory_rss
      - expr: sum by (app, namespace, pod) ( sum(kube_pod_container_resource_requests{resource="memory"})
          by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_memory_request
      - expr: histogram_quantile(0.9, sum by (namespace, le) (rate(ign_server_payload_generation_seconds_bucket{container="ignition-server"}[3m])))
        record: hypershift:controlplane:ign_payload_generation_seconds_p90
      - expr: avg by (app, namespace, pod) ( sum( rate( container_cpu_usage_seconds_total{container_name!="POD",container!=""}[2m]
          ) ) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") ) / count by (app, namespace, pod) ( sum(
          rate( container_cpu_usage_seconds_total{container_name!="POD",container!=""}[2m]
          ) ) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_cpu_usage_seconds
      - expr: sum by (app, namespace, pod) ( sum(kube_pod_container_resource_requests{resource="cpu"})
          by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:controlplane:component_cpu_request
      - expr: sum by (app, namespace, code, method) ( sum(rest_client_requests_total)
          by (pod, namespace, code, method) * on (pod, namespace) group_left(app)
          label_replace(kube_pod_labels{label_hypershift_openshift_io_operator_component!=""},
          "app", "$1", "label_app", "(.*)") )
        record: hypershift:operator:component_api_requests_total
      - expr: max by(platform) (hypershift_hostedclusters)
        record: platform:hypershift_hostedclusters:max
      - expr: max by(platform) (hypershift_nodepools)
        record: platform:hypershift_nodepools:max
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: clusterresourcesetbindings.addons.cluster.x-k8s.io
  spec:
    group: addons.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterResourceSetBinding
      listKind: ClusterResourceSetBindingList
      plural: clusterresourcesetbindings
      singular: clusterresourcesetbinding
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterResourceSetBinding
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterResourceSetBinding lists all matching ClusterResourceSets
            with the cluster it belongs to.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterResourceSetBindingSpec defines the desired state
                of ClusterResourceSetBinding.
              properties:
                bindings:
                  description: Bindings is a list of ClusterResourceSets and their
                    resources.
                  items:
                    description: ResourceSetBinding keeps info on all of the resources
                      in a ClusterResourceSet.
                    properties:
                      clusterResourceSetName:
                        description: ClusterResourceSetName is the name of the ClusterResourceSet
                          that is applied to the owner cluster of the binding.
                        type: string
                      resources:
                        description: Resources is a list of resources that the ClusterResourceSet
                          has.
                        items:
                          description: ResourceBinding shows the status of a resource
                            that belongs to a ClusterResourceSet matched by the owner
                            cluster of the ClusterResourceSetBinding object.
                          properties:
                            applied:
                              description: Applied is to track if a resource is applied
                                to the cluster or not.
                              type: boolean
                            hash:
                              description: Hash is the hash of a resource's data.
                                This can be used to decide if a resource is changed.
                                For "ApplyOnce" ClusterResourceSet.spec.strategy,
                                this is no-op as that strategy does not act on change.
                              type: string
                            kind:
                              description: 'Kind of the resource. Supported kinds
                                are: Secrets and ConfigMaps.'
                              enum:
                              - Secret
                              - ConfigMap
                              type: string
                            lastAppliedTime:
                              description: LastAppliedTime identifies when this resource
                                was last applied to the cluster.
                              format: date-time
                              type: string
                            name:
                              description: Name of the resource that is in the same
                                namespace with ClusterResourceSet object.
                              minLength: 1
                              type: string
                          required:
                          - applied
                          - kind
                          - name
                          type: object
                        type: array
                    required:
                    - clusterResourceSetName
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: clusterresourcesets.addons.cluster.x-k8s.io
  spec:
    group: addons.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterResourceSet
      listKind: ClusterResourceSetList
      plural: clusterresourcesets
      singular: clusterresourceset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterResourceSet
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterResourceSet is the Schema for the clusterresourcesets
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterResourceSetSpec defines the desired state of ClusterResourceSet.
              properties:
                clusterSelector:
                  description: Label selector for Clusters. The Clusters that are
                    selected by this will be the ones affected by this ClusterResourceSet.
                    It must match the Cluster labels. This field is immutable. Label
                    selector cannot be empty.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                resources:
                  description: Resources is a list of Secrets/ConfigMaps where each
                    contains 1 or more resources to be applied to remote clusters.
                  items:
                    description: ResourceRef specifies a resource.
                    properties:
                      kind:
                        description: 'Kind of the resource. Supported kinds are: Secrets
                          and ConfigMaps.'
                        enum:
                        - Secret
                        - ConfigMap
                        type: string
                      name:
                        description: Name of the resource that is in the same namespace
                          with ClusterResourceSet object.
                        minLength: 1
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                strategy:
                  description: Strategy is the strategy to be used during applying
                    resources. Defaults to ApplyOnce. This field is immutable.
                  enum:
                  - ApplyOnce
                  type: string
              required:
              - clusterSelector
              type: object
            status:
              description: ClusterResourceSetStatus defines the observed state of
                ClusterResourceSet.
              properties:
                conditions:
                  description: Conditions defines current state of the ClusterResourceSet.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed ClusterResourceSet.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: clusterclasses.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: ClusterClass
      listKind: ClusterClassList
      plural: clusterclasses
      shortNames:
      - cc
      singular: clusterclass
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of ClusterClass
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterClass is a template which can be used to create managed
            topologies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterClassSpec describes the desired state of the ClusterClass.
              properties:
                controlPlane:
                  description: ControlPlane is a reference to a local struct that
                    holds the details for provisioning the Control Plane for the Cluster.
                  properties:
                    machineHealthCheck:
                      description: MachineHealthCheck defines a MachineHealthCheck
                        for this ControlPlaneClass. This field is supported if and
                        only if the ControlPlane provider template referenced above
                        is Machine based and supports setting replicas.
                      properties:
                        maxUnhealthy:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Any further remediation is only allowed if
                            at most "MaxUnhealthy" machines selected by "selector"
                            are not healthy.
                          x-kubernetes-int-or-string: true
                        nodeStartupTimeout:
                          description: Machines older than this duration without a
                            node will be considered to have failed and will be remediated.
                            If you wish to disable this feature, set the value explicitly
                            to 0.
                          type: string
                        remediationTemplate:
                          description: "RemediationTemplate is a reference to a remediation
                            template provided by an infrastructure provider. \n This
                            field is completely optional, when filled, the MachineHealthCheck
                            controller creates a new object from the template referenced
                            and hands off remediation of the machine to a controller
                            that lives outside of Cluster API."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        unhealthyConditions:
                          description: UnhealthyConditions contains a list of the
                            conditions that determine whether a node is considered
                            unhealthy. The conditions are combined in a logical OR,
                            i.e. if any of the conditions is met, the node is unhealthy.
                          items:
                            description: UnhealthyCondition represents a Node condition
                              type and value with a timeout specified as a duration.  When
                              the named condition has been in the given status for
                              at least the timeout value, a node is considered unhealthy.
                            properties:
                              status:
                                minLength: 1
                                type: string
                              timeout:
                                type: string
                              type:
                                minLength: 1
                                type: string
                            required:
                            - status
                            - timeout
                            - type
                            type: object
                          type: array
                        unhealthyRange:
                          description: 'Any further remediation is only allowed if
                            the number of machines selected by "selector" as not healthy
                            is within the range of "UnhealthyRange". Takes precedence
                            over MaxUnhealthy. Eg. "[3-5]" - This means that remediation
                            will be allowed only when: (a) there are at least 3 unhealthy
                            machines (and) (b) there are at most 5 unhealthy machines'
                          type: string
                      type: object
                    machineInfrastructure:
                      description: "MachineInfrastructure defines the metadata and
                        infrastructure information for control plane machines. \n
                        This field is supported if and only if the control plane provider
                        template referenced above is Machine based and supports setting
                        replicas."
                      properties:
                        ref:
                          description: Ref is a required reference to a custom resource
                            offered by a provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - ref
                      type: object
                    metadata:
                      description: "Metadata is the metadata applied to the machines
                        of the ControlPlane. At runtime this metadata is merged with
                        the corresponding metadata from the topology. \n This field
                        is supported if and only if the control plane provider template
                        referenced is Machine based."
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    ref:
                      description: Ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - ref
                  type: object
                infrastructure:
                  description: Infrastructure is a reference to a provider-specific
                    template that holds the details for provisioning infrastructure
                    specific cluster for the underlying provider. The underlying provider
                    is responsible for the implementation of the template to an infrastructure
                    cluster.
                  properties:
                    ref:
                      description: Ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - ref
                  type: object
                patches:
                  description: 'Patches defines the patches which are applied to customize
                    referenced templates of a ClusterClass. Note: Patches will be
                    applied in the order of the array.'
                  items:
                    description: ClusterClassPatch defines a patch which is applied
                      to customize the referenced templates.
                    properties:
                      definitions:
                        description: 'Definitions define inline patches. Note: Patches
                          will be applied in the order of the array. Note: Exactly
                          one of Definitions or External must be set.'
                        items:
                          description: PatchDefinition defines a patch which is applied
                            to customize the referenced templates.
                          properties:
                            jsonPatches:
                              description: 'JSONPatches defines the patches which
                                should be applied on the templates matching the selector.
                                Note: Patches will be applied in the order of the
                                array.'
                              items:
                                description: JSONPatch defines a JSON patch.
                                properties:
                                  op:
                                    description: 'Op defines the operation of the
                                      patch. Note: Only `add`, `replace` and `remove`
                                      are supported.'
                                    type: string
                                  path:
                                    description: 'Path defines the path of the patch.
                                      Note: Only the spec of a template can be patched,
                                      thus the path has to start with /spec/. Note:
                                      For now the only allowed array modifications
                                      are `append` and `prepend`, i.e.: * for op:
                                      `add`: only index 0 (prepend) and - (append)
                                      are allowed * for op: `replace` or `remove`:
                                      no indexes are allowed'
                                    type: string
                                  value:
                                    description: 'Value defines the value of the patch.
                                      Note: Either Value or ValueFrom is required
                                      for add and replace operations. Only one of
                                      them is allowed to be set at the same time.
                                      Note: We have to use apiextensionsv1.JSON instead
                                      of our JSON type, because controller-tools has
                                      a hard-coded schema for apiextensionsv1.JSON
                                      which cannot be produced by another type (unset
                                      type field). Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111'
                                    x-kubernetes-preserve-unknown-fields: true
                                  valueFrom:
                                    description: 'ValueFrom defines the value of the
                                      patch. Note: Either Value or ValueFrom is required
                                      for add and replace operations. Only one of
                                      them is allowed to be set at the same time.'
                                    properties:
                                      template:
                                        description: 'Template is the Go template
                                          to be used to calculate the value. A template
                                          can reference variables defined in .spec.variables
                                          and builtin variables. Note: The template
                                          must evaluate to a valid YAML or JSON value.'
                                        type: string
                                      variable:
                                        description: Variable is the variable to be
                                          used as value. Variable can be one of the
                                          variables defined in .spec.variables or
                                          a builtin variable.
                                        type: string
                                    type: object
                                required:
                                - op
                                - path
                                type: object
                              type: array
                            selector:
                              description: Selector defines on which templates the
                                patch should be applied.
                              properties:
                                apiVersion:
                                  description: APIVersion filters templates by apiVersion.
                                  type: string
                                kind:
                                  description: Kind filters templates by kind.
                                  type: string
                                matchResources:
                                  description: MatchResources selects templates based
                                    on where they are referenced.
                                  properties:
                                    controlPlane:
                                      description: 'ControlPlane selects templates
                                        referenced in .spec.ControlPlane. Note: this
                                        will match the controlPlane and also the controlPlane
                                        machineInfrastructure (depending on the kind
                                        and apiVersion).'
                                      type: boolean
                                    infrastructureCluster:
                                      description: InfrastructureCluster selects templates
                                        referenced in .spec.infrastructure.
                                      type: boolean
                                    machineDeploymentClass:
                                      description: MachineDeploymentClass selects
                                        templates referenced in specific MachineDeploymentClasses
                                        in .spec.workers.machineDeployments.
                                      properties:
                                        names:
                                          description: Names selects templates by
                                            class names.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                  type: object
                              required:
                              - apiVersion
                              - kind
                              - matchResources
                              type: object
                          required:
                          - jsonPatches
                          - selector
                          type: object
                        type: array
                      description:
                        description: Description is a human-readable description of
                          this patch.
                        type: string
                      enabledIf:
                        description: EnabledIf is a Go template to be used to calculate
                          if a patch should be enabled. It can reference variables
                          defined in .spec.variables and builtin variables. The patch
                          will be enabled if the template evaluates to `true`, otherwise
                          it will be disabled. If EnabledIf is not set, the patch
                          will be enabled per default.
                        type: string
                      external:
                        description: 'External defines an external patch. Note: Exactly
                          one of Definitions or External must be set.'
                        properties:
                          generateExtension:
                            description: GenerateExtension references an extension
                              which is called to generate patches.
                            type: string
                          validateExtension:
                            description: ValidateExtension references an extension
                              which is called to validate the topology.
                            type: string
                        type: object
                      name:
                        description: Name of the patch.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                variables:
                  description: Variables defines the variables which can be configured
                    in the Cluster topology and are then used in patches.
                  items:
                    description: ClusterClassVariable defines a variable which can
                      be configured in the Cluster topology and used in patches.
                    properties:
                      name:
                        description: Name of the variable.
                        type: string
                      required:
                        description: 'Required specifies if the variable is required.
                          Note: this applies to the variable as a whole and thus the
                          top-level object defined in the schema. If nested fields
                          are required, this will be specified inside the schema.'
                        type: boolean
                      schema:
                        description: Schema defines the schema of the variable.
                        properties:
                          openAPIV3Schema:
                            description: OpenAPIV3Schema defines the schema of a variable
                              via OpenAPI v3 schema. The schema is a subset of the
                              schema used in Kubernetes CRDs.
                            properties:
                              additionalProperties:
                                description: 'AdditionalProperties specifies the schema
                                  of values in a map (keys are always strings). NOTE:
                                  Can only be set if type is object. NOTE: AdditionalProperties
                                  is mutually exclusive with Properties. NOTE: This
                                  field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.'
                                x-kubernetes-preserve-unknown-fields: true
                              default:
                                description: 'Default is the default value of the
                                  variable. NOTE: Can be set for all types.'
                                x-kubernetes-preserve-unknown-fields: true
                              description:
                                description: Description is a human-readable description
                                  of this variable.
                                type: string
                              enum:
                                description: 'Enum is the list of valid values of
                                  the variable. NOTE: Can be set for all types.'
                                items:
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              example:
                                description: Example is an example for this variable.
                                x-kubernetes-preserve-unknown-fields: true
                              exclusiveMaximum:
                                description: 'ExclusiveMaximum specifies if the Maximum
                                  is exclusive. NOTE: Can only be set if type is integer
                                  or number.'
                                type: boolean
                              exclusiveMinimum:
                                description: 'ExclusiveMinimum specifies if the Minimum
                                  is exclusive. NOTE: Can only be set if type is integer
                                  or number.'
                                type: boolean
                              format:
                                description: 'Format is an OpenAPI v3 format string.
                                  Unknown formats are ignored. For a list of supported
                                  formats please see: (of the k8s.io/apiextensions-apiserver
                                  version we''re currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go
                                  NOTE: Can only be set if type is string.'
                                type: string
                              items:
                                description: 'Items specifies fields of an array.
                                  NOTE: Can only be set if type is array. NOTE: This
                                  field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.'
                                x-kubernetes-preserve-unknown-fields: true
                              maxItems:
                                description: 'MaxItems is the max length of an array
                                  variable. NOTE: Can only be set if type is array.'
                                format: int64
                                type: integer
                              maxLength:
                                description: 'MaxLength is the max length of a string
                                  variable. NOTE: Can only be set if type is string.'
                                format: int64
                                type: integer
                              maximum:
                                description: 'Maximum is the maximum of an integer
                                  or number variable. If ExclusiveMaximum is false,
                                  the variable is valid if it is lower than, or equal
                                  to, the value of Maximum. If ExclusiveMaximum is
                                  true, the variable is valid if it is strictly lower
                                  than the value of Maximum. NOTE: Can only be set
                                  if type is integer or number.'
                                format: int64
                                type: integer
                              minItems:
                                description: 'MinItems is the min length of an array
                                  variable. NOTE: Can only be set if type is array.'
                                format: int64
                                type: integer
                              minLength:
                                description: 'MinLength is the min length of a string
                                  variable. NOTE: Can only be set if type is string.'
                                format: int64
                                type: integer
                              minimum:
                                description: 'Minimum is the minimum of an integer
                                  or number variable. If ExclusiveMinimum is false,
                                  the variable is valid if it is greater than, or
                                  equal to, the value of Minimum. If ExclusiveMinimum
                                  is true, the variable is valid if it is strictly
                                  greater than the value of Minimum. NOTE: Can only
                                  be set if type is integer or number.'
                                format: int64
                                type: integer
                              pattern:
                                description: 'Pattern is the regex which a string
                                  variable must match. NOTE: Can only be set if type
                                  is string.'
                                type: string
                              properties:
                                description: 'Properties specifies fields of an object.
                                  NOTE: Can only be set if type is object. NOTE: Properties
                                  is mutually exclusive with AdditionalProperties.
                                  NOTE: This field uses PreserveUnknownFields and
                                  Schemaless, because recursive validation is not
                                  possible.'
                                x-kubernetes-preserve-unknown-fields: true
                              required:
                                description: 'Required specifies which fields of an
                                  object are required. NOTE: Can only be set if type
                                  is object.'
                                items:
                                  type: string
                                type: array
                              type:
                                description: 'Type is the type of the variable. Valid
                                  values are: object, array, string, integer, number
                                  or boolean.'
                                type: string
                              uniqueItems:
                                description: 'UniqueItems specifies if items in an
                                  array must be unique. NOTE: Can only be set if type
                                  is array.'
                                type: boolean
                            required:
                            - type
                            type: object
                        required:
                        - openAPIV3Schema
                        type: object
                    required:
                    - name
                    - required
                    - schema
                    type: object
                  type: array
                workers:
                  description: Workers describes the worker nodes for the cluster.
                    It is a collection of node types which can be used to create the
                    worker nodes of the cluster.
                  properties:
                    machineDeployments:
                      description: MachineDeployments is a list of machine deployment
                        classes that can be used to create a set of worker nodes.
                      items:
                        description: MachineDeploymentClass serves as a template to
                          define a set of worker nodes of the cluster provisioned
                          using the `ClusterClass`.
                        properties:
                          class:
                            description: Class denotes a type of worker node present
                              in the cluster, this name MUST be unique within a ClusterClass
                              and can be referenced in the Cluster to create a managed
                              MachineDeployment.
                            type: string
                          machineHealthCheck:
                            description: MachineHealthCheck defines a MachineHealthCheck
                              for this MachineDeploymentClass.
                            properties:
                              maxUnhealthy:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Any further remediation is only allowed
                                  if at most "MaxUnhealthy" machines selected by "selector"
                                  are not healthy.
                                x-kubernetes-int-or-string: true
                              nodeStartupTimeout:
                                description: Machines older than this duration without
                                  a node will be considered to have failed and will
                                  be remediated. If you wish to disable this feature,
                                  set the value explicitly to 0.
                                type: string
                              remediationTemplate:
                                description: "RemediationTemplate is a reference to
                                  a remediation template provided by an infrastructure
                                  provider. \n This field is completely optional,
                                  when filled, the MachineHealthCheck controller creates
                                  a new object from the template referenced and hands
                                  off remediation of the machine to a controller that
                                  lives outside of Cluster API."
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a
                                      container within a pod, this would take on a
                                      value like: "spec.containers{name}" (where "name"
                                      refers to the name of the container that triggered
                                      the event) or if no container name is specified
                                      "spec.containers[2]" (container with index 2
                                      in this pod). This syntax is chosen only to
                                      have some well-defined way of referencing a
                                      part of an object. TODO: this design is not
                                      final and this field is subject to change in
                                      the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              unhealthyConditions:
                                description: UnhealthyConditions contains a list of
                                  the conditions that determine whether a node is
                                  considered unhealthy. The conditions are combined
                                  in a logical OR, i.e. if any of the conditions is
                                  met, the node is unhealthy.
                                items:
                                  description: UnhealthyCondition represents a Node
                                    condition type and value with a timeout specified
                                    as a duration.  When the named condition has been
                                    in the given status for at least the timeout value,
                                    a node is considered unhealthy.
                                  properties:
                                    status:
                                      minLength: 1
                                      type: string
                                    timeout:
                                      type: string
                                    type:
                                      minLength: 1
                                      type: string
                                  required:
                                  - status
                                  - timeout
                                  - type
                                  type: object
                                type: array
                              unhealthyRange:
                                description: 'Any further remediation is only allowed
                                  if the number of machines selected by "selector"
                                  as not healthy is within the range of "UnhealthyRange".
                                  Takes precedence over MaxUnhealthy. Eg. "[3-5]"
                                  - This means that remediation will be allowed only
                                  when: (a) there are at least 3 unhealthy machines
                                  (and) (b) there are at most 5 unhealthy machines'
                                type: string
                            type: object
                          template:
                            description: Template is a local struct containing a collection
                              of templates for creation of MachineDeployment objects
                              representing a set of worker nodes.
                            properties:
                              bootstrap:
                                description: Bootstrap contains the bootstrap template
                                  reference to be used for the creation of worker
                                  Machines.
                                properties:
                                  ref:
                                    description: Ref is a required reference to a
                                      custom resource offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - ref
                                type: object
                              infrastructure:
                                description: Infrastructure contains the infrastructure
                                  template reference to be used for the creation of
                                  worker Machines.
                                properties:
                                  ref:
                                    description: Ref is a required reference to a
                                      custom resource offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - ref
                                type: object
                              metadata:
                                description: Metadata is the metadata applied to the
                                  machines of the MachineDeployment. At runtime this
                                  metadata is merged with the corresponding metadata
                                  from the topology.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'Annotations is an unstructured key
                                      value map stored with a resource that may be
                                      set by external tools to store and retrieve
                                      arbitrary metadata. They are not queryable and
                                      should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations'
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of string keys and values that
                                      can be used to organize and categorize (scope
                                      and select) objects. May match selectors of
                                      replication controllers and services. More info:
                                      http://kubernetes.io/docs/user-guide/labels'
                                    type: object
                                type: object
                            required:
                            - bootstrap
                            - infrastructure
                            type: object
                        required:
                        - class
                        - template
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: clusters.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Cluster
      listKind: ClusterList
      plural: clusters
      shortNames:
      - cl
      singular: cluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of Cluster
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this Cluster
        jsonPath: .spec.topology.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster.
              properties:
                clusterNetwork:
                  description: Cluster network configuration.
                  properties:
                    apiServerPort:
                      description: APIServerPort specifies the port the API Server
                        should bind to. Defaults to 6443.
                      format: int32
                      type: integer
                    pods:
                      description: The network ranges from which Pod networks are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                    serviceDomain:
                      description: Domain name for services.
                      type: string
                    services:
                      description: The network ranges from which service VIPs are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneRef:
                  description: ControlPlaneRef is an optional reference to a provider-specific
                    resource that holds the details for provisioning the Control Plane
                    for a Cluster.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                infrastructureRef:
                  description: InfrastructureRef is a reference to a provider-specific
                    resource that holds the details for provisioning infrastructure
                    for a cluster in said provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                paused:
                  description: Paused can be used to prevent controllers from processing
                    the Cluster and all its associated objects.
                  type: boolean
                topology:
                  description: 'This encapsulates the topology for the cluster. NOTE:
                    It is required to enable the ClusterTopology feature gate flag
                    to activate managed topologies support; this feature is highly
                    experimental, and parts of it might still be not implemented.'
                  properties:
                    class:
                      description: The name of the ClusterClass object to create the
                        topology.
                      type: string
                    controlPlane:
                      description: ControlPlane describes the cluster control plane.
                      properties:
                        metadata:
                          description: "Metadata is the metadata applied to the machines
                            of the ControlPlane. At runtime this metadata is merged
                            with the corresponding metadata from the ClusterClass.
                            \n This field is supported if and only if the control
                            plane provider template referenced in the ClusterClass
                            is Machine based."
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                          type: object
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        replicas:
                          description: Replicas is the number of control plane nodes.
                            If the value is nil, the ControlPlane object is created
                            without the number of Replicas and it's assumed that the
                            control plane controller does not implement support for
                            this field. When specified against a control plane provider
                            that lacks support for this field, this value will be
                            ignored.
                          format: int32
                          type: integer
                      type: object
                    rolloutAfter:
                      description: RolloutAfter performs a rollout of the entire cluster
                        one component at a time, control plane first and then machine
                        deployments.
                      format: date-time
                      type: string
                    variables:
                      description: Variables can be used to customize the Cluster
                        through patches. They must comply to the corresponding VariableClasses
                        defined in the ClusterClass.
                      items:
                        description: ClusterVariable can be used to customize the
                          Cluster through patches. It must comply to the corresponding
                          ClusterClassVariable defined in the ClusterClass.
                        properties:
                          name:
                            description: Name of the variable.
                            type: string
                          value:
                            description: 'Value of the variable. Note: the value will
                              be validated against the schema of the corresponding
                              ClusterClassVariable from the ClusterClass. Note: We
                              have to use apiextensionsv1.JSON instead of a custom
                              JSON type, because controller-tools has a hard-coded
                              schema for apiextensionsv1.JSON which cannot be produced
                              by another type via controller-tools, i.e. it is not
                              possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111'
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    version:
                      description: The Kubernetes version of the cluster.
                      type: string
                    workers:
                      description: Workers encapsulates the different constructs that
                        form the worker nodes for the cluster.
                      properties:
                        machineDeployments:
                          description: MachineDeployments is a list of machine deployments
                            in the cluster.
                          items:
                            description: MachineDeploymentTopology specifies the different
                              parameters for a set of worker nodes in the topology.
                              This set of nodes is managed by a MachineDeployment
                              object whose lifecycle is managed by the Cluster controller.
                            properties:
                              class:
                                description: Class is the name of the MachineDeploymentClass
                                  used to create the set of worker nodes. This should
                                  match one of the deployment classes defined in the
                                  ClusterClass object mentioned in the `Cluster.Spec.Class`
                                  field.
                                type: string
                              failureDomain:
                                description: FailureDomain is the failure domain the
                                  machines will be created in. Must match a key in
                                  the FailureDomains map stored on the cluster object.
                                type: string
                              metadata:
                                description: Metadata is the metadata applied to the
                                  machines of the MachineDeployment. At runtime this
                                  metadata is merged with the corresponding metadata
                                  from the ClusterClass.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'Annotations is an unstructured key
                                      value map stored with a resource that may be
                                      set by external tools to store and retrieve
                                      arbitrary metadata. They are not queryable and
                                      should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations'
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'Map of string keys and values that
                                      can be used to organize and categorize (scope
                                      and select) objects. May match selectors of
                                      replication controllers and services. More info:
                                      http://kubernetes.io/docs/user-guide/labels'
                                    type: object
                                type: object
                              name:
                                description: Name is the unique identifier for this
                                  MachineDeploymentTopology. The value is used with
                                  other unique identifiers to create a MachineDeployment's
                                  Name (e.g. cluster's name, etc). In case the name
                                  is greater than the allowed maximum length, the
                                  values are hashed together.
                                type: string
                              nodeDrainTimeout:
                                description: 'NodeDrainTimeout is the total amount
                                  of time that the controller will spend on draining
                                  a node. The default value is 0, meaning that the
                                  node can be drained without any time limitations.
                                  NOTE: NodeDrainTimeout is different from `kubectl
                                  drain --timeout`'
                                type: string
                              replicas:
                                description: Replicas is the number of worker nodes
                                  belonging to this set. If the value is nil, the
                                  MachineDeployment is created without the number
                                  of Replicas (defaulting to zero) and it's assumed
                                  that an external entity (like cluster autoscaler)
                                  is responsible for the management of this value.
                                format: int32
                                type: integer
                              variables:
                                description: Variables can be used to customize the
                                  MachineDeployment through patches.
                                properties:
                                  overrides:
                                    description: Overrides can be used to override
                                      Cluster level variables.
                                    items:
                                      description: ClusterVariable can be used to
                                        customize the Cluster through patches. It
                                        must comply to the corresponding ClusterClassVariable
                                        defined in the ClusterClass.
                                      properties:
                                        name:
                                          description: Name of the variable.
                                          type: string
                                        value:
                                          description: 'Value of the variable. Note:
                                            the value will be validated against the
                                            schema of the corresponding ClusterClassVariable
                                            from the ClusterClass. Note: We have to
                                            use apiextensionsv1.JSON instead of a
                                            custom JSON type, because controller-tools
                                            has a hard-coded schema for apiextensionsv1.JSON
                                            which cannot be produced by another type
                                            via controller-tools, i.e. it is not possible
                                            to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111'
                                          x-kubernetes-preserve-unknown-fields: true
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                            required:
                            - class
                            - name
                            type: object
                          type: array
                      type: object
                  required:
                  - class
                  - version
                  type: object
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the cluster.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneReady:
                  description: ControlPlaneReady defines if the control plane is ready.
                  type: boolean
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of failure domain objects
                    synced from the infrastructure provider.
                  type: object
                failureMessage:
                  description: FailureMessage indicates that there is a fatal problem
                    reconciling the state, and will be set to a descriptive error
                    message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a fatal problem
                    reconciling the state, and will be set to a token value suitable
                    for programmatic interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: machinedeployments.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineDeployment
      listKind: MachineDeploymentList
      plural: machinedeployments
      shortNames:
      - md
      singular: machinedeployment
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Total number of machines desired by this MachineDeployment
        jsonPath: .spec.replicas
        name: Desired
        priority: 10
        type: integer
      - description: Total number of non-terminated machines targeted by this MachineDeployment
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of ready machines targeted by this MachineDeployment
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      - description: Total number of non-terminated machines targeted by this deployment
          that have the desired template spec
        jsonPath: .status.updatedReplicas
        name: Updated
        type: integer
      - description: Total number of unavailable machines targeted by this MachineDeployment
        jsonPath: .status.unavailableReplicas
        name: Unavailable
        type: integer
      - description: MachineDeployment status such as ScalingUp/ScalingDown/Running/Failed/Unknown
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of MachineDeployment
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachineDeployment
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineDeployment is the Schema for the machinedeployments
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineDeploymentSpec defines the desired state of MachineDeployment.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine should be ready. Defaults to 0 (machine will be considered
                    available as soon as it is ready)
                  format: int32
                  type: integer
                paused:
                  description: Indicates that the deployment is paused.
                  type: boolean
                progressDeadlineSeconds:
                  description: The maximum time in seconds for a deployment to make
                    progress before it is considered to be failed. The deployment
                    controller will continue to process failed deployments and a condition
                    with a ProgressDeadlineExceeded reason will be surfaced in the
                    deployment status. Note that progress will not be estimated during
                    the time a deployment is paused. Defaults to 600s.
                  format: int32
                  type: integer
                replicas:
                  default: 1
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: The number of old MachineSets to retain to allow rollback.
                    This is a pointer to distinguish between explicit zero and not
                    specified. Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: Label selector for machines. Existing MachineSets whose
                    machines are selected by this will be the ones affected by this
                    deployment. It must match the machine template's labels.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                strategy:
                  description: The deployment strategy to use to replace existing
                    machines with new ones.
                  properties:
                    rollingUpdate:
                      description: Rolling update config params. Present only if MachineDeploymentStrategyType
                        = RollingUpdate.
                      properties:
                        deletePolicy:
                          description: DeletePolicy defines the policy used by the
                            MachineDeployment to identify nodes to delete when downscaling.
                            Valid values are "Random, "Newest", "Oldest" When no value
                            is supplied, the default DeletePolicy of MachineSet is
                            used
                          enum:
                          - Random
                          - Newest
                          - Oldest
                          type: string
                        maxSurge:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            scheduled above the desired number of machines. Value
                            can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%). This can not be 0 if MaxUnavailable
                            is 0. Absolute number is calculated from percentage by
                            rounding up. Defaults to 1. Example: when this is set
                            to 30%, the new MachineSet can be scaled up immediately
                            when the rolling update starts, such that the total number
                            of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet
                            can be scaled up further, ensuring that total number of
                            machines running at any time during the update is at most
                            130% of desired machines.'
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            unavailable during the update. Value can be an absolute
                            number (ex: 5) or a percentage of desired machines (ex:
                            10%). Absolute number is calculated from percentage by
                            rounding down. This can not be 0 if MaxSurge is 0. Defaults
                            to 0. Example: when this is set to 30%, the old MachineSet
                            can be scaled down to 70% of desired machines immediately
                            when the rolling update starts. Once new machines are
                            ready, old MachineSet can be scaled down further, followed
                            by scaling up the new MachineSet, ensuring that the total
                            number of machines available at all times during the update
                            is at least 70% of desired machines.'
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: Type of deployment. Default is RollingUpdate.
                      enum:
                      - RollingUpdate
                      - OnDelete
                      type: string
                  type: object
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: NodeDeletionTimeout defines how long the controller
                            will attempt to delete the Node that the Machine hosts
                            after the Machine is marked for deletion. A duration of
                            0 will retry deletion indefinitely. Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              - template
              type: object
            status:
              description: MachineDeploymentStatus defines the observed state of MachineDeployment.
              properties:
                availableReplicas:
                  description: Total number of available machines (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                conditions:
                  description: Conditions defines current service state of the MachineDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of a MachineDeployment
                    (ScalingUp, ScalingDown, Running, Failed, or Unknown).
                  type: string
                readyReplicas:
                  description: Total number of ready machines targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
                unavailableReplicas:
                  description: Total number of unavailable machines targeted by this
                    deployment. This is the total number of machines that are still
                    required for the deployment to have 100% available capacity. They
                    may either be machines that are running but not yet available
                    or machines that still have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: machinehealthchecks.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineHealthCheck
      listKind: MachineHealthCheckList
      plural: machinehealthchecks
      shortNames:
      - mhc
      - mhcs
      singular: machinehealthcheck
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Number of machines currently monitored
        jsonPath: .status.expectedMachines
        name: ExpectedMachines
        type: integer
      - description: Maximum number of unhealthy machines allowed
        jsonPath: .spec.maxUnhealthy
        name: MaxUnhealthy
        type: string
      - description: Current observed healthy machines
        jsonPath: .status.currentHealthy
        name: CurrentHealthy
        type: integer
      - description: Time duration since creation of MachineHealthCheck
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineHealthCheck is the Schema for the machinehealthchecks
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of machine health check policy
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                maxUnhealthy:
                  anyOf:
                  - type: integer
                  - type: string
                  description: Any further remediation is only allowed if at most
                    "MaxUnhealthy" machines selected by "selector" are not healthy.
                  x-kubernetes-int-or-string: true
                nodeStartupTimeout:
                  description: Machines older than this duration without a node will
                    be considered to have failed and will be remediated. If not set,
                    this value is defaulted to 10 minutes. If you wish to disable
                    this feature, set the value explicitly to 0.
                  type: string
                remediationTemplate:
                  description: "RemediationTemplate is a reference to a remediation
                    template provided by an infrastructure provider. \n This field
                    is completely optional, when filled, the MachineHealthCheck controller
                    creates a new object from the template referenced and hands off
                    remediation of the machine to a controller that lives outside
                    of Cluster API."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                selector:
                  description: Label selector to match machines whose health will
                    be exercised
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                unhealthyConditions:
                  description: UnhealthyConditions contains a list of the conditions
                    that determine whether a node is considered unhealthy.  The conditions
                    are combined in a logical OR, i.e. if any of the conditions is
                    met, the node is unhealthy.
                  items:
                    description: UnhealthyCondition represents a Node condition type
                      and value with a timeout specified as a duration.  When the
                      named condition has been in the given status for at least the
                      timeout value, a node is considered unhealthy.
                    properties:
                      status:
                        minLength: 1
                        type: string
                      timeout:
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                    - status
                    - timeout
                    - type
                    type: object
                  minItems: 1
                  type: array
                unhealthyRange:
                  description: 'Any further remediation is only allowed if the number
                    of machines selected by "selector" as not healthy is within the
                    range of "UnhealthyRange". Takes precedence over MaxUnhealthy.
                    Eg. "[3-5]" - This means that remediation will be allowed only
                    when: (a) there are at least 3 unhealthy machines (and) (b) there
                    are at most 5 unhealthy machines'
                  pattern: ^\[[0-9]+-[0-9]+\]$
                  type: string
              required:
              - clusterName
              - selector
              - unhealthyConditions
              type: object
            status:
              description: Most recently observed status of MachineHealthCheck resource
              properties:
                conditions:
                  description: Conditions defines current service state of the MachineHealthCheck.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                currentHealthy:
                  description: total number of healthy machines counted by this machine
                    health check
                  format: int32
                  minimum: 0
                  type: integer
                expectedMachines:
                  description: total number of machines counted by this machine health
                    check
                  format: int32
                  minimum: 0
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                remediationsAllowed:
                  description: RemediationsAllowed is the number of further remediations
                    allowed by this machine health check before maxUnhealthy short
                    circuiting will be applied
                  format: int32
                  minimum: 0
                  type: integer
                targets:
                  description: Targets shows the current list of machines the machine
                    health check is watching
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: machinepools.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachinePool
      listKind: MachinePoolList
      plural: machinepools
      shortNames:
      - mp
      singular: machinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Total number of machines desired by this MachinePool
        jsonPath: .spec.replicas
        name: Desired
        priority: 10
        type: integer
      - description: MachinePool replicas count
        jsonPath: .status.replicas
        name: Replicas
        type: string
      - description: MachinePool status such as Terminating/Pending/Provisioning/Running/Failed
          etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of MachinePool
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachinePool
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachinePool is the Schema for the machinepools API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachinePoolSpec defines the desired state of MachinePool.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                failureDomains:
                  description: FailureDomains is the list of failure domains this
                    MachinePool should be attached to.
                  items:
                    type: string
                  type: array
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine instances should be ready. Defaults to 0 (machine instance
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                replicas:
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: NodeDeletionTimeout defines how long the controller
                            will attempt to delete the Node that the Machine hosts
                            after the Machine is marked for deletion. A duration of
                            0 will retry deletion indefinitely. Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - template
              type: object
            status:
              description: MachinePoolStatus defines the observed state of MachinePool.
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachinePool.
                  format: int32
                  type: integer
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                conditions:
                  description: Conditions define the current service state of the
                    MachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: FailureMessage indicates that there is a problem reconciling
                    the state, and will be set to a descriptive error message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a problem reconciling
                    the state, and will be set to a token value suitable for programmatic
                    interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                nodeRefs:
                  description: NodeRefs will point to the corresponding Nodes if it
                    they exist.
                  items:
                    description: "ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, \"must refer only to types A and B\" or \"UID
                      not honored\" or \"name must be restricted\". Those cannot be
                      well described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.
                      \ Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don't make new APIs
                      embed an underspecified API type they do not control. \n Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      ."
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
                readyReplicas:
                  description: The number of ready replicas for this MachinePool.
                    A machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable machine instances targeted
                    by this machine pool. This is the total number of machine instances
                    that are still required for the machine pool to have 100% available
                    capacity. They may either be machine instances that are running
                    but not yet available or machine instances that still have not
                    been created.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: machines.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Machine
      listKind: MachineList
      plural: machines
      shortNames:
      - ma
      singular: machine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Node name associated with this machine
        jsonPath: .status.nodeRef.name
        name: NodeName
        type: string
      - description: Provider ID
        jsonPath: .spec.providerID
        name: ProviderID
        type: string
      - description: Machine status such as Terminating/Pending/Running/Failed etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Time duration since creation of Machine
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this Machine
        jsonPath: .spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Machine is the Schema for the machines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSpec defines the desired state of Machine.
              properties:
                bootstrap:
                  description: Bootstrap is a reference to a local struct which encapsulates
                    fields to configure the Machine’s bootstrapping mechanism.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a bootstrap provider-specific
                        resource that holds configuration details. The reference is
                        optional to allow users/operators to specify Bootstrap.DataSecretName
                        without the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores
                        the bootstrap data script. If nil, the Machine should remain
                        in the Pending state.
                      type: string
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                failureDomain:
                  description: FailureDomain is the failure domain the machine will
                    be created in. Must match a key in the FailureDomains map stored
                    on the cluster object.
                  type: string
                infrastructureRef:
                  description: InfrastructureRef is a required reference to a custom
                    resource offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                nodeDeletionTimeout:
                  description: NodeDeletionTimeout defines how long the controller
                    will attempt to delete the Node that the Machine hosts after the
                    Machine is marked for deletion. A duration of 0 will retry deletion
                    indefinitely. Defaults to 10 seconds.
                  type: string
                nodeDrainTimeout:
                  description: 'NodeDrainTimeout is the total amount of time that
                    the controller will spend on draining a node. The default value
                    is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`'
                  type: string
                providerID:
                  description: ProviderID is the identification ID of the machine
                    provided by the provider. This field must match the provider ID
                    as seen on the node object corresponding to this machine. This
                    field is required by higher level consumers of cluster-api. Example
                    use case is cluster autoscaler with cluster-api as provider. Clean-up
                    logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes
                    nodes. With cluster-api as a generic out-of-tree provider for
                    autoscaler, this field is required by autoscaler to be able to
                    have a provider view of the list of machines. Another list of
                    nodes is queried from the k8s apiserver and then a comparison
                    is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher
                    level entities like autoscaler that will be interfacing with cluster-api
                    as generic provider.
                  type: string
                version:
                  description: Version defines the desired Kubernetes version. This
                    field is meant to be optionally used by bootstrap providers.
                  type: string
              required:
              - bootstrap
              - clusterName
              - infrastructureRef
              type: object
            status:
              description: MachineStatus defines the observed state of Machine.
              properties:
                addresses:
                  description: Addresses is a list of addresses assigned to the machine.
                    This field is copied from the infrastructure provider reference.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                conditions:
                  description: Conditions defines current service state of the Machine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                lastUpdated:
                  description: LastUpdated identifies when the phase of the Machine
                    last transitioned.
                  format: date-time
                  type: string
                nodeInfo:
                  description: 'NodeInfo is a set of ids/uuids to uniquely identify
                    the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info'
                  properties:
                    architecture:
                      description: The Architecture reported by the node
                      type: string
                    bootID:
                      description: Boot ID reported by the node.
                      type: string
                    containerRuntimeVersion:
                      description: ContainerRuntime Version reported by the node through
                        runtime remote API (e.g. containerd://1.4.2).
                      type: string
                    kernelVersion:
                      description: Kernel Version reported by the node from 'uname
                        -r' (e.g. 3.16.0-0.bpo.4-amd64).
                      type: string
                    kubeProxyVersion:
                      description: KubeProxy Version reported by the node.
                      type: string
                    kubeletVersion:
                      description: Kubelet Version reported by the node.
                      type: string
                    machineID:
                      description: 'MachineID reported by the node. For unique machine
                        identification in the cluster this field is preferred. Learn
                        more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html'
                      type: string
                    operatingSystem:
                      description: The Operating System reported by the node
                      type: string
                    osImage:
                      description: OS Image reported by the node from /etc/os-release
                        (e.g. Debian GNU/Linux 7 (wheezy)).
                      type: string
                    systemUUID:
                      description: SystemUUID reported by the node. For unique machine
                        identification MachineID is preferred. This field is specific
                        to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
                      type: string
                  required:
                  - architecture
                  - bootID
                  - containerRuntimeVersion
                  - kernelVersion
                  - kubeProxyVersion
                  - kubeletVersion
                  - machineID
                  - operatingSystem
                  - osImage
                  - systemUUID
                  type: object
                nodeRef:
                  description: NodeRef will point to the corresponding Node if it
                    exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                observedGeneration:
                  description: ObservedGeneration is the latest generation observed
                    by the controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of machine actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: machinesets.cluster.x-k8s.io
  spec:
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineSet
      listKind: MachineSetList
      plural: machinesets
      shortNames:
      - ms
      singular: machineset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Total number of machines desired by this machineset
        jsonPath: .spec.replicas
        name: Desired
        priority: 10
        type: integer
      - description: Total number of non-terminated machines targeted by this machineset
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of ready machines targeted by this machineset.
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      - description: Total number of available machines (ready for at least minReadySeconds)
        jsonPath: .status.availableReplicas
        name: Available
        type: integer
      - description: Time duration since creation of MachineSet
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Kubernetes version associated with this MachineSet
        jsonPath: .spec.template.spec.version
        name: Version
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineSet is the Schema for the machinesets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSetSpec defines the desired state of MachineSet.
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  description: DeletePolicy defines the policy used to identify nodes
                    to delete when downscaling. Defaults to "Random".  Valid values
                    are "Random, "Newest", "Oldest"
                  enum:
                  - Random
                  - Newest
                  - Oldest
                  type: string
                minReadySeconds:
                  description: MinReadySeconds is the minimum number of seconds for
                    which a newly created machine should be ready. Defaults to 0 (machine
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                replicas:
                  default: 1
                  description: Replicas is the number of desired replicas. This is
                    a pointer to distinguish between explicit zero and unspecified.
                    Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is a label query over machines that should
                    match the replica count. Label keys and values that must match
                    in order to be controlled by this MachineSet. It must match the
                    machine template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                template:
                  description: Template is the object that describes the machine that
                    will be created if insufficient replicas are detected. Object
                    references to custom resources resources are treated as templates.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.DataSecretName without the need
                                of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: NodeDeletionTimeout defines how long the controller
                            will attempt to delete the Node that the Machine hosts
                            after the Machine is marked for deletion. A duration of
                            0 will retry deletion indefinitely. Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: 'NodeDrainTimeout is the total amount of time
                            that the controller will spend on draining a node. The
                            default value is 0, meaning that the node can be drained
                            without any time limitations. NOTE: NodeDrainTimeout is
                            different from `kubectl drain --timeout`'
                          type: string
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              type: object
            status:
              description: MachineSetStatus defines the observed state of MachineSet.
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                conditions:
                  description: Conditions defines current service state of the MachineSet.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  type: string
                failureReason:
                  description: "In the event that there is a terminal problem reconciling
                    the replicas, both FailureReason and FailureMessage will be set.
                    FailureReason will be populated with a succinct value suitable
                    for machine interpretation, while FailureMessage will contain
                    a more verbose string suitable for logging and human consumption.
                    \n These fields should not be set for transitive errors that a
                    controller faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something
                    is fundamentally wrong with the MachineTemplate's spec or the
                    configuration of the machine controller, and that manual intervention
                    is required. Examples of terminal errors would be invalid combinations
                    of settings in the spec, values that are unsupported by the machine
                    controller, or the responsible machine controller itself being
                    critically misconfigured. \n Any transient errors that occur during
                    the reconciliation of Machines can be added as events to the MachineSet
                    object and/or logged in the controller's output."
                  type: string
                fullyLabeledReplicas:
                  description: The number of replicas that have labels matching the
                    labels of the machine template of the MachineSet.
                  format: int32
                  type: integer
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: The number of ready replicas for this MachineSet. A
                    machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentclusters.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      kind: AgentCluster
      listKind: AgentClusterList
      plural: agentclusters
      singular: agentcluster
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentCluster is the Schema for the agentclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentClusterSpec defines the desired state of AgentCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint store the data to of the custom ignition
                    endpoint.
                  properties:
                    caCertificateReference:
                      description: CaCertificateReference is a reference to the secret
                        containing CA certificate to be used when contacting the URL
                        via HTTPS.
                      properties:
                        name:
                          description: Name is the name of the secret containing the
                            CA certificate.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the secret containing
                            the CA certificate.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    url:
                      description: Url store the URL of the custom ignition endpoint.
                      type: string
                  type: object
              type: object
            status:
              description: AgentClusterStatus defines the observed state of AgentCluster
              properties:
                clusterDeploymentReference:
                  description: ClusterDeploymentRef is a reference to the associated
                    Hive ClusterDeployment.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a clusterDeployment resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the clusterDeployment
                        name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the ClusterDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a list of failure domain objects
                    synced from the infrastructure provider.
                  type: object
                ready:
                  type: boolean
              required:
              - clusterDeploymentReference
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentmachines.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      kind: AgentMachine
      listKind: AgentMachineList
      plural: agentmachines
      singular: agentmachine
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachine is the Schema for the agentmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineSpec defines the desired state of AgentMachine
              properties:
                agentLabelSelector:
                  description: AgentLabelSelector contains the labels that must be
                    set on an Agent in order to be selected for this Machine.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                providerID:
                  description: ProviderID is the host's motherboard serial formatted
                    as agent://12345678-1234-1234-1234-123456789abc
                  type: string
              type: object
            status:
              description: AgentMachineStatus defines the observed state of AgentMachine
              properties:
                addresses:
                  description: Addresses contains the Agent's associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                agentRef:
                  description: AgentRef is a reference to the Agent matched to the
                    Machine.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        an agent resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the agent
                        name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the AgentMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: agentmachinetemplates.capi-provider.agent-install.openshift.io
  spec:
    group: capi-provider.agent-install.openshift.io
    names:
      categories:
      - cluster-api
      kind: AgentMachineTemplate
      listKind: AgentMachineTemplateList
      plural: agentmachinetemplates
      shortNames:
      - agentmt
      singular: agentmachinetemplate
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachineTemplate is the Schema for the agentmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineTemplateSpec defines the desired state of AgentMachineTemplate
              properties:
                template:
                  description: AgentMachineTemplateResource describes the data needed
                    to create an AgentMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains the labels that
                            must be set on an Agent in order to be selected for this
                            Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        providerID:
                          description: ProviderID is the host's motherboard serial
                            formatted as agent://12345678-1234-1234-1234-123456789abc
                          type: string
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsclustercontrolleridentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterControllerIdentity
      listKind: AWSClusterControllerIdentityList
      plural: awsclustercontrolleridentities
      shortNames:
      - awsci
      singular: awsclustercontrolleridentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities
            API It is used to grant access to use Cluster API Provider AWS Controller
            credentials.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities
            API It is used to grant access to use Cluster API Provider AWS Controller
            credentials.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsclusterroleidentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterRoleIdentity
      listKind: AWSClusterRoleIdentityList
      plural: awsclusterroleidentities
      shortNames:
      - awsri
      singular: awsclusterroleidentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities
            API It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before
                    it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: A unique identifier that might be required when you
                    assume a role in another account. If the administrator of the
                    account to which the role belongs provided you with an external
                    ID, then provide that value in the ExternalId parameter. This
                    value can be any string, such as a passphrase or account number.
                    A cross-account role is usually set up to trust everyone in an
                    account. Therefore, the administrator of the trusting account
                    might send an external ID to the administrator of the trusted
                    account. That way, only someone with the ID can assume the role,
                    rather than everyone in the account. For more information about
                    the external ID, see How to Use an External ID When Granting Access
                    to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want
                    to use as an inline session policy.
                  type: string
                policyARNs:
                  description: The Amazon Resource Names (ARNs) of the IAM managed
                    policies that you want to use as managed session policies. The
                    policies must exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: SourceIdentityRef is a reference to another identity
                    which will be chained to do role assumption. All identity types
                    are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
              required:
              - roleARN
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities
            API It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before
                    it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: A unique identifier that might be required when you
                    assume a role in another account. If the administrator of the
                    account to which the role belongs provided you with an external
                    ID, then provide that value in the ExternalId parameter. This
                    value can be any string, such as a passphrase or account number.
                    A cross-account role is usually set up to trust everyone in an
                    account. Therefore, the administrator of the trusting account
                    might send an external ID to the administrator of the trusted
                    account. That way, only someone with the ID can assume the role,
                    rather than everyone in the account. For more information about
                    the external ID, see How to Use an External ID When Granting Access
                    to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want
                    to use as an inline session policy.
                  type: string
                policyARNs:
                  description: The Amazon Resource Names (ARNs) of the IAM managed
                    policies that you want to use as managed session policies. The
                    policies must exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: SourceIdentityRef is a reference to another identity
                    which will be chained to do role assumption. All identity types
                    are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
              required:
              - roleARN
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta2
    name: awsclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSCluster
      listKind: AWSClusterList
      plural: awsclusters
      shortNames:
      - awsc
      singular: awscluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AWSCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for EC2 instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: AWS VPC the cluster is using
        jsonPath: .spec.network.vpc.id
        name: VPC
        type: string
      - description: API Endpoint
        jsonPath: .spec.controlPlaneEndpoint
        name: Endpoint
        priority: 1
        type: string
      - description: Bastion IP address for breakglass access
        jsonPath: .status.bastion.publicIp
        name: Bastion IP
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of an EC2-based
                Kubernetes cluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                        to access the bastion host. They are set as ingress rules
                        for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: AMI will use the specified AMI to boot the bastion.
                        If not specified, the AMI will default to one picked out in
                        public space.
                      type: string
                    disableIngressRules:
                      description: DisableIngressRules will ensure there are no Ingress
                        rules in the bastion host's security group. Requires AllowedCIDRBlocks
                        to be empty.
                      type: boolean
                    enabled:
                      description: Enabled allows this provider to create a bastion
                        host instance with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: InstanceType will use the specified instance type
                        for the bastion. If not specified, Cluster API Provider AWS
                        will use t3.micro for all regions except us-east-1, where
                        t2.micro will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups sets the security groups
                        used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will
                        be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: "CrossZoneLoadBalancing enables the classic ELB
                        cross availability zone balancing. \n With cross-zone load
                        balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances
                        in all enabled Availability Zones. If cross-zone load balancing
                        is disabled, each load balancer node distributes requests
                        evenly across the registered instances in its Availability
                        Zone only. \n Defaults to false."
                      type: boolean
                    healthCheckProtocol:
                      description: HealthCheckProtocol sets the protocol type for
                        classic ELB health check target default value is ClassicELBProtocolSSL
                      type: string
                    name:
                      description: Name sets the name of the classic ELB load balancer.
                        As per AWS, the name must be unique within your set of load
                        balancers for the region, must have a maximum of 32 characters,
                        must contain only alphanumeric characters or hyphens, and
                        cannot begin or end with a hyphen. Once set, the value cannot
                        be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults
                        to internet-facing)
                      enum:
                      - internet-facing
                      - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied
                        to the control plane load balancer (defaults to discovered
                        subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: IdentityRef is a reference to a identity to be used
                    when reconciling this cluster
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system used to look up machine images when a machine does not
                    specify an AMI. When set, this will be used for all cluster machines
                    unless a machine specifies a different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up machine images when a machine does not specify an AMI. When
                    set, this will be used for all cluster machines unless a machine
                    specifies a different ImageLookupOrg. Supports substitutions for
                    {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                    version, respectively. The BaseOS will be the value in ImageLookupBaseOS
                    or ubuntu (the default), and the kubernetes version as defined
                    by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the
                    default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to look up
                    machine images when a machine does not specify an AMI. When set,
                    this will be used for all cluster machines unless a machine specifies
                    a different ImageLookupOrg.
                  type: string
                network:
                  description: NetworkSpec encapsulates all things related to AWS
                    network.
                  properties:
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: CNIIngressRules specify rules to apply to control
                            plane and worker node security groups. The source for
                            the rule will be set to control plane and worker security
                            group IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule
                              for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                      type: object
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: SecurityGroupOverrides is an optional set of security
                        groups to use for cluster instances This is optional - if
                        not provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability
                              zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          ipv6CidrBlock:
                            description: IPv6CidrBlock is the IPv6 CIDR block to be
                              used when the provider creates a managed VPC. A subnet
                              can have an IPv4 and an IPv6 address. IPv6 is only supported
                              in managed clusters, this field cannot be set on AWSCluster
                              object.
                            type: string
                          isIpv6:
                            description: IsIPv6 defines the subnet as an IPv6 subnet.
                              A subnet is IPv6 when it is associated with a VPC that
                              has IPv6 enabled. IPv6 is only supported in managed
                              clusters, this field cannot be set on AWSCluster object.
                            type: boolean
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same
                              AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: 'AvailabilityZoneSelection specifies how AZs
                            should be selected if there are more AZs in a region than
                            specified by AvailabilityZoneUsageLimit. There are 2 selection
                            schemes: Ordered - selects based on alphabetical order
                            Random - selects AZs randomly in a region Defaults to
                            Ordered'
                          enum:
                          - Ordered
                          - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: AvailabilityZoneUsageLimit specifies the maximum
                            number of availability zones (AZ) that should be used
                            in a region when automatically creating subnets. If a
                            region has more than this number of AZs then this number
                            of AZs will be picked randomly when creating default subnets.
                            Defaults to 3
                          minimum: 1
                          type: integer
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet
                            gateway associated with the VPC.
                          type: string
                        ipv6:
                          description: IPv6 contains ipv6 specific settings for the
                            network. Supported only in managed clusters. This field
                            cannot be set on AWSCluster object.
                          properties:
                            cidrBlock:
                              description: CidrBlock is the CIDR block provided by
                                Amazon when VPC has enabled IPv6.
                              type: string
                            egressOnlyInternetGatewayId:
                              description: EgressOnlyInternetGatewayID is the id of
                                the egress only internet gateway associated with an
                                IPv6 enabled VPC.
                              type: string
                            poolId:
                              description: PoolID is the IP pool which must be defined
                                in case of BYO IP is defined.
                              type: string
                          type: object
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                s3Bucket:
                  description: S3Bucket contains options to configure a supporting
                    S3 bucket for this cluster - currently used for nodes requiring
                    Ignition (https://coreos.github.io/ignition/) for bootstrapping
                    (requires BootstrapFormatIgnition feature flag to be enabled).
                  properties:
                    controlPlaneIAMInstanceProfile:
                      description: ControlPlaneIAMInstanceProfile is a name of the
                        IAMInstanceProfile, which will be allowed to read control-plane
                        node bootstrap data from S3 Bucket.
                      type: string
                    name:
                      description: Name defines name of S3 Bucket to be created.
                      maxLength: 63
                      minLength: 3
                      pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                      type: string
                    nodesIAMInstanceProfiles:
                      description: NodesIAMInstanceProfiles is a list of IAM instance
                        profiles, which will be allowed to read worker nodes bootstrap
                        data from S3 Bucket.
                      items:
                        type: string
                      type: array
                  required:
                  - controlPlaneIAMInstanceProfile
                  - name
                  - nodesIAMInstanceProfiles
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the bastion host. Valid values are empty string (do not use SSH
                    keys), a valid SSH key name, or omitted (use the default SSH key
                    name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster.
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated
                        addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for
                        Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA
                        is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated
                        with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage
                        volumes.
                      items:
                        description: Volume encapsulates the configuration options
                          for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported
                              for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group
                        IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances
                        to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared
                        or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64
                        encoded and should only be used when running a new instance.
                      type: string
                    volumeIDs:
                      description: IDs of the instance's volumes
                      items:
                        type: string
                      type: array
                  required:
                  - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational
                    state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                networkStatus:
                  description: NetworkStatus encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic
                                load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: IdleTimeout is time that the connection
                                is allowed to be idle (no data has been sent over
                                the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability
                            zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check
                            associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                          - healthyThreshold
                          - interval
                          - target
                          - timeout
                          - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic
                              load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                            - instancePort
                            - instanceProtocol
                            - port
                            - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either
                            internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC
                            attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule
                                for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                ipv6CidrBlocks:
                                  description: List of IPv6 CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the
                              security group.
                            type: object
                        required:
                        - id
                        - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Cluster to which this AWSCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for EC2 instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: AWS VPC the cluster is using
        jsonPath: .spec.network.vpc.id
        name: VPC
        type: string
      - description: API Endpoint
        jsonPath: .spec.controlPlaneEndpoint
        name: Endpoint
        priority: 1
        type: string
      - description: Bastion IP address for breakglass access
        jsonPath: .status.bastion.publicIp
        name: Bastion IP
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of an EC2-based
                Kubernetes cluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                        to access the bastion host. They are set as ingress rules
                        for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: AMI will use the specified AMI to boot the bastion.
                        If not specified, the AMI will default to one picked out in
                        public space.
                      type: string
                    disableIngressRules:
                      description: DisableIngressRules will ensure there are no Ingress
                        rules in the bastion host's security group. Requires AllowedCIDRBlocks
                        to be empty.
                      type: boolean
                    enabled:
                      description: Enabled allows this provider to create a bastion
                        host instance with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: InstanceType will use the specified instance type
                        for the bastion. If not specified, Cluster API Provider AWS
                        will use t3.micro for all regions except us-east-1, where
                        t2.micro will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups sets the security groups
                        used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will
                        be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: "CrossZoneLoadBalancing enables the classic ELB
                        cross availability zone balancing. \n With cross-zone load
                        balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances
                        in all enabled Availability Zones. If cross-zone load balancing
                        is disabled, each load balancer node distributes requests
                        evenly across the registered instances in its Availability
                        Zone only. \n Defaults to false."
                      type: boolean
                    healthCheckProtocol:
                      description: HealthCheckProtocol sets the protocol type for
                        classic ELB health check target default value is ClassicELBProtocolSSL
                      type: string
                    name:
                      description: Name sets the name of the classic ELB load balancer.
                        As per AWS, the name must be unique within your set of load
                        balancers for the region, must have a maximum of 32 characters,
                        must contain only alphanumeric characters or hyphens, and
                        cannot begin or end with a hyphen. Once set, the value cannot
                        be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults
                        to internet-facing)
                      enum:
                      - internet-facing
                      - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied
                        to the control plane load balancer (defaults to discovered
                        subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: IdentityRef is a reference to a identity to be used
                    when reconciling this cluster
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                      - AWSClusterControllerIdentity
                      - AWSClusterRoleIdentity
                      - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system used to look up machine images when a machine does not
                    specify an AMI. When set, this will be used for all cluster machines
                    unless a machine specifies a different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up machine images when a machine does not specify an AMI. When
                    set, this will be used for all cluster machines unless a machine
                    specifies a different ImageLookupOrg. Supports substitutions for
                    {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                    version, respectively. The BaseOS will be the value in ImageLookupBaseOS
                    or ubuntu (the default), and the kubernetes version as defined
                    by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the
                    default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to look up
                    machine images when a machine does not specify an AMI. When set,
                    this will be used for all cluster machines unless a machine specifies
                    a different ImageLookupOrg.
                  type: string
                network:
                  description: NetworkSpec encapsulates all things related to AWS
                    network.
                  properties:
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: CNIIngressRules specify rules to apply to control
                            plane and worker node security groups. The source for
                            the rule will be set to control plane and worker security
                            group IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule
                              for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                      type: object
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: SecurityGroupOverrides is an optional set of security
                        groups to use for cluster instances This is optional - if
                        not provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability
                              zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          ipv6CidrBlock:
                            description: IPv6CidrBlock is the IPv6 CIDR block to be
                              used when the provider creates a managed VPC. A subnet
                              can have an IPv4 and an IPv6 address. IPv6 is only supported
                              in managed clusters, this field cannot be set on AWSCluster
                              object.
                            type: string
                          isIpv6:
                            description: IsIPv6 defines the subnet as an IPv6 subnet.
                              A subnet is IPv6 when it is associated with a VPC that
                              has IPv6 enabled. IPv6 is only supported in managed
                              clusters, this field cannot be set on AWSCluster object.
                            type: boolean
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same
                              AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        required:
                        - id
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - id
                      x-kubernetes-list-type: map
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: 'AvailabilityZoneSelection specifies how AZs
                            should be selected if there are more AZs in a region than
                            specified by AvailabilityZoneUsageLimit. There are 2 selection
                            schemes: Ordered - selects based on alphabetical order
                            Random - selects AZs randomly in a region Defaults to
                            Ordered'
                          enum:
                          - Ordered
                          - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: AvailabilityZoneUsageLimit specifies the maximum
                            number of availability zones (AZ) that should be used
                            in a region when automatically creating subnets. If a
                            region has more than this number of AZs then this number
                            of AZs will be picked randomly when creating default subnets.
                            Defaults to 3
                          minimum: 1
                          type: integer
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet
                            gateway associated with the VPC.
                          type: string
                        ipv6:
                          description: IPv6 contains ipv6 specific settings for the
                            network. Supported only in managed clusters. This field
                            cannot be set on AWSCluster object.
                          properties:
                            cidrBlock:
                              description: CidrBlock is the CIDR block provided by
                                Amazon when VPC has enabled IPv6.
                              type: string
                            egressOnlyInternetGatewayId:
                              description: EgressOnlyInternetGatewayID is the id of
                                the egress only internet gateway associated with an
                                IPv6 enabled VPC.
                              type: string
                            poolId:
                              description: PoolID is the IP pool which must be defined
                                in case of BYO IP is defined.
                              type: string
                          type: object
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                s3Bucket:
                  description: S3Bucket contains options to configure a supporting
                    S3 bucket for this cluster - currently used for nodes requiring
                    Ignition (https://coreos.github.io/ignition/) for bootstrapping
                    (requires BootstrapFormatIgnition feature flag to be enabled).
                  properties:
                    controlPlaneIAMInstanceProfile:
                      description: ControlPlaneIAMInstanceProfile is a name of the
                        IAMInstanceProfile, which will be allowed to read control-plane
                        node bootstrap data from S3 Bucket.
                      type: string
                    name:
                      description: Name defines name of S3 Bucket to be created.
                      maxLength: 63
                      minLength: 3
                      pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                      type: string
                    nodesIAMInstanceProfiles:
                      description: NodesIAMInstanceProfiles is a list of IAM instance
                        profiles, which will be allowed to read worker nodes bootstrap
                        data from S3 Bucket.
                      items:
                        type: string
                      type: array
                  required:
                  - controlPlaneIAMInstanceProfile
                  - name
                  - nodesIAMInstanceProfiles
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the bastion host. Valid values are empty string (do not use SSH
                    keys), a valid SSH key name, or omitted (use the default SSH key
                    name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster.
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated
                        addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for
                        Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA
                        is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated
                        with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage
                        volumes.
                      items:
                        description: Volume encapsulates the configuration options
                          for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported
                              for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group
                        IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances
                        to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared
                        or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64
                        encoded and should only be used when running a new instance.
                      type: string
                    volumeIDs:
                      description: IDs of the instance's volumes
                      items:
                        type: string
                      type: array
                  required:
                  - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational
                    state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                networkStatus:
                  description: NetworkStatus encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic
                                load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: IdleTimeout is time that the connection
                                is allowed to be idle (no data has been sent over
                                the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability
                            zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check
                            associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                          - healthyThreshold
                          - interval
                          - target
                          - timeout
                          - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic
                              load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                            - instancePort
                            - instanceProtocol
                            - port
                            - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either
                            internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC
                            attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule
                                for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                ipv6CidrBlocks:
                                  description: List of IPv6 CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the
                              security group.
                            type: object
                        required:
                        - id
                        - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsclusterstaticidentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterStaticIdentity
      listKind: AWSClusterStaticIdentityList
      plural: awsclusterstaticidentities
      shortNames:
      - awssi
      singular: awsclusterstaticidentity
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities
            API It represents a reference to an AWS access key ID and secret access
            key, stored in a secret.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                secretRef:
                  description: 'Reference to a secret containing the credentials.
                    The secret should contain the following data keys: AccessKeyID:
                    AKIAIOSFODNN7EXAMPLE SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                    SessionToken: Optional'
                  type: string
              required:
              - secretRef
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities
            API It represents a reference to an AWS access key ID and secret access
            key, stored in a secret.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An
                    empty allowedNamespaces object indicates that AWSClusters can
                    use this identity from any namespace. If this object is nil, no
                    namespaces will be allowed (default behaviour, if this field is
                    not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: An empty selector indicates that AWSClusters cannot
                        use this AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                secretRef:
                  description: 'Reference to a secret containing the credentials.
                    The secret should contain the following data keys: AccessKeyID:
                    AKIAIOSFODNN7EXAMPLE SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                    SessionToken: Optional'
                  type: string
              required:
              - secretRef
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsclustertemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSClusterTemplate
      listKind: AWSClusterTemplateList
      plural: awsclustertemplates
      shortNames:
      - awsct
      singular: awsclustertemplate
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Time duration since creation of AWSClusterTemplate
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes
            Cluster Templates.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.
              properties:
                template:
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: AWSClusterSpec defines the desired state of an
                        EC2-based Kubernetes cluster.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to AWS resources managed by the AWS provider, in addition
                            to the ones added by default.
                          type: object
                        bastion:
                          description: Bastion contains options to configure the bastion
                            host.
                          properties:
                            allowedCIDRBlocks:
                              description: AllowedCIDRBlocks is a list of CIDR blocks
                                allowed to access the bastion host. They are set as
                                ingress rules for the Bastion host's Security Group
                                (defaults to 0.0.0.0/0).
                              items:
                                type: string
                              type: array
                            ami:
                              description: AMI will use the specified AMI to boot
                                the bastion. If not specified, the AMI will default
                                to one picked out in public space.
                              type: string
                            disableIngressRules:
                              description: DisableIngressRules will ensure there are
                                no Ingress rules in the bastion host's security group.
                                Requires AllowedCIDRBlocks to be empty.
                              type: boolean
                            enabled:
                              description: Enabled allows this provider to create
                                a bastion host instance with a public ip to access
                                the VPC private network.
                              type: boolean
                            instanceType:
                              description: InstanceType will use the specified instance
                                type for the bastion. If not specified, Cluster API
                                Provider AWS will use t3.micro for all regions except
                                us-east-1, where t2.micro will be the default.
                              type: string
                          type: object
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint
                            used to communicate with the control plane.
                          properties:
                            host:
                              description: The hostname on which the API server is
                                serving.
                              type: string
                            port:
                              description: The port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                          - host
                          - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: ControlPlaneLoadBalancer is optional configuration
                            for customizing control plane behavior.
                          properties:
                            additionalSecurityGroups:
                              description: AdditionalSecurityGroups sets the security
                                groups used by the load balancer. Expected to be security
                                group IDs This is optional - if not provided new security
                                groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: "CrossZoneLoadBalancing enables the classic
                                ELB cross availability zone balancing. \n With cross-zone
                                load balancing, each load balancer node for your Classic
                                Load Balancer distributes requests evenly across the
                                registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load
                                balancer node distributes requests evenly across the
                                registered instances in its Availability Zone only.
                                \n Defaults to false."
                              type: boolean
                            healthCheckProtocol:
                              description: HealthCheckProtocol sets the protocol type
                                for classic ELB health check target default value
                                is ClassicELBProtocolSSL
                              type: string
                            name:
                              description: Name sets the name of the classic ELB load
                                balancer. As per AWS, the name must be unique within
                                your set of load balancers for the region, must have
                                a maximum of 32 characters, must contain only alphanumeric
                                characters or hyphens, and cannot begin or end with
                                a hyphen. Once set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer
                                (defaults to internet-facing)
                              enum:
                              - internet-facing
                              - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be
                                applied to the control plane load balancer (defaults
                                to discovered subnets for managed VPCs or an empty
                                set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        identityRef:
                          description: IdentityRef is a reference to a identity to
                            be used when reconciling this cluster
                          properties:
                            kind:
                              description: Kind of the identity.
                              enum:
                              - AWSClusterControllerIdentity
                              - AWSClusterRoleIdentity
                              - AWSClusterStaticIdentity
                              type: string
                            name:
                              description: Name of the identity.
                              minLength: 1
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system used to look up machine images when a machine does
                            not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different
                            ImageLookupBaseOS.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                            Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                            with the base OS and kubernetes version, respectively.
                            The BaseOS will be the value in ImageLookupBaseOS or ubuntu
                            (the default), and the kubernetes version as defined by
                            the packages produced by kubernetes/release without v
                            as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For
                            example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                          type: string
                        network:
                          description: NetworkSpec encapsulates all things related
                            to AWS network.
                          properties:
                            cni:
                              description: CNI configuration
                              properties:
                                cniIngressRules:
                                  description: CNIIngressRules specify rules to apply
                                    to control plane and worker node security groups.
                                    The source for the rule will be set to control
                                    plane and worker security group IDs.
                                  items:
                                    description: CNIIngressRule defines an AWS ingress
                                      rule for CNI requirements.
                                    properties:
                                      description:
                                        type: string
                                      fromPort:
                                        format: int64
                                        type: integer
                                      protocol:
                                        description: SecurityGroupProtocol defines
                                          the protocol type for a security group rule.
                                        type: string
                                      toPort:
                                        format: int64
                                        type: integer
                                    required:
                                    - description
                                    - fromPort
                                    - protocol
                                    - toPort
                                    type: object
                                  type: array
                              type: object
                            securityGroupOverrides:
                              additionalProperties:
                                type: string
                              description: SecurityGroupOverrides is an optional set
                                of security groups to use for cluster instances This
                                is optional - if not provided new security groups
                                will be created for the cluster
                              type: object
                            subnets:
                              description: Subnets configuration.
                              items:
                                description: SubnetSpec configures an AWS Subnet.
                                properties:
                                  availabilityZone:
                                    description: AvailabilityZone defines the availability
                                      zone to use for this subnet in the cluster's
                                      region.
                                    type: string
                                  cidrBlock:
                                    description: CidrBlock is the CIDR block to be
                                      used when the provider creates a managed VPC.
                                    type: string
                                  id:
                                    description: ID defines a unique identifier to
                                      reference this resource.
                                    type: string
                                  ipv6CidrBlock:
                                    description: IPv6CidrBlock is the IPv6 CIDR block
                                      to be used when the provider creates a managed
                                      VPC. A subnet can have an IPv4 and an IPv6 address.
                                      IPv6 is only supported in managed clusters,
                                      this field cannot be set on AWSCluster object.
                                    type: string
                                  isIpv6:
                                    description: IsIPv6 defines the subnet as an IPv6
                                      subnet. A subnet is IPv6 when it is associated
                                      with a VPC that has IPv6 enabled. IPv6 is only
                                      supported in managed clusters, this field cannot
                                      be set on AWSCluster object.
                                    type: boolean
                                  isPublic:
                                    description: IsPublic defines the subnet as a
                                      public subnet. A subnet is public when it is
                                      associated with a route table that has a route
                                      to an internet gateway.
                                    type: boolean
                                  natGatewayId:
                                    description: NatGatewayID is the NAT gateway id
                                      associated with the subnet. Ignored unless the
                                      subnet is managed by the provider, in which
                                      case this is set on the public subnet where
                                      the NAT gateway resides. It is then used to
                                      determine routes for private subnets in the
                                      same AZ as the public subnet.
                                    type: string
                                  routeTableId:
                                    description: RouteTableID is the routing table
                                      id associated with the subnet.
                                    type: string
                                  tags:
                                    additionalProperties:
                                      type: string
                                    description: Tags is a collection of tags describing
                                      the resource.
                                    type: object
                                type: object
                              type: array
                            vpc:
                              description: VPC configuration.
                              properties:
                                availabilityZoneSelection:
                                  default: Ordered
                                  description: 'AvailabilityZoneSelection specifies
                                    how AZs should be selected if there are more AZs
                                    in a region than specified by AvailabilityZoneUsageLimit.
                                    There are 2 selection schemes: Ordered - selects
                                    based on alphabetical order Random - selects AZs
                                    randomly in a region Defaults to Ordered'
                                  enum:
                                  - Ordered
                                  - Random
                                  type: string
                                availabilityZoneUsageLimit:
                                  default: 3
                                  description: AvailabilityZoneUsageLimit specifies
                                    the maximum number of availability zones (AZ)
                                    that should be used in a region when automatically
                                    creating subnets. If a region has more than this
                                    number of AZs then this number of AZs will be
                                    picked randomly when creating default subnets.
                                    Defaults to 3
                                  minimum: 1
                                  type: integer
                                cidrBlock:
                                  description: CidrBlock is the CIDR block to be used
                                    when the provider creates a managed VPC. Defaults
                                    to 10.0.0.0/16.
                                  type: string
                                id:
                                  description: ID is the vpc-id of the VPC this provider
                                    should use to create resources.
                                  type: string
                                internetGatewayId:
                                  description: InternetGatewayID is the id of the
                                    internet gateway associated with the VPC.
                                  type: string
                                ipv6:
                                  description: IPv6 contains ipv6 specific settings
                                    for the network. Supported only in managed clusters.
                                    This field cannot be set on AWSCluster object.
                                  properties:
                                    cidrBlock:
                                      description: CidrBlock is the CIDR block provided
                                        by Amazon when VPC has enabled IPv6.
                                      type: string
                                    egressOnlyInternetGatewayId:
                                      description: EgressOnlyInternetGatewayID is
                                        the id of the egress only internet gateway
                                        associated with an IPv6 enabled VPC.
                                      type: string
                                    poolId:
                                      description: PoolID is the IP pool which must
                                        be defined in case of BYO IP is defined.
                                      type: string
                                  type: object
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing
                                    the resource.
                                  type: object
                              type: object
                          type: object
                        region:
                          description: The AWS Region the cluster lives in.
                          type: string
                        s3Bucket:
                          description: S3Bucket contains options to configure a supporting
                            S3 bucket for this cluster - currently used for nodes
                            requiring Ignition (https://coreos.github.io/ignition/)
                            for bootstrapping (requires BootstrapFormatIgnition feature
                            flag to be enabled).
                          properties:
                            controlPlaneIAMInstanceProfile:
                              description: ControlPlaneIAMInstanceProfile is a name
                                of the IAMInstanceProfile, which will be allowed to
                                read control-plane node bootstrap data from S3 Bucket.
                              type: string
                            name:
                              description: Name defines name of S3 Bucket to be created.
                              maxLength: 63
                              minLength: 3
                              pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                              type: string
                            nodesIAMInstanceProfiles:
                              description: NodesIAMInstanceProfiles is a list of IAM
                                instance profiles, which will be allowed to read worker
                                nodes bootstrap data from S3 Bucket.
                              items:
                                type: string
                              type: array
                          required:
                          - controlPlaneIAMInstanceProfile
                          - name
                          - nodesIAMInstanceProfiles
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the bastion host. Valid values are empty string (do
                            not use SSH keys), a valid SSH key name, or omitted (use
                            the default SSH key name)
                          type: string
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: false
      subresources: {}
    - additionalPrinterColumns:
      - description: Time duration since creation of AWSClusterTemplate
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes
            Cluster Templates.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.
              properties:
                template:
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: AWSClusterSpec defines the desired state of an
                        EC2-based Kubernetes cluster.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to AWS resources managed by the AWS provider, in addition
                            to the ones added by default.
                          type: object
                        bastion:
                          description: Bastion contains options to configure the bastion
                            host.
                          properties:
                            allowedCIDRBlocks:
                              description: AllowedCIDRBlocks is a list of CIDR blocks
                                allowed to access the bastion host. They are set as
                                ingress rules for the Bastion host's Security Group
                                (defaults to 0.0.0.0/0).
                              items:
                                type: string
                              type: array
                            ami:
                              description: AMI will use the specified AMI to boot
                                the bastion. If not specified, the AMI will default
                                to one picked out in public space.
                              type: string
                            disableIngressRules:
                              description: DisableIngressRules will ensure there are
                                no Ingress rules in the bastion host's security group.
                                Requires AllowedCIDRBlocks to be empty.
                              type: boolean
                            enabled:
                              description: Enabled allows this provider to create
                                a bastion host instance with a public ip to access
                                the VPC private network.
                              type: boolean
                            instanceType:
                              description: InstanceType will use the specified instance
                                type for the bastion. If not specified, Cluster API
                                Provider AWS will use t3.micro for all regions except
                                us-east-1, where t2.micro will be the default.
                              type: string
                          type: object
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint
                            used to communicate with the control plane.
                          properties:
                            host:
                              description: The hostname on which the API server is
                                serving.
                              type: string
                            port:
                              description: The port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                          - host
                          - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: ControlPlaneLoadBalancer is optional configuration
                            for customizing control plane behavior.
                          properties:
                            additionalSecurityGroups:
                              description: AdditionalSecurityGroups sets the security
                                groups used by the load balancer. Expected to be security
                                group IDs This is optional - if not provided new security
                                groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: "CrossZoneLoadBalancing enables the classic
                                ELB cross availability zone balancing. \n With cross-zone
                                load balancing, each load balancer node for your Classic
                                Load Balancer distributes requests evenly across the
                                registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load
                                balancer node distributes requests evenly across the
                                registered instances in its Availability Zone only.
                                \n Defaults to false."
                              type: boolean
                            healthCheckProtocol:
                              description: HealthCheckProtocol sets the protocol type
                                for classic ELB health check target default value
                                is ClassicELBProtocolSSL
                              type: string
                            name:
                              description: Name sets the name of the classic ELB load
                                balancer. As per AWS, the name must be unique within
                                your set of load balancers for the region, must have
                                a maximum of 32 characters, must contain only alphanumeric
                                characters or hyphens, and cannot begin or end with
                                a hyphen. Once set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer
                                (defaults to internet-facing)
                              enum:
                              - internet-facing
                              - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be
                                applied to the control plane load balancer (defaults
                                to discovered subnets for managed VPCs or an empty
                                set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        identityRef:
                          description: IdentityRef is a reference to a identity to
                            be used when reconciling this cluster
                          properties:
                            kind:
                              description: Kind of the identity.
                              enum:
                              - AWSClusterControllerIdentity
                              - AWSClusterRoleIdentity
                              - AWSClusterStaticIdentity
                              type: string
                            name:
                              description: Name of the identity.
                              minLength: 1
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system used to look up machine images when a machine does
                            not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different
                            ImageLookupBaseOS.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                            Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                            with the base OS and kubernetes version, respectively.
                            The BaseOS will be the value in ImageLookupBaseOS or ubuntu
                            (the default), and the kubernetes version as defined by
                            the packages produced by kubernetes/release without v
                            as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For
                            example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            look up machine images when a machine does not specify
                            an AMI. When set, this will be used for all cluster machines
                            unless a machine specifies a different ImageLookupOrg.
                          type: string
                        network:
                          description: NetworkSpec encapsulates all things related
                            to AWS network.
                          properties:
                            cni:
                              description: CNI configuration
                              properties:
                                cniIngressRules:
                                  description: CNIIngressRules specify rules to apply
                                    to control plane and worker node security groups.
                                    The source for the rule will be set to control
                                    plane and worker security group IDs.
                                  items:
                                    description: CNIIngressRule defines an AWS ingress
                                      rule for CNI requirements.
                                    properties:
                                      description:
                                        type: string
                                      fromPort:
                                        format: int64
                                        type: integer
                                      protocol:
                                        description: SecurityGroupProtocol defines
                                          the protocol type for a security group rule.
                                        type: string
                                      toPort:
                                        format: int64
                                        type: integer
                                    required:
                                    - description
                                    - fromPort
                                    - protocol
                                    - toPort
                                    type: object
                                  type: array
                              type: object
                            securityGroupOverrides:
                              additionalProperties:
                                type: string
                              description: SecurityGroupOverrides is an optional set
                                of security groups to use for cluster instances This
                                is optional - if not provided new security groups
                                will be created for the cluster
                              type: object
                            subnets:
                              description: Subnets configuration.
                              items:
                                description: SubnetSpec configures an AWS Subnet.
                                properties:
                                  availabilityZone:
                                    description: AvailabilityZone defines the availability
                                      zone to use for this subnet in the cluster's
                                      region.
                                    type: string
                                  cidrBlock:
                                    description: CidrBlock is the CIDR block to be
                                      used when the provider creates a managed VPC.
                                    type: string
                                  id:
                                    description: ID defines a unique identifier to
                                      reference this resource.
                                    type: string
                                  ipv6CidrBlock:
                                    description: IPv6CidrBlock is the IPv6 CIDR block
                                      to be used when the provider creates a managed
                                      VPC. A subnet can have an IPv4 and an IPv6 address.
                                      IPv6 is only supported in managed clusters,
                                      this field cannot be set on AWSCluster object.
                                    type: string
                                  isIpv6:
                                    description: IsIPv6 defines the subnet as an IPv6
                                      subnet. A subnet is IPv6 when it is associated
                                      with a VPC that has IPv6 enabled. IPv6 is only
                                      supported in managed clusters, this field cannot
                                      be set on AWSCluster object.
                                    type: boolean
                                  isPublic:
                                    description: IsPublic defines the subnet as a
                                      public subnet. A subnet is public when it is
                                      associated with a route table that has a route
                                      to an internet gateway.
                                    type: boolean
                                  natGatewayId:
                                    description: NatGatewayID is the NAT gateway id
                                      associated with the subnet. Ignored unless the
                                      subnet is managed by the provider, in which
                                      case this is set on the public subnet where
                                      the NAT gateway resides. It is then used to
                                      determine routes for private subnets in the
                                      same AZ as the public subnet.
                                    type: string
                                  routeTableId:
                                    description: RouteTableID is the routing table
                                      id associated with the subnet.
                                    type: string
                                  tags:
                                    additionalProperties:
                                      type: string
                                    description: Tags is a collection of tags describing
                                      the resource.
                                    type: object
                                required:
                                - id
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - id
                              x-kubernetes-list-type: map
                            vpc:
                              description: VPC configuration.
                              properties:
                                availabilityZoneSelection:
                                  default: Ordered
                                  description: 'AvailabilityZoneSelection specifies
                                    how AZs should be selected if there are more AZs
                                    in a region than specified by AvailabilityZoneUsageLimit.
                                    There are 2 selection schemes: Ordered - selects
                                    based on alphabetical order Random - selects AZs
                                    randomly in a region Defaults to Ordered'
                                  enum:
                                  - Ordered
                                  - Random
                                  type: string
                                availabilityZoneUsageLimit:
                                  default: 3
                                  description: AvailabilityZoneUsageLimit specifies
                                    the maximum number of availability zones (AZ)
                                    that should be used in a region when automatically
                                    creating subnets. If a region has more than this
                                    number of AZs then this number of AZs will be
                                    picked randomly when creating default subnets.
                                    Defaults to 3
                                  minimum: 1
                                  type: integer
                                cidrBlock:
                                  description: CidrBlock is the CIDR block to be used
                                    when the provider creates a managed VPC. Defaults
                                    to 10.0.0.0/16.
                                  type: string
                                id:
                                  description: ID is the vpc-id of the VPC this provider
                                    should use to create resources.
                                  type: string
                                internetGatewayId:
                                  description: InternetGatewayID is the id of the
                                    internet gateway associated with the VPC.
                                  type: string
                                ipv6:
                                  description: IPv6 contains ipv6 specific settings
                                    for the network. Supported only in managed clusters.
                                    This field cannot be set on AWSCluster object.
                                  properties:
                                    cidrBlock:
                                      description: CidrBlock is the CIDR block provided
                                        by Amazon when VPC has enabled IPv6.
                                      type: string
                                    egressOnlyInternetGatewayId:
                                      description: EgressOnlyInternetGatewayID is
                                        the id of the egress only internet gateway
                                        associated with an IPv6 enabled VPC.
                                      type: string
                                    poolId:
                                      description: PoolID is the IP pool which must
                                        be defined in case of BYO IP is defined.
                                      type: string
                                  type: object
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing
                                    the resource.
                                  type: object
                              type: object
                          type: object
                        region:
                          description: The AWS Region the cluster lives in.
                          type: string
                        s3Bucket:
                          description: S3Bucket contains options to configure a supporting
                            S3 bucket for this cluster - currently used for nodes
                            requiring Ignition (https://coreos.github.io/ignition/)
                            for bootstrapping (requires BootstrapFormatIgnition feature
                            flag to be enabled).
                          properties:
                            controlPlaneIAMInstanceProfile:
                              description: ControlPlaneIAMInstanceProfile is a name
                                of the IAMInstanceProfile, which will be allowed to
                                read control-plane node bootstrap data from S3 Bucket.
                              type: string
                            name:
                              description: Name defines name of S3 Bucket to be created.
                              maxLength: 63
                              minLength: 3
                              pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                              type: string
                            nodesIAMInstanceProfiles:
                              description: NodesIAMInstanceProfiles is a list of IAM
                                instance profiles, which will be allowed to read worker
                                nodes bootstrap data from S3 Bucket.
                              items:
                                type: string
                              type: array
                          required:
                          - controlPlaneIAMInstanceProfile
                          - name
                          - nodesIAMInstanceProfiles
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the bastion host. Valid values are empty string (do
                            not use SSH keys), a valid SSH key name, or omitted (use
                            the default SSH key name)
                          type: string
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsfargateprofiles.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSFargateProfile
      listKind: AWSFargateProfileList
      plural: awsfargateprofiles
      shortNames:
      - awsfp
      singular: awsfargateprofile
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: AWSFargateProfile ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EKS Fargate profile name
        jsonPath: .spec.profileName
        name: ProfileName
        type: string
      - description: Failure reason
        jsonPath: .status.failureReason
        name: FailureReason
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSFargateProfile is the Schema for the awsfargateprofiles
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FargateProfileSpec defines the desired state of FargateProfile.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                profileName:
                  description: ProfileName specifies the profile name.
                  type: string
                roleName:
                  description: RoleName specifies the name of IAM role for this fargate
                    pool If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                selectors:
                  description: Selectors specify fargate pod selectors.
                  items:
                    description: FargateSelector specifies a selector for pods that
                      should run on this fargate pool.
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies which pod labels this selector
                          should match.
                        type: object
                      namespace:
                        description: Namespace specifies which namespace this selector
                          should match.
                        type: string
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup.
                  items:
                    type: string
                  type: array
              required:
              - clusterName
              type: object
            status:
              description: FargateProfileStatus defines the observed state of FargateProfile.
              properties:
                conditions:
                  description: Conditions defines current state of the Fargate profile.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a succinct value suitable for machine interpretation.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the FargateProfile is available.
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: AWSFargateProfile ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EKS Fargate profile name
        jsonPath: .spec.profileName
        name: ProfileName
        type: string
      - description: Failure reason
        jsonPath: .status.failureReason
        name: FailureReason
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSFargateProfile is the Schema for the awsfargateprofiles
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FargateProfileSpec defines the desired state of FargateProfile.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                profileName:
                  description: ProfileName specifies the profile name.
                  type: string
                roleName:
                  description: RoleName specifies the name of IAM role for this fargate
                    pool If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                selectors:
                  description: Selectors specify fargate pod selectors.
                  items:
                    description: FargateSelector specifies a selector for pods that
                      should run on this fargate pool.
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies which pod labels this selector
                          should match.
                        type: object
                      namespace:
                        description: Namespace specifies which namespace this selector
                          should match.
                        type: string
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup.
                  items:
                    type: string
                  type: array
              required:
              - clusterName
              type: object
            status:
              description: FargateProfileStatus defines the observed state of FargateProfile.
              properties:
                conditions:
                  description: Conditions defines current state of the Fargate profile.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the FargateProfile and will
                    contain a succinct value suitable for machine interpretation.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the FargateProfile's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    FargateProfiles can be added as events to the FargateProfile object
                    and/or logged in the controller's output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the FargateProfile is available.
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsmachinepools.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachinePool
      listKind: AWSMachinePoolList
      plural: awsmachinepools
      shortNames:
      - awsmp
      singular: awsmachinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Machine ready status
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Minimum instanes in ASG
        jsonPath: .spec.minSize
        name: MinSize
        type: integer
      - description: Maximum instanes in ASG
        jsonPath: .spec.maxSize
        name: MaxSize
        type: integer
      - description: Launch Template ID
        jsonPath: .status.launchTemplateID
        name: LaunchTemplate ID
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider.
                  type: object
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and
                    version to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID or filters. Only one of ID or Filters
                          may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look
                            up an EKS Optimized image in SSM Parameter store
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to
                        look up the image for this machine It will be ignored if an
                        explicit AMI is set. Supports substitutions for {{.BaseOS}}
                        and {{.K8sVersion}} with the base OS and kubernetes version,
                        respectively. The BaseOS will be the value in ImageLookupBaseOS
                        or ubuntu (the default), and the kubernetes version as defined
                        by the packages produced by kubernetes/release without v as
                        a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                        the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                        will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                        for a Machine that is targeting kubernetes v1.18.0 and the
                        ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                        Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool
                        instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach
                        to the instance. Valid values are empty string (do not use
                        SSH keys), a valid SSH key name, or omitted (use the default
                        SSH key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                        that is applied. Typically a new version is created when at
                        least one of the following happens: 1) A new launch template
                        spec is applied. 2) One or more parameters in an existing
                        template is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling
                    group feature
                  type: boolean
                defaultCoolDown:
                  description: The amount of time, in seconds, after a scaling activity
                    completes before another scaling activity can start. If no value
                    is supplied by user a default value of 300 seconds is set
                  type: string
                maxSize:
                  default: 1
                  description: MaxSize defines the maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: MinSize defines the minimum size of the group.
                  format: int32
                  minimum: 0
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance
                    types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution
                        of On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to
                            allocate instance types to fulfill On-Demand capacity.
                          enum:
                          - prioritized
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate
                            instances across Spot Instance pools.
                          enum:
                          - lowest-price
                          - capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: Overrides are used to override the instance type
                          specified by the launch template with multiple instance
                          types that can be used to launch On-Demand Instances and
                          Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                        - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated
                    with the instance refresh request.
                  properties:
                    instanceWarmup:
                      description: The number of seconds until a newly launched instance
                        is configured and ready to use. During this time, the next
                        replacement will not be initiated. The default is to use the
                        value for the health check grace period defined for the group.
                      format: int64
                      type: integer
                    minHealthyPercentage:
                      description: The amount of capacity as a percentage in ASG that
                        must remain healthy during an instance refresh. The default
                        is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: The strategy to use for the instance refresh. The
                        only valid value is Rolling. A rolling update is an update
                        that is applied to all instances in an Auto Scaling group
                        until all instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID or filters. Only one of ID or Filters may
                      be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
              required:
              - awsLaunchTemplate
              - maxSize
              - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling
                    API.
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instances:
                  description: Instances contains the status for each instance in
                    the pool
                  items:
                    description: AWSMachinePoolInstanceStatus defines the status of
                      the AWSMachinePoolInstance.
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine
                          Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the
                          Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Machine ready status
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Minimum instanes in ASG
        jsonPath: .spec.minSize
        name: MinSize
        type: integer
      - description: Maximum instanes in ASG
        jsonPath: .spec.maxSize
        name: MaxSize
        type: integer
      - description: Launch Template ID
        jsonPath: .status.launchTemplateID
        name: LaunchTemplate ID
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider.
                  type: object
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and
                    version to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID or filters. Only one of ID or Filters
                          may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look
                            up an EKS Optimized image in SSM Parameter store
                          enum:
                          - AmazonLinux
                          - AmazonLinuxGPU
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to
                        look up the image for this machine It will be ignored if an
                        explicit AMI is set. Supports substitutions for {{.BaseOS}}
                        and {{.K8sVersion}} with the base OS and kubernetes version,
                        respectively. The BaseOS will be the value in ImageLookupBaseOS
                        or ubuntu (the default), and the kubernetes version as defined
                        by the packages produced by kubernetes/release without v as
                        a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                        the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                        will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                        for a Machine that is targeting kubernetes v1.18.0 and the
                        ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                        Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool
                        instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach
                        to the instance. Valid values are empty string (do not use
                        SSH keys), a valid SSH key name, or omitted (use the default
                        SSH key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                        that is applied. Typically a new version is created when at
                        least one of the following happens: 1) A new launch template
                        spec is applied. 2) One or more parameters in an existing
                        template is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling
                    group feature
                  type: boolean
                defaultCoolDown:
                  description: The amount of time, in seconds, after a scaling activity
                    completes before another scaling activity can start. If no value
                    is supplied by user a default value of 300 seconds is set
                  type: string
                maxSize:
                  default: 1
                  description: MaxSize defines the maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: MinSize defines the minimum size of the group.
                  format: int32
                  minimum: 0
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance
                    types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution
                        of On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to
                            allocate instance types to fulfill On-Demand capacity.
                          enum:
                          - prioritized
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate
                            instances across Spot Instance pools.
                          enum:
                          - lowest-price
                          - capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: Overrides are used to override the instance type
                          specified by the launch template with multiple instance
                          types that can be used to launch On-Demand Instances and
                          Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                        - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated
                    with the instance refresh request.
                  properties:
                    disable:
                      description: Disable, if true, disables instance refresh from
                        triggering when new launch templates are detected. This is
                        useful in scenarios where ASG nodes are externally managed.
                      type: boolean
                    instanceWarmup:
                      description: The number of seconds until a newly launched instance
                        is configured and ready to use. During this time, the next
                        replacement will not be initiated. The default is to use the
                        value for the health check grace period defined for the group.
                      format: int64
                      type: integer
                    minHealthyPercentage:
                      description: The amount of capacity as a percentage in ASG that
                        must remain healthy during an instance refresh. The default
                        is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: The strategy to use for the instance refresh. The
                        only valid value is Rolling. A rolling update is an update
                        that is applied to all instances in an Auto Scaling group
                        until all instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID or filters. Only one of ID or Filters may
                      be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                suspendProcesses:
                  description: SuspendProcesses defines a list of processes to suspend
                    for the given ASG. This is constantly reconciled. If a process
                    is removed from this list it will automatically be resumed.
                  properties:
                    all:
                      type: boolean
                    processes:
                      description: Processes defines the processes which can be enabled
                        or disabled individually.
                      properties:
                        addToLoadBalancer:
                          type: boolean
                        alarmNotification:
                          type: boolean
                        azRebalance:
                          type: boolean
                        healthCheck:
                          type: boolean
                        instanceRefresh:
                          type: boolean
                        launch:
                          type: boolean
                        replaceUnhealthy:
                          type: boolean
                        scheduledActions:
                          type: boolean
                        terminate:
                          type: boolean
                      type: object
                  type: object
              required:
              - awsLaunchTemplate
              - maxSize
              - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling
                    API.
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instances:
                  description: Instances contains the status for each instance in
                    the pool
                  items:
                    description: AWSMachinePoolInstanceStatus defines the status of
                      the AWSMachinePoolInstance.
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine
                          Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the
                          Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta2
    name: awsmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachine
      listKind: AWSMachineList
      plural: awsmachines
      shortNames:
      - awsm
      singular: awsmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AWSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: EC2 instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EC2 instance ID
        jsonPath: .spec.providerID
        name: InstanceID
        type: string
      - description: Machine object which owns with this AWSMachine
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachine is the schema for Amazon EC2 machines.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of an Amazon EC2
                instance.
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references
                    to security groups that should be applied to the instance. These
                    security groups would be set in addition to any security groups
                    defined at the cluster level or in the actuator. It is possible
                    to specify either IDs of Filters. Using Filters will cause additional
                    requests to AWS API and if tags change the attached security groups
                    might change too.
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID or filters. Only one of ID or Filters may
                      be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      arn:
                        description: 'ARN of resource. Deprecated: This field has
                          no function and is going to be removed in the next release.'
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider. If both the AWSCluster and the AWSMachine specify the
                    same tag name with different values, the AWSMachine's value takes
                    precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look
                        up an EKS Optimized image in SSM Parameter store
                      enum:
                      - AmazonLinux
                      - AmazonLinuxGPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: InsecureSkipSecretsManager, when set to true will
                        not use AWS Secrets Manager or AWS Systems Manager Parameter
                        Store to ensure privacy of userdata. By default, a cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name.
                        This is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: SecureSecretsBackend, when set to parameter-store
                        will utilize the AWS Systems Manager Parameter Storage to
                        distribute secrets. By default or with the value of secrets-manager,
                        will use AWS Secrets Manager instead.
                      enum:
                      - secrets-manager
                      - ssm-parameter-store
                      type: string
                  type: object
                failureDomain:
                  description: FailureDomain is the failure domain unique identifier
                    this Machine should be attached to, as defined in Cluster API.
                    For this infrastructure provider, the ID is equivalent to an AWS
                    Availability Zone. If multiple subnets are matched for the availability
                    zone, the first one returned is picked.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                ignition:
                  description: Ignition defined options related to the bootstrapping
                    systems where Ignition is used.
                  properties:
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will
                        be used to generate bootstrap data.
                      enum:
                      - "2.3"
                      type: string
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system to use for image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up the image for this machine It will be ignored if an explicit
                    AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                    with the base OS and kubernetes version, respectively. The BaseOS
                    will be the value in ImageLookupBaseOS or ubuntu (the default),
                    and the kubernetes version as defined by the packages produced
                    by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                    or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  minLength: 2
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for
                      the storage device.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be
                          used. The key must already exist and be accessible by the
                          controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever
                          is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for
                          the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                    - size
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get
                    a public IP. Precedence for this setting is as follows: 1. This
                    field if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt
                        the volume. Can be either a KMS key ID or ARN. If Encrypted
                        is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever
                        is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for
                        the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1,
                        etc...).
                      type: string
                  required:
                  - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances
                    to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is
                        willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the instance. Valid values are empty string (do not use SSH keys),
                    a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this
                    instance. If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: 'ARN of resource. Deprecated: This field has no
                        function and is going to be removed in the next release.'
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared
                    or single-tenant hardware.
                  enum:
                  - default
                  - dedicated
                  - host
                  type: string
                uncompressedUserData:
                  description: UncompressedUserData specify whether the user data
                    is gzip-compressed before it is sent to ec2 instance. cloud-init
                    has built-in support for gzip-compressed user data user data stored
                    in aws secret manager is always gzip-compressed.
                  type: boolean
              required:
              - instanceType
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine.
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for
                    this machine.
                  type: string
                interruptible:
                  description: Interruptible reports that this machine is using spot
                    instances and can therefore be interrupted by CAPI when it receives
                    a notice that the spot instance is to be terminated by AWS. This
                    will be set to true when SpotMarketOptions is not nil (i.e. this
                    machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Cluster to which this AWSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: EC2 instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EC2 instance ID
        jsonPath: .spec.providerID
        name: InstanceID
        type: string
      - description: Machine object which owns with this AWSMachine
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachine is the schema for Amazon EC2 machines.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of an Amazon EC2
                instance.
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references
                    to security groups that should be applied to the instance. These
                    security groups would be set in addition to any security groups
                    defined at the cluster level or in the actuator. It is possible
                    to specify either IDs of Filters. Using Filters will cause additional
                    requests to AWS API and if tags change the attached security groups
                    might change too.
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID or filters. Only one of ID or Filters may
                      be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider. If both the AWSCluster and the AWSMachine specify the
                    same tag name with different values, the AWSMachine's value takes
                    precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look
                        up an EKS Optimized image in SSM Parameter store
                      enum:
                      - AmazonLinux
                      - AmazonLinuxGPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: InsecureSkipSecretsManager, when set to true will
                        not use AWS Secrets Manager or AWS Systems Manager Parameter
                        Store to ensure privacy of userdata. By default, a cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name.
                        This is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: SecureSecretsBackend, when set to parameter-store
                        will utilize the AWS Systems Manager Parameter Storage to
                        distribute secrets. By default or with the value of secrets-manager,
                        will use AWS Secrets Manager instead.
                      enum:
                      - secrets-manager
                      - ssm-parameter-store
                      type: string
                  type: object
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                ignition:
                  description: Ignition defined options related to the bootstrapping
                    systems where Ignition is used.
                  properties:
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will
                        be used to generate bootstrap data.
                      enum:
                      - "2.3"
                      type: string
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system to use for image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up the image for this machine It will be ignored if an explicit
                    AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                    with the base OS and kubernetes version, respectively. The BaseOS
                    will be the value in ImageLookupBaseOS or ubuntu (the default),
                    and the kubernetes version as defined by the packages produced
                    by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                    or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  minLength: 2
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for
                      the storage device.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be
                          used. The key must already exist and be accessible by the
                          controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever
                          is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for
                          the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                    - size
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get
                    a public IP. Precedence for this setting is as follows: 1. This
                    field if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt
                        the volume. Can be either a KMS key ID or ARN. If Encrypted
                        is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever
                        is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for
                        the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1,
                        etc...).
                      type: string
                  required:
                  - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances
                    to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is
                        willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the instance. Valid values are empty string (do not use SSH keys),
                    a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this
                    instance. If not specified, the cluster subnet will be used.
                  properties:
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared
                    or single-tenant hardware.
                  enum:
                  - default
                  - dedicated
                  - host
                  type: string
                uncompressedUserData:
                  description: UncompressedUserData specify whether the user data
                    is gzip-compressed before it is sent to ec2 instance. cloud-init
                    has built-in support for gzip-compressed user data user data stored
                    in aws secret manager is always gzip-compressed.
                  type: boolean
              required:
              - instanceType
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine.
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for
                    this machine.
                  type: string
                interruptible:
                  description: Interruptible reports that this machine is using spot
                    instances and can therefore be interrupted by CAPI when it receives
                    a notice that the spot instance is to be terminated by AWS. This
                    will be set to true when SpotMarketOptions is not nil (i.e. this
                    machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta2
    name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachineTemplate
      listKind: AWSMachineTemplateList
      plural: awsmachinetemplates
      shortNames:
      - awsmt
      singular: awsmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the schema for the Amazon EC2 Machine
            Templates API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any
                            security groups defined at the cluster level or in the
                            actuator. It is possible to specify either IDs of Filters.
                            Using Filters will cause additional requests to AWS API
                            and if tags change the attached security groups might
                            change too.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID or filters. Only one of
                              ID or Filters may be specified. Specifying more than
                              one will result in a validation error.
                            properties:
                              arn:
                                description: 'ARN of resource. Deprecated: This field
                                  has no function and is going to be removed in the
                                  next release.'
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource.
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which
                            to create the machine instance.
                          properties:
                            eksLookupType:
                              description: EKSOptimizedLookupType If specified, will
                                look up an EKS Optimized image in SSM Parameter store
                              enum:
                              - AmazonLinux
                              - AmazonLinuxGPU
                              type: string
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: InsecureSkipSecretsManager, when set to
                                true will not use AWS Secrets Manager or AWS Systems
                                Manager Parameter Store to ensure privacy of userdata.
                                By default, a cloud-init boothook shell script is
                                prepended to download the userdata from Secrets Manager
                                and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when
                                the machine registers as a node against the workload
                                cluster.
                              type: string
                            secureSecretsBackend:
                              description: SecureSecretsBackend, when set to parameter-store
                                will utilize the AWS Systems Manager Parameter Storage
                                to distribute secrets. By default or with the value
                                of secrets-manager, will use AWS Secrets Manager instead.
                              enum:
                              - secrets-manager
                              - ssm-parameter-store
                              type: string
                          type: object
                        failureDomain:
                          description: FailureDomain is the failure domain unique
                            identifier this Machine should be attached to, as defined
                            in Cluster API. For this infrastructure provider, the
                            ID is equivalent to an AWS Availability Zone. If multiple
                            subnets are matched for the availability zone, the first
                            one returned is picked.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        ignition:
                          description: Ignition defined options related to the bootstrapping
                            systems where Ignition is used.
                          properties:
                            version:
                              default: "2.3"
                              description: Version defines which version of Ignition
                                will be used to generate bootstrap data.
                              enum:
                              - "2.3"
                              type: string
                          type: object
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system to use for image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up the image for this machine It will be ignored
                            if an explicit AMI is set. Supports substitutions for
                            {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                            version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes
                            version as defined by the packages produced by kubernetes/release
                            without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3.
                            For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this
                            machine.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                            Example: m4.xlarge'
                          minLength: 2
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage
                            volumes.
                          items:
                            description: Volume encapsulates the configuration options
                              for the storage device.
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should
                                  be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: EncryptionKey is the KMS key to use to
                                  encrypt the volume. Can be either a KMS key ID or
                                  ARN. If Encrypted is set and this is omitted, the
                                  default AWS key will be used. The key must already
                                  exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested
                                  for the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: Size specifies size (in Gi) of the storage
                                  device. Must be greater than the image snapshot
                                  size or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              throughput:
                                description: Throughput to provision in MiB/s supported
                                  for the volume type. Not applicable to all types.
                                format: int64
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g.
                                  gp2, io1, etc...).
                                type: string
                            required:
                            - size
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                            get a public IP. Precedence for this setting is as follows:
                            1. This field if set 2. Cluster/flavor setting 3. Subnet
                            default'
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options
                            for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported
                                for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure
                            instances to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the
                                user is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance. Valid values are empty string (do not
                            use SSH keys), a valid SSH key name, or omitted (use the
                            default SSH key name)
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use
                            for this instance. If not specified, the cluster subnet
                            will be used.
                          properties:
                            arn:
                              description: 'ARN of resource. Deprecated: This field
                                has no function and is going to be removed in the
                                next release.'
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on
                            shared or single-tenant hardware.
                          enum:
                          - default
                          - dedicated
                          - host
                          type: string
                        uncompressedUserData:
                          description: UncompressedUserData specify whether the user
                            data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user
                            data user data stored in aws secret manager is always
                            gzip-compressed.
                          type: boolean
                      required:
                      - instanceType
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
            status:
              description: AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined
                    in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                  type: object
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the schema for the Amazon EC2 Machine
            Templates API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any
                            security groups defined at the cluster level or in the
                            actuator. It is possible to specify either IDs of Filters.
                            Using Filters will cause additional requests to AWS API
                            and if tags change the attached security groups might
                            change too.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID or filters. Only one of
                              ID or Filters may be specified. Specifying more than
                              one will result in a validation error.
                            properties:
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource.
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which
                            to create the machine instance.
                          properties:
                            eksLookupType:
                              description: EKSOptimizedLookupType If specified, will
                                look up an EKS Optimized image in SSM Parameter store
                              enum:
                              - AmazonLinux
                              - AmazonLinuxGPU
                              type: string
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: InsecureSkipSecretsManager, when set to
                                true will not use AWS Secrets Manager or AWS Systems
                                Manager Parameter Store to ensure privacy of userdata.
                                By default, a cloud-init boothook shell script is
                                prepended to download the userdata from Secrets Manager
                                and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when
                                the machine registers as a node against the workload
                                cluster.
                              type: string
                            secureSecretsBackend:
                              description: SecureSecretsBackend, when set to parameter-store
                                will utilize the AWS Systems Manager Parameter Storage
                                to distribute secrets. By default or with the value
                                of secrets-manager, will use AWS Secrets Manager instead.
                              enum:
                              - secrets-manager
                              - ssm-parameter-store
                              type: string
                          type: object
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        ignition:
                          description: Ignition defined options related to the bootstrapping
                            systems where Ignition is used.
                          properties:
                            version:
                              default: "2.3"
                              description: Version defines which version of Ignition
                                will be used to generate bootstrap data.
                              enum:
                              - "2.3"
                              type: string
                          type: object
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system to use for image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up the image for this machine It will be ignored
                            if an explicit AMI is set. Supports substitutions for
                            {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                            version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes
                            version as defined by the packages produced by kubernetes/release
                            without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3.
                            For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this
                            machine.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                            Example: m4.xlarge'
                          minLength: 2
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage
                            volumes.
                          items:
                            description: Volume encapsulates the configuration options
                              for the storage device.
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should
                                  be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: EncryptionKey is the KMS key to use to
                                  encrypt the volume. Can be either a KMS key ID or
                                  ARN. If Encrypted is set and this is omitted, the
                                  default AWS key will be used. The key must already
                                  exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested
                                  for the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: Size specifies size (in Gi) of the storage
                                  device. Must be greater than the image snapshot
                                  size or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              throughput:
                                description: Throughput to provision in MiB/s supported
                                  for the volume type. Not applicable to all types.
                                format: int64
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g.
                                  gp2, io1, etc...).
                                type: string
                            required:
                            - size
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                            get a public IP. Precedence for this setting is as follows:
                            1. This field if set 2. Cluster/flavor setting 3. Subnet
                            default'
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options
                            for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported
                                for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure
                            instances to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the
                                user is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance. Valid values are empty string (do not
                            use SSH keys), a valid SSH key name, or omitted (use the
                            default SSH key name)
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use
                            for this instance. If not specified, the cluster subnet
                            will be used.
                          properties:
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on
                            shared or single-tenant hardware.
                          enum:
                          - default
                          - dedicated
                          - host
                          type: string
                        uncompressedUserData:
                          description: UncompressedUserData specify whether the user
                            data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user
                            data user data stored in aws secret manager is always
                            gzip-compressed.
                          type: boolean
                      required:
                      - instanceType
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
            status:
              description: AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined
                    in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                  type: object
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsmanagedclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSManagedCluster
      listKind: AWSManagedClusterList
      plural: awsmanagedclusters
      shortNames:
      - awsmc
      singular: awsmanagedcluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AWSManagedControl belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Control plane infrastructure is ready for worker nodes
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: API Endpoint
        jsonPath: .spec.controlPlaneEndpoint.host
        name: Endpoint
        priority: 1
        type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSManagedCluster is the Schema for the awsmanagedclusters
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedClusterSpec defines the desired state of AWSManagedCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
              type: object
            status:
              description: AWSManagedClusterStatus defines the observed state of AWSManagedCluster
              properties:
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains specifies a list fo available availability
                    zones that can be used
                  type: object
                ready:
                  description: Ready is when the AWSManagedControlPlane has a API
                    server URL.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: awsmanagedmachinepools.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSManagedMachinePool
      listKind: AWSManagedMachinePoolList
      plural: awsmanagedmachinepools
      shortNames:
      - awsmmp
      singular: awsmanagedmachinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: MachinePool ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Number of replicas
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSManagedMachinePool is the Schema for the awsmanagedmachinepools
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedMachinePoolSpec defines the desired state of
                AWSManagedMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                amiType:
                  default: AL2_x86_64
                  description: AMIType defines the AMI type
                  enum:
                  - AL2_x86_64
                  - AL2_x86_64_GPU
                  - AL2_ARM_64
                  - CUSTOM
                  type: string
                amiVersion:
                  description: AMIVersion defines the desired AMI release version.
                    If no version number is supplied then the latest version for the
                    Kubernetes version will be used
                  minLength: 2
                  type: string
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template to
                    use to create the managed node group. If AWSLaunchTemplate is
                    specified, certain node group configuraions outside of launch
                    template are prohibited (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID or filters. Only one of ID or Filters
                          may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look
                            up an EKS Optimized image in SSM Parameter store
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to
                        look up the image for this machine It will be ignored if an
                        explicit AMI is set. Supports substitutions for {{.BaseOS}}
                        and {{.K8sVersion}} with the base OS and kubernetes version,
                        respectively. The BaseOS will be the value in ImageLookupBaseOS
                        or ubuntu (the default), and the kubernetes version as defined
                        by the packages produced by kubernetes/release without v as
                        a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                        the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                        will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                        for a Machine that is targeting kubernetes v1.18.0 and the
                        ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                        Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool
                        instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach
                        to the instance. Valid values are empty string (do not use
                        SSH keys), a valid SSH key name, or omitted (use the default
                        SSH key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                        that is applied. Typically a new version is created when at
                        least one of the following happens: 1) A new launch template
                        spec is applied. 2) One or more parameters in an existing
                        template is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityType:
                  default: onDemand
                  description: CapacityType specifies the capacity type for the ASG
                    behind this pool
                  enum:
                  - onDemand
                  - spot
                  type: string
                diskSize:
                  description: DiskSize specifies the root disk size
                  format: int32
                  type: integer
                eksNodegroupName:
                  description: EKSNodegroupName specifies the name of the nodegroup
                    in AWS corresponding to this MachinePool. If you don't specify
                    a name then a default name will be created based on the namespace
                    and name of the managed machine pool.
                  type: string
                instanceType:
                  description: InstanceType specifies the AWS instance type
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Labels specifies labels for the Kubernetes node objects
                  type: object
                providerIDList:
                  description: ProviderIDList are the provider IDs of instances in
                    the autoscaling group corresponding to the nodegroup represented
                    by this machine pool
                  items:
                    type: string
                  type: array
                remoteAccess:
                  description: RemoteAccess specifies how machines can be accessed
                    remotely
                  properties:
                    public:
                      description: Public specifies whether to open port 22 to the
                        public internet
                      type: boolean
                    sourceSecurityGroups:
                      description: SourceSecurityGroups specifies which security groups
                        are allowed access
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: SSHKeyName specifies which EC2 SSH key can be used
                        to access machines. If left empty, the key from the control
                        plane is used.
                      type: string
                  type: object
                roleAdditionalPolicies:
                  description: RoleAdditionalPolicies allows you to attach additional
                    polices to the node group role. You must enable the EKSAllowAddRoles
                    feature flag to incorporate these into the created role.
                  items:
                    type: string
                  type: array
                roleName:
                  description: RoleName specifies the name of IAM role for the node
                    group. If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                scaling:
                  description: Scaling specifies scaling for the ASG behind this pool
                  properties:
                    maxSize:
                      format: int32
                      type: integer
                    minSize:
                      format: int32
                      type: integer
                  type: object
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup
                  items:
                    type: string
                  type: array
                taints:
                  description: Taints specifies the taints to apply to the nodes of
                    the machine pool
                  items:
                    description: Taint defines the specs for a Kubernetes taint.
                    properties:
                      effect:
                        description: Effect specifies the effect for the taint
                        enum:
                        - no-schedule
                        - no-execute
                        - prefer-no-schedule
                        type: string
                      key:
                        description: Key is the key of the taint
                        type: string
                      value:
                        description: Value is the value of the taint
                        type: string
                    required:
                    - effect
                    - key
                    - value
                    type: object
                  type: array
                updateConfig:
                  description: UpdateConfig holds the optional config to control the
                    behaviour of the update to the nodegroup.
                  properties:
                    maxUnavailable:
                      description: MaxUnavailable is the maximum number of nodes unavailable
                        at once during a version update. Nodes will be updated in
                        parallel. The maximum number is 100.
                      maximum: 100
                      minimum: 1
                      type: integer
                    maxUnavailablePrecentage:
                      description: MaxUnavailablePercentage is the maximum percentage
                        of nodes unavailable during a version update. This percentage
                        of nodes will be updated in parallel, up to 100 nodes at once.
                      maximum: 100
                      minimum: 1
                      type: integer
                  type: object
              type: object
            status:
              description: AWSManagedMachinePoolStatus defines the observed state
                of AWSManagedMachinePool.
              properties:
                conditions:
                  description: Conditions defines current service state of the managed
                    machine pool
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the MachinePool's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    MachinePools can be added as events to the MachinePool object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of MachinePools can
                    be added as events to the MachinePool object and/or logged in
                    the controller's output."
                  type: string
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the AWSManagedMachinePool nodegroup
                    has joined the cluster
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
              required:
              - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: MachinePool ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Number of replicas
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSManagedMachinePool is the Schema for the awsmanagedmachinepools
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedMachinePoolSpec defines the desired state of
                AWSManagedMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                amiType:
                  default: AL2_x86_64
                  description: AMIType defines the AMI type
                  enum:
                  - AL2_x86_64
                  - AL2_x86_64_GPU
                  - AL2_ARM_64
                  - CUSTOM
                  type: string
                amiVersion:
                  description: AMIVersion defines the desired AMI release version.
                    If no version number is supplied then the latest version for the
                    Kubernetes version will be used
                  minLength: 2
                  type: string
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones
                    instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template to
                    use to create the managed node group. If AWSLaunchTemplate is
                    specified, certain node group configuraions outside of launch
                    template are prohibited (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID or filters. Only one of ID or Filters
                          may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look
                            up an EKS Optimized image in SSM Parameter store
                          enum:
                          - AmazonLinux
                          - AmazonLinuxGPU
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to
                        look up the image for this machine It will be ignored if an
                        explicit AMI is set. Supports substitutions for {{.BaseOS}}
                        and {{.K8sVersion}} with the base OS and kubernetes version,
                        respectively. The BaseOS will be the value in ImageLookupBaseOS
                        or ubuntu (the default), and the kubernetes version as defined
                        by the packages produced by kubernetes/release without v as
                        a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                        the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                        will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                        for a Machine that is targeting kubernetes v1.18.0 and the
                        ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                        Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage
                            device. Must be greater than the image snapshot size or
                            8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported
                            for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                      - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool
                        instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user
                            is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach
                        to the instance. Valid values are empty string (do not use
                        SSH keys), a valid SSH key name, or omitted (use the default
                        SSH key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                        that is applied. Typically a new version is created when at
                        least one of the following happens: 1) A new launch template
                        spec is applied. 2) One or more parameters in an existing
                        template is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityType:
                  default: onDemand
                  description: CapacityType specifies the capacity type for the ASG
                    behind this pool
                  enum:
                  - onDemand
                  - spot
                  type: string
                diskSize:
                  description: DiskSize specifies the root disk size
                  format: int32
                  type: integer
                eksNodegroupName:
                  description: EKSNodegroupName specifies the name of the nodegroup
                    in AWS corresponding to this MachinePool. If you don't specify
                    a name then a default name will be created based on the namespace
                    and name of the managed machine pool.
                  type: string
                instanceType:
                  description: InstanceType specifies the AWS instance type
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Labels specifies labels for the Kubernetes node objects
                  type: object
                providerIDList:
                  description: ProviderIDList are the provider IDs of instances in
                    the autoscaling group corresponding to the nodegroup represented
                    by this machine pool
                  items:
                    type: string
                  type: array
                remoteAccess:
                  description: RemoteAccess specifies how machines can be accessed
                    remotely
                  properties:
                    public:
                      description: Public specifies whether to open port 22 to the
                        public internet
                      type: boolean
                    sourceSecurityGroups:
                      description: SourceSecurityGroups specifies which security groups
                        are allowed access
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: SSHKeyName specifies which EC2 SSH key can be used
                        to access machines. If left empty, the key from the control
                        plane is used.
                      type: string
                  type: object
                roleAdditionalPolicies:
                  description: RoleAdditionalPolicies allows you to attach additional
                    polices to the node group role. You must enable the EKSAllowAddRoles
                    feature flag to incorporate these into the created role.
                  items:
                    type: string
                  type: array
                roleName:
                  description: RoleName specifies the name of IAM role for the node
                    group. If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                scaling:
                  description: Scaling specifies scaling for the ASG behind this pool
                  properties:
                    maxSize:
                      format: int32
                      type: integer
                    minSize:
                      format: int32
                      type: integer
                  type: object
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the
                    auto scaling group of this nodegroup
                  items:
                    type: string
                  type: array
                taints:
                  description: Taints specifies the taints to apply to the nodes of
                    the machine pool
                  items:
                    description: Taint defines the specs for a Kubernetes taint.
                    properties:
                      effect:
                        description: Effect specifies the effect for the taint
                        enum:
                        - no-schedule
                        - no-execute
                        - prefer-no-schedule
                        type: string
                      key:
                        description: Key is the key of the taint
                        type: string
                      value:
                        description: Value is the value of the taint
                        type: string
                    required:
                    - effect
                    - key
                    - value
                    type: object
                  type: array
                updateConfig:
                  description: UpdateConfig holds the optional config to control the
                    behaviour of the update to the nodegroup.
                  properties:
                    maxUnavailable:
                      description: MaxUnavailable is the maximum number of nodes unavailable
                        at once during a version update. Nodes will be updated in
                        parallel. The maximum number is 100.
                      maximum: 100
                      minimum: 1
                      type: integer
                    maxUnavailablePercentage:
                      description: MaxUnavailablePercentage is the maximum percentage
                        of nodes unavailable during a version update. This percentage
                        of nodes will be updated in parallel, up to 100 nodes at once.
                      maximum: 100
                      minimum: 1
                      type: integer
                  type: object
              type: object
            status:
              description: AWSManagedMachinePoolStatus defines the observed state
                of AWSManagedMachinePool.
              properties:
                conditions:
                  description: Conditions defines current service state of the managed
                    machine pool
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the MachinePool's spec or the configuration of the
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.
                    \n Any transient errors that occur during the reconciliation of
                    MachinePools can be added as events to the MachinePool object
                    and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the MachinePool and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of MachinePools can
                    be added as events to the MachinePool object and/or logged in
                    the controller's output."
                  type: string
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the AWSManagedMachinePool nodegroup
                    has joined the cluster
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: azureclusteridentities.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AzureClusterIdentity
      listKind: AzureClusterIdentityList
      plural: azureclusteridentities
      singular: azureclusteridentity
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureClusterIdentity is the Schema for the azureclustersidentities
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterIdentitySpec defines the parameters that are
                used to create an AzureIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify the namespaces
                    the clusters are allowed to use the identity from. Namespaces
                    can be selected either using an array of namespaces or with label
                    selector. An empty allowedNamespaces object indicates that AzureClusters
                    can use this identity from any namespace. If this object is nil,
                    no namespaces will be allowed (default behaviour, if this field
                    is not provided) A namespace should be either in the NamespaceList
                    or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: A nil or empty list indicates that AzureCluster
                        cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: "Selector is a selector of namespaces that AzureCluster
                        can use this Identity from. This is a standard Kubernetes
                        LabelSelector, a label query over a set of resources. The
                        result of matchLabels and matchExpressions are ANDed. \n A
                        nil or empty selector indicates that AzureCluster cannot use
                        this AzureClusterIdentity from any namespace."
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                clientID:
                  description: ClientID is the service principal client ID. Both User
                    Assigned MSI and SP can use this field.
                  type: string
                clientSecret:
                  description: ClientSecret is a secret reference which should contain
                    either a Service Principal password or certificate secret.
                  properties:
                    name:
                      description: name is unique within a namespace to reference
                        a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                resourceID:
                  description: ResourceID is the Azure resource ID for the User Assigned
                    MSI resource. Only applicable when type is UserAssignedMSI.
                  type: string
                tenantID:
                  description: TenantID is the service principal primary tenant id.
                  type: string
                type:
                  description: Type is the type of Azure Identity used. ServicePrincipal,
                    ServicePrincipalCertificate, UserAssignedMSI or ManualServicePrincipal.
                  enum:
                  - ServicePrincipal
                  - UserAssignedMSI
                  - ManualServicePrincipal
                  - ServicePrincipalCertificate
                  type: string
              required:
              - clientID
              - tenantID
              - type
              type: object
            status:
              description: AzureClusterIdentityStatus defines the observed state of
                AzureClusterIdentity.
              properties:
                conditions:
                  description: Conditions defines current service state of the AzureClusterIdentity.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: azureclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AzureCluster
      listKind: AzureClusterList
      plural: azureclusters
      singular: azurecluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this AzureCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].reason
        name: Reason
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].message
        name: Message
        priority: 1
        type: string
      - jsonPath: .spec.resourceGroup
        name: Resource Group
        priority: 1
        type: string
      - jsonPath: .spec.subscriptionID
        name: SubscriptionID
        priority: 1
        type: string
      - jsonPath: .spec.location
        name: Location
        priority: 1
        type: string
      - description: Control Plane Endpoint
        jsonPath: .spec.controlPlaneEndpoint.host
        name: Endpoint
        priority: 1
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureCluster is the Schema for the azureclusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterSpec defines the desired state of AzureCluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    Azure resources managed by the Azure provider, in addition to
                    the ones added by default.
                  type: object
                azureEnvironment:
                  description: 'AzureEnvironment is the name of the AzureCloud to
                    be used. The default value that would be used by most users is
                    "AzurePublicCloud", other values are: - ChinaCloud: "AzureChinaCloud"
                    - GermanCloud: "AzureGermanCloud" - PublicCloud: "AzurePublicCloud"
                    - USGovernmentCloud: "AzureUSGovernmentCloud"'
                  type: string
                bastionSpec:
                  description: BastionSpec encapsulates all things related to the
                    Bastions in the cluster.
                  properties:
                    azureBastion:
                      description: AzureBastion specifies how the Azure Bastion cloud
                        component should be configured.
                      properties:
                        name:
                          type: string
                        publicIP:
                          description: PublicIPSpec defines the inputs to create an
                            Azure public IP address.
                          properties:
                            dnsName:
                              type: string
                            ipTags:
                              items:
                                description: IPTag contains the IpTag associated with
                                  the object.
                                properties:
                                  tag:
                                    description: 'Tag specifies the value of the IP
                                      tag associated with the public IP. Example:
                                      SQL.'
                                    type: string
                                  type:
                                    description: 'Type specifies the IP tag type.
                                      Example: FirstPartyUsage.'
                                    type: string
                                required:
                                - tag
                                - type
                                type: object
                              type: array
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        subnet:
                          description: SubnetSpec configures an Azure subnet.
                          properties:
                            cidrBlocks:
                              description: CIDRBlocks defines the subnet's address
                                space, specified as one or more address prefixes in
                                CIDR notation.
                              items:
                                type: string
                              type: array
                            id:
                              description: ID is the Azure resource ID of the subnet.
                                READ-ONLY
                              type: string
                            name:
                              description: Name defines a name for the subnet resource.
                              type: string
                            natGateway:
                              description: NatGateway associated with this subnet.
                              properties:
                                id:
                                  description: ID is the Azure resource ID of the
                                    NAT gateway. READ-ONLY
                                  type: string
                                ip:
                                  description: PublicIPSpec defines the inputs to
                                    create an Azure public IP address.
                                  properties:
                                    dnsName:
                                      type: string
                                    ipTags:
                                      items:
                                        description: IPTag contains the IpTag associated
                                          with the object.
                                        properties:
                                          tag:
                                            description: 'Tag specifies the value
                                              of the IP tag associated with the public
                                              IP. Example: SQL.'
                                            type: string
                                          type:
                                            description: 'Type specifies the IP tag
                                              type. Example: FirstPartyUsage.'
                                            type: string
                                        required:
                                        - tag
                                        - type
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            role:
                              description: Role defines the subnet role (eg. Node,
                                ControlPlane)
                              enum:
                              - node
                              - control-plane
                              - bastion
                              type: string
                            routeTable:
                              description: RouteTable defines the route table that
                                should be attached to this subnet.
                              properties:
                                id:
                                  description: ID is the Azure resource ID of the
                                    route table. READ-ONLY
                                  type: string
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            securityGroup:
                              description: SecurityGroup defines the NSG (network
                                security group) that should be attached to this subnet.
                              properties:
                                id:
                                  description: ID is the Azure resource ID of the
                                    security group. READ-ONLY
                                  type: string
                                name:
                                  type: string
                                securityRules:
                                  description: SecurityRules is a slice of Azure security
                                    rules for security groups.
                                  items:
                                    description: SecurityRule defines an Azure security
                                      rule for security groups.
                                    properties:
                                      description:
                                        description: A description for this rule.
                                          Restricted to 140 chars.
                                        type: string
                                      destination:
                                        description: Destination is the destination
                                          address prefix. CIDR or destination IP range.
                                          Asterix '*' can also be used to match all
                                          source IPs. Default tags such as 'VirtualNetwork',
                                          'AzureLoadBalancer' and 'Internet' can also
                                          be used.
                                        type: string
                                      destinationPorts:
                                        description: DestinationPorts specifies the
                                          destination port or range. Integer or range
                                          between 0 and 65535. Asterix '*' can also
                                          be used to match all ports.
                                        type: string
                                      direction:
                                        description: Direction indicates whether the
                                          rule applies to inbound, or outbound traffic.
                                          "Inbound" or "Outbound".
                                        enum:
                                        - Inbound
                                        - Outbound
                                        type: string
                                      name:
                                        description: Name is a unique name within
                                          the network security group.
                                        type: string
                                      priority:
                                        description: Priority is a number between
                                          100 and 4096. Each rule should have a unique
                                          value for priority. Rules are processed
                                          in priority order, with lower numbers processed
                                          before higher numbers. Once traffic matches
                                          a rule, processing stops.
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: Protocol specifies the protocol
                                          type. "Tcp", "Udp", "Icmp", or "*".
                                        enum:
                                        - Tcp
                                        - Udp
                                        - Icmp
                                        - '*'
                                        type: string
                                      source:
                                        description: Source specifies the CIDR or
                                          source IP range. Asterix '*' can also be
                                          used to match all source IPs. Default tags
                                          such as 'VirtualNetwork', 'AzureLoadBalancer'
                                          and 'Internet' can also be used. If this
                                          is an ingress rule, specifies where network
                                          traffic originates from.
                                        type: string
                                      sourcePorts:
                                        description: SourcePorts specifies source
                                          port or range. Integer or range between
                                          0 and 65535. Asterix '*' can also be used
                                          to match all ports.
                                        type: string
                                    required:
                                    - description
                                    - direction
                                    - name
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags defines a map of tags.
                                  type: object
                              required:
                              - name
                              type: object
                            serviceEndpoints:
                              description: ServiceEndpoints is a slice of Virtual
                                Network service endpoints to enable for the subnets.
                              items:
                                description: ServiceEndpointSpec configures an Azure
                                  Service Endpoint.
                                properties:
                                  locations:
                                    items:
                                      type: string
                                    type: array
                                  service:
                                    type: string
                                required:
                                - locations
                                - service
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - service
                              x-kubernetes-list-type: map
                          required:
                          - name
                          - role
                          type: object
                      type: object
                  type: object
                cloudProviderConfigOverrides:
                  description: 'CloudProviderConfigOverrides is an optional set of
                    configuration values that can be overridden in azure cloud provider
                    config. This is only a subset of options that are available in
                    azure cloud provider config. Some values for the cloud provider
                    config are inferred from other parts of cluster api provider azure
                    spec, and may not be available for overrides. See: https://kubernetes-sigs.github.io/cloud-provider-azure/install/configs
                    Note: All cloud provider config values can be customized by creating
                    the secret beforehand. CloudProviderConfigOverrides is only used
                    when the secret is managed by the Azure Provider.'
                  properties:
                    backOffs:
                      description: BackOffConfig indicates the back-off config options.
                      properties:
                        cloudProviderBackoff:
                          type: boolean
                        cloudProviderBackoffDuration:
                          type: integer
                        cloudProviderBackoffExponent:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        cloudProviderBackoffJitter:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        cloudProviderBackoffRetries:
                          type: integer
                      type: object
                    rateLimits:
                      items:
                        description: 'RateLimitSpec represents the rate limit configuration
                          for a particular kind of resource. Eg. loadBalancerRateLimit
                          is used to configure rate limits for load balancers. This
                          eventually gets converted to CloudProviderRateLimitConfig
                          that cloud-provider-azure expects. See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                          We cannot use CloudProviderRateLimitConfig directly because
                          floating point values are not supported in controller-tools.
                          See: https://github.com/kubernetes-sigs/controller-tools/issues/245'
                        properties:
                          config:
                            description: RateLimitConfig indicates the rate limit
                              config options.
                            properties:
                              cloudProviderRateLimit:
                                type: boolean
                              cloudProviderRateLimitBucket:
                                type: integer
                              cloudProviderRateLimitBucketWrite:
                                type: integer
                              cloudProviderRateLimitQPS:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              cloudProviderRateLimitQPSWrite:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          name:
                            description: Name is the name of the rate limit spec.
                            enum:
                            - defaultRateLimit
                            - routeRateLimit
                            - subnetsRateLimit
                            - interfaceRateLimit
                            - routeTableRateLimit
                            - loadBalancerRateLimit
                            - publicIPAddressRateLimit
                            - securityGroupRateLimit
                            - virtualMachineRateLimit
                            - storageAccountRateLimit
                            - diskRateLimit
                            - snapshotRateLimit
                            - virtualMachineScaleSetRateLimit
                            - virtualMachineSizesRateLimit
                            - availabilitySetRateLimit
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane. It is not recommended to set
                    this when creating an AzureCluster as CAPZ will set this for you.
                    However, if it is set, CAPZ will not change it.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                identityRef:
                  description: IdentityRef is a reference to an AzureIdentity to be
                    used when reconciling this cluster
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                location:
                  type: string
                networkSpec:
                  description: NetworkSpec encapsulates all things related to Azure
                    network.
                  properties:
                    apiServerLB:
                      description: APIServerLB is the configuration for the control-plane
                        load balancer.
                      properties:
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend
                              IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create
                                  an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated
                                        with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of
                                            the IP tag associated with the public
                                            IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag
                                            type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                      - tag
                                      - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend
                            IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout
                            for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    controlPlaneOutboundLB:
                      description: ControlPlaneOutboundLB is the configuration for
                        the control-plane outbound load balancer. This is different
                        from APIServerLB, and is used only in private clusters (optionally)
                        for enabling outbound traffic.
                      properties:
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend
                              IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create
                                  an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated
                                        with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of
                                            the IP tag associated with the public
                                            IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag
                                            type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                      - tag
                                      - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend
                            IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout
                            for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    nodeOutboundLB:
                      description: NodeOutboundLB is the configuration for the node
                        outbound load balancer.
                      properties:
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend
                              IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create
                                  an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated
                                        with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of
                                            the IP tag associated with the public
                                            IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag
                                            type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                      - tag
                                      - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend
                            IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout
                            for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    privateDNSZoneName:
                      description: PrivateDNSZoneName defines the zone name for the
                        Azure Private DNS.
                      type: string
                    subnets:
                      description: Subnets is the configuration for the control-plane
                        subnet and the node subnet.
                      items:
                        description: SubnetSpec configures an Azure subnet.
                        properties:
                          cidrBlocks:
                            description: CIDRBlocks defines the subnet's address space,
                              specified as one or more address prefixes in CIDR notation.
                            items:
                              type: string
                            type: array
                          id:
                            description: ID is the Azure resource ID of the subnet.
                              READ-ONLY
                            type: string
                          name:
                            description: Name defines a name for the subnet resource.
                            type: string
                          natGateway:
                            description: NatGateway associated with this subnet.
                            properties:
                              id:
                                description: ID is the Azure resource ID of the NAT
                                  gateway. READ-ONLY
                                type: string
                              ip:
                                description: PublicIPSpec defines the inputs to create
                                  an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated
                                        with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of
                                            the IP tag associated with the public
                                            IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag
                                            type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                      - tag
                                      - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                type: string
                            required:
                            - name
                            type: object
                          role:
                            description: Role defines the subnet role (eg. Node, ControlPlane)
                            enum:
                            - node
                            - control-plane
                            - bastion
                            type: string
                          routeTable:
                            description: RouteTable defines the route table that should
                              be attached to this subnet.
                            properties:
                              id:
                                description: ID is the Azure resource ID of the route
                                  table. READ-ONLY
                                type: string
                              name:
                                type: string
                            required:
                            - name
                            type: object
                          securityGroup:
                            description: SecurityGroup defines the NSG (network security
                              group) that should be attached to this subnet.
                            properties:
                              id:
                                description: ID is the Azure resource ID of the security
                                  group. READ-ONLY
                                type: string
                              name:
                                type: string
                              securityRules:
                                description: SecurityRules is a slice of Azure security
                                  rules for security groups.
                                items:
                                  description: SecurityRule defines an Azure security
                                    rule for security groups.
                                  properties:
                                    description:
                                      description: A description for this rule. Restricted
                                        to 140 chars.
                                      type: string
                                    destination:
                                      description: Destination is the destination
                                        address prefix. CIDR or destination IP range.
                                        Asterix '*' can also be used to match all
                                        source IPs. Default tags such as 'VirtualNetwork',
                                        'AzureLoadBalancer' and 'Internet' can also
                                        be used.
                                      type: string
                                    destinationPorts:
                                      description: DestinationPorts specifies the
                                        destination port or range. Integer or range
                                        between 0 and 65535. Asterix '*' can also
                                        be used to match all ports.
                                      type: string
                                    direction:
                                      description: Direction indicates whether the
                                        rule applies to inbound, or outbound traffic.
                                        "Inbound" or "Outbound".
                                      enum:
                                      - Inbound
                                      - Outbound
                                      type: string
                                    name:
                                      description: Name is a unique name within the
                                        network security group.
                                      type: string
                                    priority:
                                      description: Priority is a number between 100
                                        and 4096. Each rule should have a unique value
                                        for priority. Rules are processed in priority
                                        order, with lower numbers processed before
                                        higher numbers. Once traffic matches a rule,
                                        processing stops.
                                      format: int32
                                      type: integer
                                    protocol:
                                      description: Protocol specifies the protocol
                                        type. "Tcp", "Udp", "Icmp", or "*".
                                      enum:
                                      - Tcp
                                      - Udp
                                      - Icmp
                                      - '*'
                                      type: string
                                    source:
                                      description: Source specifies the CIDR or source
                                        IP range. Asterix '*' can also be used to
                                        match all source IPs. Default tags such as
                                        'VirtualNetwork', 'AzureLoadBalancer' and
                                        'Internet' can also be used. If this is an
                                        ingress rule, specifies where network traffic
                                        originates from.
                                      type: string
                                    sourcePorts:
                                      description: SourcePorts specifies source port
                                        or range. Integer or range between 0 and 65535.
                                        Asterix '*' can also be used to match all
                                        ports.
                                      type: string
                                  required:
                                  - description
                                  - direction
                                  - name
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              tags:
                                additionalProperties:
                                  type: string
                                description: Tags defines a map of tags.
                                type: object
                            required:
                            - name
                            type: object
                          serviceEndpoints:
                            description: ServiceEndpoints is a slice of Virtual Network
                              service endpoints to enable for the subnets.
                            items:
                              description: ServiceEndpointSpec configures an Azure
                                Service Endpoint.
                              properties:
                                locations:
                                  items:
                                    type: string
                                  type: array
                                service:
                                  type: string
                              required:
                              - locations
                              - service
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - service
                            x-kubernetes-list-type: map
                        required:
                        - name
                        - role
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    vnet:
                      description: Vnet is the configuration for the Azure virtual
                        network.
                      properties:
                        cidrBlocks:
                          description: CIDRBlocks defines the virtual network's address
                            space, specified as one or more address prefixes in CIDR
                            notation.
                          items:
                            type: string
                          type: array
                        id:
                          description: ID is the Azure resource ID of the virtual
                            network. READ-ONLY
                          type: string
                        name:
                          description: Name defines a name for the virtual network
                            resource.
                          type: string
                        peerings:
                          description: Peerings defines a list of peerings of the
                            newly created virtual network with existing virtual networks.
                          items:
                            description: VnetPeeringSpec specifies an existing remote
                              virtual network to peer with the AzureCluster's virtual
                              network.
                            properties:
                              remoteVnetName:
                                description: RemoteVnetName defines name of the remote
                                  virtual network.
                                type: string
                              resourceGroup:
                                description: ResourceGroup is the resource group name
                                  of the remote virtual network.
                                type: string
                            required:
                            - remoteVnetName
                            type: object
                          type: array
                        resourceGroup:
                          description: ResourceGroup is the name of the resource group
                            of the existing virtual network or the resource group
                            where a managed virtual network should be created.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      required:
                      - name
                      type: object
                  type: object
                resourceGroup:
                  type: string
                subscriptionID:
                  type: string
              required:
              - location
              type: object
            status:
              description: AzureClusterStatus defines the observed state of AzureCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the AzureCluster.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: 'FailureDomains specifies the list of unique failure
                    domains for the location/region of the cluster. A FailureDomain
                    maps to Availability Zone with an Azure Region (if the region
                    support them). An Availability Zone is a separate data center
                    within a region and they can be used to ensure the cluster is
                    more resilient to failure. See: https://docs.microsoft.com/en-us/azure/availability-zones/az-overview
                    This list will be used by Cluster API to try and spread the machines
                    across the failure domains.'
                  type: object
                longRunningOperationStates:
                  description: LongRunningOperationStates saves the states for Azure
                    long-running operations so they can be continued on the next reconciliation
                    loop.
                  items:
                    description: Future contains the data needed for an Azure long-running
                      operation to continue across reconcile loops.
                    properties:
                      data:
                        description: Data is the base64 url encoded json Azure AutoRest
                          Future.
                        type: string
                      name:
                        description: Name is the name of the Azure resource. Together
                          with the service name, this forms the unique identifier
                          for the future.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the Azure resource group for
                          the resource.
                        type: string
                      serviceName:
                        description: ServiceName is the name of the Azure service.
                          Together with the name of the resource, this forms the unique
                          identifier for the future.
                        type: string
                      type:
                        description: Type describes the type of future, such as update,
                          create, delete, etc.
                        type: string
                    required:
                    - data
                    - name
                    - serviceName
                    - type
                    type: object
                  type: array
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: azureclustertemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AzureClusterTemplate
      listKind: AzureClusterTemplateList
      plural: azureclustertemplates
      singular: azureclustertemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureClusterTemplate is the Schema for the azureclustertemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterTemplateSpec defines the desired state of AzureClusterTemplate.
              properties:
                template:
                  description: AzureClusterTemplateResource describes the data needed
                    to create an AzureCluster from a template.
                  properties:
                    spec:
                      description: AzureClusterTemplateResourceSpec specifies an Azure
                        cluster template resource.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to Azure resources managed by the Azure provider,
                            in addition to the ones added by default.
                          type: object
                        azureEnvironment:
                          description: 'AzureEnvironment is the name of the AzureCloud
                            to be used. The default value that would be used by most
                            users is "AzurePublicCloud", other values are: - ChinaCloud:
                            "AzureChinaCloud" - GermanCloud: "AzureGermanCloud" -
                            PublicCloud: "AzurePublicCloud" - USGovernmentCloud: "AzureUSGovernmentCloud"'
                          type: string
                        bastionSpec:
                          description: BastionSpec encapsulates all things related
                            to the Bastions in the cluster.
                          properties:
                            azureBastion:
                              description: AzureBastionTemplateSpec specifies a template
                                for an Azure Bastion host.
                              properties:
                                subnet:
                                  description: SubnetTemplateSpec specifies a template
                                    for a subnet.
                                  properties:
                                    cidrBlocks:
                                      description: CIDRBlocks defines the subnet's
                                        address space, specified as one or more address
                                        prefixes in CIDR notation.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: Name defines a name for the subnet
                                        resource.
                                      type: string
                                    natGateway:
                                      description: NatGateway associated with this
                                        subnet.
                                      properties:
                                        name:
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    role:
                                      description: Role defines the subnet role (eg.
                                        Node, ControlPlane)
                                      enum:
                                      - node
                                      - control-plane
                                      - bastion
                                      type: string
                                    securityGroup:
                                      description: SecurityGroup defines the NSG (network
                                        security group) that should be attached to
                                        this subnet.
                                      properties:
                                        securityRules:
                                          description: SecurityRules is a slice of
                                            Azure security rules for security groups.
                                          items:
                                            description: SecurityRule defines an Azure
                                              security rule for security groups.
                                            properties:
                                              description:
                                                description: A description for this
                                                  rule. Restricted to 140 chars.
                                                type: string
                                              destination:
                                                description: Destination is the destination
                                                  address prefix. CIDR or destination
                                                  IP range. Asterix '*' can also be
                                                  used to match all source IPs. Default
                                                  tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                                  and 'Internet' can also be used.
                                                type: string
                                              destinationPorts:
                                                description: DestinationPorts specifies
                                                  the destination port or range. Integer
                                                  or range between 0 and 65535. Asterix
                                                  '*' can also be used to match all
                                                  ports.
                                                type: string
                                              direction:
                                                description: Direction indicates whether
                                                  the rule applies to inbound, or
                                                  outbound traffic. "Inbound" or "Outbound".
                                                enum:
                                                - Inbound
                                                - Outbound
                                                type: string
                                              name:
                                                description: Name is a unique name
                                                  within the network security group.
                                                type: string
                                              priority:
                                                description: Priority is a number
                                                  between 100 and 4096. Each rule
                                                  should have a unique value for priority.
                                                  Rules are processed in priority
                                                  order, with lower numbers processed
                                                  before higher numbers. Once traffic
                                                  matches a rule, processing stops.
                                                format: int32
                                                type: integer
                                              protocol:
                                                description: Protocol specifies the
                                                  protocol type. "Tcp", "Udp", "Icmp",
                                                  or "*".
                                                enum:
                                                - Tcp
                                                - Udp
                                                - Icmp
                                                - '*'
                                                type: string
                                              source:
                                                description: Source specifies the
                                                  CIDR or source IP range. Asterix
                                                  '*' can also be used to match all
                                                  source IPs. Default tags such as
                                                  'VirtualNetwork', 'AzureLoadBalancer'
                                                  and 'Internet' can also be used.
                                                  If this is an ingress rule, specifies
                                                  where network traffic originates
                                                  from.
                                                type: string
                                              sourcePorts:
                                                description: SourcePorts specifies
                                                  source port or range. Integer or
                                                  range between 0 and 65535. Asterix
                                                  '*' can also be used to match all
                                                  ports.
                                                type: string
                                            required:
                                            - description
                                            - direction
                                            - name
                                            - protocol
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        tags:
                                          additionalProperties:
                                            type: string
                                          description: Tags defines a map of tags.
                                          type: object
                                      type: object
                                    serviceEndpoints:
                                      description: ServiceEndpoints is a slice of
                                        Virtual Network service endpoints to enable
                                        for the subnets.
                                      items:
                                        description: ServiceEndpointSpec configures
                                          an Azure Service Endpoint.
                                        properties:
                                          locations:
                                            items:
                                              type: string
                                            type: array
                                          service:
                                            type: string
                                        required:
                                        - locations
                                        - service
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - service
                                      x-kubernetes-list-type: map
                                  required:
                                  - name
                                  - role
                                  type: object
                              type: object
                          type: object
                        cloudProviderConfigOverrides:
                          description: 'CloudProviderConfigOverrides is an optional
                            set of configuration values that can be overridden in
                            azure cloud provider config. This is only a subset of
                            options that are available in azure cloud provider config.
                            Some values for the cloud provider config are inferred
                            from other parts of cluster api provider azure spec, and
                            may not be available for overrides. See: https://kubernetes-sigs.github.io/cloud-provider-azure/install/configs
                            Note: All cloud provider config values can be customized
                            by creating the secret beforehand. CloudProviderConfigOverrides
                            is only used when the secret is managed by the Azure Provider.'
                          properties:
                            backOffs:
                              description: BackOffConfig indicates the back-off config
                                options.
                              properties:
                                cloudProviderBackoff:
                                  type: boolean
                                cloudProviderBackoffDuration:
                                  type: integer
                                cloudProviderBackoffExponent:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                cloudProviderBackoffJitter:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                cloudProviderBackoffRetries:
                                  type: integer
                              type: object
                            rateLimits:
                              items:
                                description: 'RateLimitSpec represents the rate limit
                                  configuration for a particular kind of resource.
                                  Eg. loadBalancerRateLimit is used to configure rate
                                  limits for load balancers. This eventually gets
                                  converted to CloudProviderRateLimitConfig that cloud-provider-azure
                                  expects. See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                                  We cannot use CloudProviderRateLimitConfig directly
                                  because floating point values are not supported
                                  in controller-tools. See: https://github.com/kubernetes-sigs/controller-tools/issues/245'
                                properties:
                                  config:
                                    description: RateLimitConfig indicates the rate
                                      limit config options.
                                    properties:
                                      cloudProviderRateLimit:
                                        type: boolean
                                      cloudProviderRateLimitBucket:
                                        type: integer
                                      cloudProviderRateLimitBucketWrite:
                                        type: integer
                                      cloudProviderRateLimitQPS:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      cloudProviderRateLimitQPSWrite:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  name:
                                    description: Name is the name of the rate limit
                                      spec.
                                    enum:
                                    - defaultRateLimit
                                    - routeRateLimit
                                    - subnetsRateLimit
                                    - interfaceRateLimit
                                    - routeTableRateLimit
                                    - loadBalancerRateLimit
                                    - publicIPAddressRateLimit
                                    - securityGroupRateLimit
                                    - virtualMachineRateLimit
                                    - storageAccountRateLimit
                                    - diskRateLimit
                                    - snapshotRateLimit
                                    - virtualMachineScaleSetRateLimit
                                    - virtualMachineSizesRateLimit
                                    - availabilitySetRateLimit
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                        identityRef:
                          description: IdentityRef is a reference to an AzureIdentity
                            to be used when reconciling this cluster
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        networkSpec:
                          description: NetworkSpec encapsulates all things related
                            to Azure network.
                          properties:
                            apiServerLB:
                              description: APIServerLB is the configuration for the
                                control-plane load balancer.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the
                                    timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer
                                    SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer
                                    Type.
                                  type: string
                              type: object
                            controlPlaneOutboundLB:
                              description: ControlPlaneOutboundLB is the configuration
                                for the control-plane outbound load balancer. This
                                is different from APIServerLB, and is used only in
                                private clusters (optionally) for enabling outbound
                                traffic.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the
                                    timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer
                                    SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer
                                    Type.
                                  type: string
                              type: object
                            nodeOutboundLB:
                              description: NodeOutboundLB is the configuration for
                                the node outbound load balancer.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the
                                    timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer
                                    SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer
                                    Type.
                                  type: string
                              type: object
                            privateDNSZoneName:
                              description: PrivateDNSZoneName defines the zone name
                                for the Azure Private DNS.
                              type: string
                            subnets:
                              description: Subnets is the configuration for the control-plane
                                subnet and the node subnet.
                              items:
                                description: SubnetTemplateSpec specifies a template
                                  for a subnet.
                                properties:
                                  cidrBlocks:
                                    description: CIDRBlocks defines the subnet's address
                                      space, specified as one or more address prefixes
                                      in CIDR notation.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name defines a name for the subnet
                                      resource.
                                    type: string
                                  natGateway:
                                    description: NatGateway associated with this subnet.
                                    properties:
                                      name:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  role:
                                    description: Role defines the subnet role (eg.
                                      Node, ControlPlane)
                                    enum:
                                    - node
                                    - control-plane
                                    - bastion
                                    type: string
                                  securityGroup:
                                    description: SecurityGroup defines the NSG (network
                                      security group) that should be attached to this
                                      subnet.
                                    properties:
                                      securityRules:
                                        description: SecurityRules is a slice of Azure
                                          security rules for security groups.
                                        items:
                                          description: SecurityRule defines an Azure
                                            security rule for security groups.
                                          properties:
                                            description:
                                              description: A description for this
                                                rule. Restricted to 140 chars.
                                              type: string
                                            destination:
                                              description: Destination is the destination
                                                address prefix. CIDR or destination
                                                IP range. Asterix '*' can also be
                                                used to match all source IPs. Default
                                                tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                                and 'Internet' can also be used.
                                              type: string
                                            destinationPorts:
                                              description: DestinationPorts specifies
                                                the destination port or range. Integer
                                                or range between 0 and 65535. Asterix
                                                '*' can also be used to match all
                                                ports.
                                              type: string
                                            direction:
                                              description: Direction indicates whether
                                                the rule applies to inbound, or outbound
                                                traffic. "Inbound" or "Outbound".
                                              enum:
                                              - Inbound
                                              - Outbound
                                              type: string
                                            name:
                                              description: Name is a unique name within
                                                the network security group.
                                              type: string
                                            priority:
                                              description: Priority is a number between
                                                100 and 4096. Each rule should have
                                                a unique value for priority. Rules
                                                are processed in priority order, with
                                                lower numbers processed before higher
                                                numbers. Once traffic matches a rule,
                                                processing stops.
                                              format: int32
                                              type: integer
                                            protocol:
                                              description: Protocol specifies the
                                                protocol type. "Tcp", "Udp", "Icmp",
                                                or "*".
                                              enum:
                                              - Tcp
                                              - Udp
                                              - Icmp
                                              - '*'
                                              type: string
                                            source:
                                              description: Source specifies the CIDR
                                                or source IP range. Asterix '*' can
                                                also be used to match all source IPs.
                                                Default tags such as 'VirtualNetwork',
                                                'AzureLoadBalancer' and 'Internet'
                                                can also be used. If this is an ingress
                                                rule, specifies where network traffic
                                                originates from.
                                              type: string
                                            sourcePorts:
                                              description: SourcePorts specifies source
                                                port or range. Integer or range between
                                                0 and 65535. Asterix '*' can also
                                                be used to match all ports.
                                              type: string
                                          required:
                                          - description
                                          - direction
                                          - name
                                          - protocol
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      tags:
                                        additionalProperties:
                                          type: string
                                        description: Tags defines a map of tags.
                                        type: object
                                    type: object
                                  serviceEndpoints:
                                    description: ServiceEndpoints is a slice of Virtual
                                      Network service endpoints to enable for the
                                      subnets.
                                    items:
                                      description: ServiceEndpointSpec configures
                                        an Azure Service Endpoint.
                                      properties:
                                        locations:
                                          items:
                                            type: string
                                          type: array
                                        service:
                                          type: string
                                      required:
                                      - locations
                                      - service
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - service
                                    x-kubernetes-list-type: map
                                required:
                                - name
                                - role
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            vnet:
                              description: Vnet is the configuration for the Azure
                                virtual network.
                              properties:
                                cidrBlocks:
                                  description: CIDRBlocks defines the virtual network's
                                    address space, specified as one or more address
                                    prefixes in CIDR notation.
                                  items:
                                    type: string
                                  type: array
                                peerings:
                                  description: Peerings defines a list of peerings
                                    of the newly created virtual network with existing
                                    virtual networks.
                                  items:
                                    description: VnetPeeringClassSpec specifies a
                                      virtual network peering class.
                                    properties:
                                      remoteVnetName:
                                        description: RemoteVnetName defines name of
                                          the remote virtual network.
                                        type: string
                                      resourceGroup:
                                        description: ResourceGroup is the resource
                                          group name of the remote virtual network.
                                        type: string
                                    required:
                                    - remoteVnetName
                                    type: object
                                  type: array
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing
                                    the resource.
                                  type: object
                              type: object
                          type: object
                        subscriptionID:
                          type: string
                      required:
                      - location
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: azuremachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AzureMachine
      listKind: AzureMachineList
      plural: azuremachines
      singular: azuremachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=='Ready')].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].reason
        name: Reason
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].message
        name: Message
        priority: 1
        type: string
      - description: Azure VM provisioning state
        jsonPath: .status.vmState
        name: State
        type: string
      - description: Cluster to which this AzureMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        priority: 1
        type: string
      - description: Machine object to which this AzureMachine belongs
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        priority: 1
        type: string
      - description: Azure VM ID
        jsonPath: .spec.providerID
        name: VM ID
        priority: 1
        type: string
      - description: Azure VM Size
        jsonPath: .spec.vmSize
        name: VM Size
        priority: 1
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureMachine is the Schema for the azuremachines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureMachineSpec defines the desired state of AzureMachine.
              properties:
                acceleratedNetworking:
                  description: AcceleratedNetworking enables or disables Azure accelerated
                    networking. If omitted, it will be set based on whether the requested
                    VMSize supports accelerated networking. If AcceleratedNetworking
                    is set to true with a VMSize that does not support it, Azure will
                    return an error.
                  type: boolean
                additionalCapabilities:
                  description: AdditionalCapabilities specifies additional capabilities
                    enabled or disabled on the virtual machine.
                  properties:
                    ultraSSDEnabled:
                      description: UltraSSDEnabled enables or disables Azure UltraSSD
                        capability for the virtual machine. Defaults to true if Ultra
                        SSD data disks are specified, otherwise it doesn't set the
                        capability on the VM.
                      type: boolean
                  type: object
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the Azure
                    provider. If both the AzureCluster and the AzureMachine specify
                    the same tag name with different values, the AzureMachine's value
                    takes precedence.
                  type: object
                allocatePublicIP:
                  description: AllocatePublicIP allows the ability to create dynamic
                    public ips for machines where this value is true.
                  type: boolean
                dataDisks:
                  description: DataDisk specifies the parameters that are used to
                    add one or more data disks to the machine
                  items:
                    description: DataDisk specifies the parameters that are used to
                      add one or more data disks to the machine.
                    properties:
                      cachingType:
                        description: CachingType specifies the caching requirements.
                        enum:
                        - None
                        - ReadOnly
                        - ReadWrite
                        type: string
                      diskSizeGB:
                        description: DiskSizeGB is the size in GB to assign to the
                          data disk.
                        format: int32
                        type: integer
                      lun:
                        description: Lun Specifies the logical unit number of the
                          data disk. This value is used to identify data disks within
                          the VM and therefore must be unique for each data disk attached
                          to a VM. The value must be between 0 and 63.
                        format: int32
                        type: integer
                      managedDisk:
                        description: ManagedDisk specifies the Managed Disk parameters
                          for the data disk.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSetParameters defines disk
                              encryption options.
                            properties:
                              id:
                                description: ID defines resourceID for diskEncryptionSet
                                  resource. It must be in the same subscription
                                type: string
                            type: object
                          storageAccountType:
                            type: string
                        type: object
                      nameSuffix:
                        description: NameSuffix is the suffix to be appended to the
                          machine name to generate the disk name. Each disk name will
                          be in format <machineName>_<nameSuffix>.
                        type: string
                    required:
                    - diskSizeGB
                    - nameSuffix
                    type: object
                  type: array
                dnsServers:
                  description: DNSServers adds a list of DNS Server IP addresses to
                    the VM NICs.
                  items:
                    type: string
                  type: array
                enableIPForwarding:
                  description: EnableIPForwarding enables IP Forwarding in Azure which
                    is required for some CNI's to send traffic from a pods on one
                    machine to another. This is required for IpV6 with Calico in combination
                    with User Defined Routes (set by the Azure Cloud Controller manager).
                    Default is false for disabled.
                  type: boolean
                failureDomain:
                  description: FailureDomain is the failure domain unique identifier
                    this Machine should be attached to, as defined in Cluster API.
                    This relates to an Azure Availability Zone
                  type: string
                identity:
                  default: None
                  description: Identity is the type of identity used for the virtual
                    machine. The type 'SystemAssigned' is an implicitly created identity.
                    The generated identity will be assigned a Subscription contributor
                    role. The type 'UserAssigned' is a standalone Azure resource provided
                    by the user and assigned to the VM
                  enum:
                  - None
                  - SystemAssigned
                  - UserAssigned
                  type: string
                image:
                  description: Image is used to provide details of an image to use
                    during VM creation. If image details are omitted the image will
                    default the Azure Marketplace "capi" offer, which is based on
                    Ubuntu.
                  properties:
                    computeGallery:
                      description: ComputeGallery specifies an image to use from the
                        Azure Compute Gallery
                      properties:
                        gallery:
                          description: Gallery specifies the name of the compute image
                            gallery that contains the image
                          minLength: 1
                          type: string
                        name:
                          description: Name is the name of the image
                          minLength: 1
                          type: string
                        plan:
                          description: Plan contains plan information.
                          properties:
                            offer:
                              description: Offer specifies the name of a group of
                                related images created by the publisher. For example,
                                UbuntuServer, WindowsServer
                              minLength: 1
                              type: string
                            publisher:
                              description: Publisher is the name of the organization
                                that created the image
                              minLength: 1
                              type: string
                            sku:
                              description: SKU specifies an instance of an offer,
                                such as a major release of a distribution. For example,
                                18.04-LTS, 2019-Datacenter
                              minLength: 1
                              type: string
                          required:
                          - offer
                          - publisher
                          - sku
                          type: object
                        resourceGroup:
                          description: ResourceGroup specifies the resource group
                            containing the private compute gallery.
                          type: string
                        subscriptionID:
                          description: SubscriptionID is the identifier of the subscription
                            that contains the private compute gallery.
                          type: string
                        version:
                          description: Version specifies the version of the marketplace
                            image. The allowed formats are Major.Minor.Build or 'latest'.
                            Major, Minor, and Build are decimal numbers. Specify 'latest'
                            to use the latest version of an image available at deploy
                            time. Even if you use 'latest', the VM image will not
                            automatically update after deploy time even if a new version
                            becomes available.
                          minLength: 1
                          type: string
                      required:
                      - gallery
                      - name
                      - version
                      type: object
                    id:
                      description: ID specifies an image to use by ID
                      type: string
                    marketplace:
                      description: Marketplace specifies an image to use from the
                        Azure Marketplace
                      properties:
                        offer:
                          description: Offer specifies the name of a group of related
                            images created by the publisher. For example, UbuntuServer,
                            WindowsServer
                          minLength: 1
                          type: string
                        publisher:
                          description: Publisher is the name of the organization that
                            created the image
                          minLength: 1
                          type: string
                        sku:
                          description: SKU specifies an instance of an offer, such
                            as a major release of a distribution. For example, 18.04-LTS,
                            2019-Datacenter
                          minLength: 1
                          type: string
                        thirdPartyImage:
                          default: false
                          description: ThirdPartyImage indicates the image is published
                            by a third party publisher and a Plan will be generated
                            for it.
                          type: boolean
                        version:
                          description: Version specifies the version of an image sku.
                            The allowed formats are Major.Minor.Build or 'latest'.
                            Major, Minor, and Build are decimal numbers. Specify 'latest'
                            to use the latest version of an image available at deploy
                            time. Even if you use 'latest', the VM image will not
                            automatically update after deploy time even if a new version
                            becomes available.
                          minLength: 1
                          type: string
                      required:
                      - offer
                      - publisher
                      - sku
                      - version
                      type: object
                    sharedGallery:
                      description: 'SharedGallery specifies an image to use from an
                        Azure Shared Image Gallery Deprecated: use ComputeGallery
                        instead.'
                      properties:
                        gallery:
                          description: Gallery specifies the name of the shared image
                            gallery that contains the image
                          minLength: 1
                          type: string
                        name:
                          description: Name is the name of the image
                          minLength: 1
                          type: string
                        offer:
                          description: Offer specifies the name of a group of related
                            images created by the publisher. For example, UbuntuServer,
                            WindowsServer This value will be used to add a `Plan`
                            in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG
                            image was built requires the `Plan` to be used.
                          type: string
                        publisher:
                          description: Publisher is the name of the organization that
                            created the image. This value will be used to add a `Plan`
                            in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG
                            image was built requires the `Plan` to be used.
                          type: string
                        resourceGroup:
                          description: ResourceGroup specifies the resource group
                            containing the shared image gallery
                          minLength: 1
                          type: string
                        sku:
                          description: SKU specifies an instance of an offer, such
                            as a major release of a distribution. For example, 18.04-LTS,
                            2019-Datacenter This value will be used to add a `Plan`
                            in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG
                            image was built requires the `Plan` to be used.
                          type: string
                        subscriptionID:
                          description: SubscriptionID is the identifier of the subscription
                            that contains the shared image gallery
                          minLength: 1
                          type: string
                        version:
                          description: Version specifies the version of the marketplace
                            image. The allowed formats are Major.Minor.Build or 'latest'.
                            Major, Minor, and Build are decimal numbers. Specify 'latest'
                            to use the latest version of an image available at deploy
                            time. Even if you use 'latest', the VM image will not
                            automatically update after deploy time even if a new version
                            becomes available.
                          minLength: 1
                          type: string
                      required:
                      - gallery
                      - name
                      - resourceGroup
                      - subscriptionID
                      - version
                      type: object
                  type: object
                osDisk:
                  description: OSDisk specifies the parameters for the operating system
                    disk of the machine
                  properties:
                    cachingType:
                      description: CachingType specifies the caching requirements.
                      enum:
                      - None
                      - ReadOnly
                      - ReadWrite
                      type: string
                    diffDiskSettings:
                      description: DiffDiskSettings describe ephemeral disk settings
                        for the os disk.
                      properties:
                        option:
                          description: Option enables ephemeral OS when set to "Local"
                            See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks
                            for full details
                          enum:
                          - Local
                          type: string
                      required:
                      - option
                      type: object
                    diskSizeGB:
                      description: DiskSizeGB is the size in GB to assign to the OS
                        disk. Will have a default of 30GB if not provided
                      format: int32
                      type: integer
                    managedDisk:
                      description: ManagedDisk specifies the Managed Disk parameters
                        for the OS disk.
                      properties:
                        diskEncryptionSet:
                          description: DiskEncryptionSetParameters defines disk encryption
                            options.
                          properties:
                            id:
                              description: ID defines resourceID for diskEncryptionSet
                                resource. It must be in the same subscription
                              type: string
                          type: object
                        storageAccountType:
                          type: string
                      type: object
                    osType:
                      type: string
                  required:
                  - osType
                  type: object
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                roleAssignmentName:
                  description: RoleAssignmentName is the name of the role assignment
                    to create for a system assigned identity. It can be any valid
                    GUID. If not specified, a random GUID will be generated.
                  type: string
                securityProfile:
                  description: SecurityProfile specifies the Security profile settings
                    for a virtual machine.
                  properties:
                    encryptionAtHost:
                      description: This field indicates whether Host Encryption should
                        be enabled or disabled for a virtual machine or virtual machine
                        scale set. Default is disabled.
                      type: boolean
                  type: object
                spotVMOptions:
                  description: SpotVMOptions allows the ability to specify the Machine
                    should use a Spot VM
                  properties:
                    evictionPolicy:
                      description: EvictionPolicy defines the behavior of the virtual
                        machine when it is evicted. It can be either Delete or Deallocate.
                      enum:
                      - Deallocate
                      - Delete
                      type: string
                    maxPrice:
                      anyOf:
                      - type: integer
                      - type: string
                      description: MaxPrice defines the maximum price the user is
                        willing to pay for Spot VM instances
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                  type: object
                sshPublicKey:
                  type: string
                subnetName:
                  description: SubnetName selects the Subnet where the VM will be
                    placed
                  type: string
                userAssignedIdentities:
                  description: UserAssignedIdentities is a list of standalone Azure
                    identities provided by the user The lifecycle of a user-assigned
                    identity is managed separately from the lifecycle of the AzureMachine.
                    See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                  items:
                    description: UserAssignedIdentity defines the user-assigned identities
                      provided by the user to be assigned to Azure resources.
                    properties:
                      providerID:
                        description: 'ProviderID is the identification ID of the user-assigned
                          Identity, the format of an identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                        type: string
                    required:
                    - providerID
                    type: object
                  type: array
                vmExtensions:
                  description: VMExtensions specifies a list of extensions to be added
                    to the virtual machine.
                  items:
                    description: VMExtension specifies the parameters for a custom
                      VM extension.
                    properties:
                      name:
                        description: Name is the name of the extension.
                        type: string
                      protectedSettings:
                        additionalProperties:
                          type: string
                        description: ProtectedSettings is a JSON formatted protected
                          settings for the extension.
                        type: object
                      publisher:
                        description: Publisher is the name of the extension handler
                          publisher.
                        type: string
                      settings:
                        additionalProperties:
                          type: string
                        description: Settings is a JSON formatted public settings
                          for the extension.
                        type: object
                      version:
                        description: Version specifies the version of the script handler.
                        type: string
                    required:
                    - name
                    - publisher
                    - version
                    type: object
                  type: array
                vmSize:
                  type: string
              required:
              - osDisk
              - sshPublicKey
              - vmSize
              type: object
            status:
              description: AzureMachineStatus defines the observed state of AzureMachine.
              properties:
                addresses:
                  description: Addresses contains the Azure instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AzureMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "ErrorMessage will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "ErrorReason will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    succinct value suitable for machine interpretation. \n This field
                    should not be set for transitive errors that a controller faces
                    that are expected to be fixed automatically over time (like service
                    outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                longRunningOperationStates:
                  description: LongRunningOperationStates saves the states for Azure
                    long-running operations so they can be continued on the next reconciliation
                    loop.
                  items:
                    description: Future contains the data needed for an Azure long-running
                      operation to continue across reconcile loops.
                    properties:
                      data:
                        description: Data is the base64 url encoded json Azure AutoRest
                          Future.
                        type: string
                      name:
                        description: Name is the name of the Azure resource. Together
                          with the service name, this forms the unique identifier
                          for the future.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the Azure resource group for
                          the resource.
                        type: string
                      serviceName:
                        description: ServiceName is the name of the Azure service.
                          Together with the name of the resource, this forms the unique
                          identifier for the future.
                        type: string
                      type:
                        description: Type describes the type of future, such as update,
                          create, delete, etc.
                        type: string
                    required:
                    - data
                    - name
                    - serviceName
                    - type
                    type: object
                  type: array
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                vmState:
                  description: VMState is the provisioning state of the Azure virtual
                    machine.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: azuremachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AzureMachineTemplate
      listKind: AzureMachineTemplateList
      plural: azuremachinetemplates
      singular: azuremachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureMachineTemplate is the Schema for the azuremachinetemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate.
              properties:
                template:
                  description: AzureMachineTemplateResource describes the data needed
                    to create an AzureMachine from a template.
                  properties:
                    metadata:
                      description: "ObjectMeta is metadata that all persisted resources
                        must have, which includes all objects users must create. This
                        is a copy of customizable fields from metav1.ObjectMeta. \n
                        ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template`
                        and `MachineSet.Template`, which are not top-level Kubernetes
                        objects. Given that metav1.ObjectMeta has lots of special
                        cases and read-only fields which end up in the generated CRD
                        validation, having it as a subset simplifies the API and some
                        issues that can impact user experience. \n During the [upgrade
                        to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                        for v1alpha2, we noticed a failure would occur running Cluster
                        API test suite against the new CRDs, specifically `spec.metadata.creationTimestamp
                        in body must be of type string: \"null\"`. The investigation
                        showed that `controller-tools@v2` behaves differently than
                        its previous version when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1)
                        package. \n In more details, we found that embedded (non-top
                        level) types that embedded `metav1.ObjectMeta` had validation
                        properties, including for `creationTimestamp` (metav1.Time).
                        The `metav1.Time` type specifies a custom json marshaller
                        that, when IsZero() is true, returns `null` which breaks validation
                        because the field isn't marked as nullable. \n In future versions,
                        controller-tools@v2 might allow overriding the type and validation
                        for embedded types. When that happens, this hack should be
                        revisited."
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        acceleratedNetworking:
                          description: AcceleratedNetworking enables or disables Azure
                            accelerated networking. If omitted, it will be set based
                            on whether the requested VMSize supports accelerated networking.
                            If AcceleratedNetworking is set to true with a VMSize
                            that does not support it, Azure will return an error.
                          type: boolean
                        additionalCapabilities:
                          description: AdditionalCapabilities specifies additional
                            capabilities enabled or disabled on the virtual machine.
                          properties:
                            ultraSSDEnabled:
                              description: UltraSSDEnabled enables or disables Azure
                                UltraSSD capability for the virtual machine. Defaults
                                to true if Ultra SSD data disks are specified, otherwise
                                it doesn't set the capability on the VM.
                              type: boolean
                          type: object
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the Azure provider. If both the AzureCluster and the
                            AzureMachine specify the same tag name with different
                            values, the AzureMachine's value takes precedence.
                          type: object
                        allocatePublicIP:
                          description: AllocatePublicIP allows the ability to create
                            dynamic public ips for machines where this value is true.
                          type: boolean
                        dataDisks:
                          description: DataDisk specifies the parameters that are
                            used to add one or more data disks to the machine
                          items:
                            description: DataDisk specifies the parameters that are
                              used to add one or more data disks to the machine.
                            properties:
                              cachingType:
                                description: CachingType specifies the caching requirements.
                                enum:
                                - None
                                - ReadOnly
                                - ReadWrite
                                type: string
                              diskSizeGB:
                                description: DiskSizeGB is the size in GB to assign
                                  to the data disk.
                                format: int32
                                type: integer
                              lun:
                                description: Lun Specifies the logical unit number
                                  of the data disk. This value is used to identify
                                  data disks within the VM and therefore must be unique
                                  for each data disk attached to a VM. The value must
                                  be between 0 and 63.
                                format: int32
                                type: integer
                              managedDisk:
                                description: ManagedDisk specifies the Managed Disk
                                  parameters for the data disk.
                                properties:
                                  diskEncryptionSet:
                                    description: DiskEncryptionSetParameters defines
                                      disk encryption options.
                                    properties:
                                      id:
                                        description: ID defines resourceID for diskEncryptionSet
                                          resource. It must be in the same subscription
                                        type: string
                                    type: object
                                  storageAccountType:
                                    type: string
                                type: object
                              nameSuffix:
                                description: NameSuffix is the suffix to be appended
                                  to the machine name to generate the disk name. Each
                                  disk name will be in format <machineName>_<nameSuffix>.
                                type: string
                            required:
                            - diskSizeGB
                            - nameSuffix
                            type: object
                          type: array
                        dnsServers:
                          description: DNSServers adds a list of DNS Server IP addresses
                            to the VM NICs.
                          items:
                            type: string
                          type: array
                        enableIPForwarding:
                          description: EnableIPForwarding enables IP Forwarding in
                            Azure which is required for some CNI's to send traffic
                            from a pods on one machine to another. This is required
                            for IpV6 with Calico in combination with User Defined
                            Routes (set by the Azure Cloud Controller manager). Default
                            is false for disabled.
                          type: boolean
                        failureDomain:
                          description: FailureDomain is the failure domain unique
                            identifier this Machine should be attached to, as defined
                            in Cluster API. This relates to an Azure Availability
                            Zone
                          type: string
                        identity:
                          default: None
                          description: Identity is the type of identity used for the
                            virtual machine. The type 'SystemAssigned' is an implicitly
                            created identity. The generated identity will be assigned
                            a Subscription contributor role. The type 'UserAssigned'
                            is a standalone Azure resource provided by the user and
                            assigned to the VM
                          enum:
                          - None
                          - SystemAssigned
                          - UserAssigned
                          type: string
                        image:
                          description: Image is used to provide details of an image
                            to use during VM creation. If image details are omitted
                            the image will default the Azure Marketplace "capi" offer,
                            which is based on Ubuntu.
                          properties:
                            computeGallery:
                              description: ComputeGallery specifies an image to use
                                from the Azure Compute Gallery
                              properties:
                                gallery:
                                  description: Gallery specifies the name of the compute
                                    image gallery that contains the image
                                  minLength: 1
                                  type: string
                                name:
                                  description: Name is the name of the image
                                  minLength: 1
                                  type: string
                                plan:
                                  description: Plan contains plan information.
                                  properties:
                                    offer:
                                      description: Offer specifies the name of a group
                                        of related images created by the publisher.
                                        For example, UbuntuServer, WindowsServer
                                      minLength: 1
                                      type: string
                                    publisher:
                                      description: Publisher is the name of the organization
                                        that created the image
                                      minLength: 1
                                      type: string
                                    sku:
                                      description: SKU specifies an instance of an
                                        offer, such as a major release of a distribution.
                                        For example, 18.04-LTS, 2019-Datacenter
                                      minLength: 1
                                      type: string
                                  required:
                                  - offer
                                  - publisher
                                  - sku
                                  type: object
                                resourceGroup:
                                  description: ResourceGroup specifies the resource
                                    group containing the private compute gallery.
                                  type: string
                                subscriptionID:
                                  description: SubscriptionID is the identifier of
                                    the subscription that contains the private compute
                                    gallery.
                                  type: string
                                version:
                                  description: Version specifies the version of the
                                    marketplace image. The allowed formats are Major.Minor.Build
                                    or 'latest'. Major, Minor, and Build are decimal
                                    numbers. Specify 'latest' to use the latest version
                                    of an image available at deploy time. Even if
                                    you use 'latest', the VM image will not automatically
                                    update after deploy time even if a new version
                                    becomes available.
                                  minLength: 1
                                  type: string
                              required:
                              - gallery
                              - name
                              - version
                              type: object
                            id:
                              description: ID specifies an image to use by ID
                              type: string
                            marketplace:
                              description: Marketplace specifies an image to use from
                                the Azure Marketplace
                              properties:
                                offer:
                                  description: Offer specifies the name of a group
                                    of related images created by the publisher. For
                                    example, UbuntuServer, WindowsServer
                                  minLength: 1
                                  type: string
                                publisher:
                                  description: Publisher is the name of the organization
                                    that created the image
                                  minLength: 1
                                  type: string
                                sku:
                                  description: SKU specifies an instance of an offer,
                                    such as a major release of a distribution. For
                                    example, 18.04-LTS, 2019-Datacenter
                                  minLength: 1
                                  type: string
                                thirdPartyImage:
                                  default: false
                                  description: ThirdPartyImage indicates the image
                                    is published by a third party publisher and a
                                    Plan will be generated for it.
                                  type: boolean
                                version:
                                  description: Version specifies the version of an
                                    image sku. The allowed formats are Major.Minor.Build
                                    or 'latest'. Major, Minor, and Build are decimal
                                    numbers. Specify 'latest' to use the latest version
                                    of an image available at deploy time. Even if
                                    you use 'latest', the VM image will not automatically
                                    update after deploy time even if a new version
                                    becomes available.
                                  minLength: 1
                                  type: string
                              required:
                              - offer
                              - publisher
                              - sku
                              - version
                              type: object
                            sharedGallery:
                              description: 'SharedGallery specifies an image to use
                                from an Azure Shared Image Gallery Deprecated: use
                                ComputeGallery instead.'
                              properties:
                                gallery:
                                  description: Gallery specifies the name of the shared
                                    image gallery that contains the image
                                  minLength: 1
                                  type: string
                                name:
                                  description: Name is the name of the image
                                  minLength: 1
                                  type: string
                                offer:
                                  description: Offer specifies the name of a group
                                    of related images created by the publisher. For
                                    example, UbuntuServer, WindowsServer This value
                                    will be used to add a `Plan` in the API request
                                    when creating the VM/VMSS resource. This is needed
                                    when the source image from which this SIG image
                                    was built requires the `Plan` to be used.
                                  type: string
                                publisher:
                                  description: Publisher is the name of the organization
                                    that created the image. This value will be used
                                    to add a `Plan` in the API request when creating
                                    the VM/VMSS resource. This is needed when the
                                    source image from which this SIG image was built
                                    requires the `Plan` to be used.
                                  type: string
                                resourceGroup:
                                  description: ResourceGroup specifies the resource
                                    group containing the shared image gallery
                                  minLength: 1
                                  type: string
                                sku:
                                  description: SKU specifies an instance of an offer,
                                    such as a major release of a distribution. For
                                    example, 18.04-LTS, 2019-Datacenter This value
                                    will be used to add a `Plan` in the API request
                                    when creating the VM/VMSS resource. This is needed
                                    when the source image from which this SIG image
                                    was built requires the `Plan` to be used.
                                  type: string
                                subscriptionID:
                                  description: SubscriptionID is the identifier of
                                    the subscription that contains the shared image
                                    gallery
                                  minLength: 1
                                  type: string
                                version:
                                  description: Version specifies the version of the
                                    marketplace image. The allowed formats are Major.Minor.Build
                                    or 'latest'. Major, Minor, and Build are decimal
                                    numbers. Specify 'latest' to use the latest version
                                    of an image available at deploy time. Even if
                                    you use 'latest', the VM image will not automatically
                                    update after deploy time even if a new version
                                    becomes available.
                                  minLength: 1
                                  type: string
                              required:
                              - gallery
                              - name
                              - resourceGroup
                              - subscriptionID
                              - version
                              type: object
                          type: object
                        osDisk:
                          description: OSDisk specifies the parameters for the operating
                            system disk of the machine
                          properties:
                            cachingType:
                              description: CachingType specifies the caching requirements.
                              enum:
                              - None
                              - ReadOnly
                              - ReadWrite
                              type: string
                            diffDiskSettings:
                              description: DiffDiskSettings describe ephemeral disk
                                settings for the os disk.
                              properties:
                                option:
                                  description: Option enables ephemeral OS when set
                                    to "Local" See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks
                                    for full details
                                  enum:
                                  - Local
                                  type: string
                              required:
                              - option
                              type: object
                            diskSizeGB:
                              description: DiskSizeGB is the size in GB to assign
                                to the OS disk. Will have a default of 30GB if not
                                provided
                              format: int32
                              type: integer
                            managedDisk:
                              description: ManagedDisk specifies the Managed Disk
                                parameters for the OS disk.
                              properties:
                                diskEncryptionSet:
                                  description: DiskEncryptionSetParameters defines
                                    disk encryption options.
                                  properties:
                                    id:
                                      description: ID defines resourceID for diskEncryptionSet
                                        resource. It must be in the same subscription
                                      type: string
                                  type: object
                                storageAccountType:
                                  type: string
                              type: object
                            osType:
                              type: string
                          required:
                          - osType
                          type: object
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        roleAssignmentName:
                          description: RoleAssignmentName is the name of the role
                            assignment to create for a system assigned identity. It
                            can be any valid GUID. If not specified, a random GUID
                            will be generated.
                          type: string
                        securityProfile:
                          description: SecurityProfile specifies the Security profile
                            settings for a virtual machine.
                          properties:
                            encryptionAtHost:
                              description: This field indicates whether Host Encryption
                                should be enabled or disabled for a virtual machine
                                or virtual machine scale set. Default is disabled.
                              type: boolean
                          type: object
                        spotVMOptions:
                          description: SpotVMOptions allows the ability to specify
                            the Machine should use a Spot VM
                          properties:
                            evictionPolicy:
                              description: EvictionPolicy defines the behavior of
                                the virtual machine when it is evicted. It can be
                                either Delete or Deallocate.
                              enum:
                              - Deallocate
                              - Delete
                              type: string
                            maxPrice:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxPrice defines the maximum price the
                                user is willing to pay for Spot VM instances
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        sshPublicKey:
                          type: string
                        subnetName:
                          description: SubnetName selects the Subnet where the VM
                            will be placed
                          type: string
                        userAssignedIdentities:
                          description: UserAssignedIdentities is a list of standalone
                            Azure identities provided by the user The lifecycle of
                            a user-assigned identity is managed separately from the
                            lifecycle of the AzureMachine. See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                          items:
                            description: UserAssignedIdentity defines the user-assigned
                              identities provided by the user to be assigned to Azure
                              resources.
                            properties:
                              providerID:
                                description: 'ProviderID is the identification ID
                                  of the user-assigned Identity, the format of an
                                  identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                                type: string
                            required:
                            - providerID
                            type: object
                          type: array
                        vmExtensions:
                          description: VMExtensions specifies a list of extensions
                            to be added to the virtual machine.
                          items:
                            description: VMExtension specifies the parameters for
                              a custom VM extension.
                            properties:
                              name:
                                description: Name is the name of the extension.
                                type: string
                              protectedSettings:
                                additionalProperties:
                                  type: string
                                description: ProtectedSettings is a JSON formatted
                                  protected settings for the extension.
                                type: object
                              publisher:
                                description: Publisher is the name of the extension
                                  handler publisher.
                                type: string
                              settings:
                                additionalProperties:
                                  type: string
                                description: Settings is a JSON formatted public settings
                                  for the extension.
                                type: object
                              version:
                                description: Version specifies the version of the
                                  script handler.
                                type: string
                            required:
                            - name
                            - publisher
                            - version
                            type: object
                          type: array
                        vmSize:
                          type: string
                      required:
                      - osDisk
                      - sshPublicKey
                      - vmSize
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: ibmpowervsclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSCluster
      listKind: IBMPowerVSClusterList
      plural: ibmpowervsclusters
      singular: ibmpowervscluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this IBMPowerVSCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Time duration since creation of IBMPowerVSCluster
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .spec.serviceInstanceID
        name: PowerVS Cloud Instance ID
        priority: 1
        type: string
      - description: Control Plane Endpoint
        jsonPath: .spec.controlPlaneEndpoint.host
        name: Endpoint
        priority: 1
        type: string
      - description: Control Plane Port
        jsonPath: .spec.controlPlaneEndpoint.port
        name: Port
        priority: 1
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                network:
                  description: Network is the reference to the Network to use for
                    this cluster.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: Regular expression to match resource, In case of
                        multiple resources matches the provided regular expression
                        the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance
                    where the vsi instance will get deployed.
                  minLength: 1
                  type: string
              required:
              - network
              - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
              properties:
                ready:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: ibmpowervsimages.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSImage
      listKind: IBMPowerVSImageList
      plural: ibmpowervsimages
      singular: ibmpowervsimage
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: PowerVS image state
        jsonPath: .status.imageState
        name: State
        type: string
      - description: Image is ready for IBM PowerVS instances
        jsonPath: .status.ready
        name: Ready
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSImage is the Schema for the ibmpowervsimages API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.
              properties:
                bucket:
                  description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
                  type: string
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  default: delete
                  description: DeletePolicy defines the policy used to identify images
                    to be preserved beyond the lifecycle of associated cluster.
                  enum:
                  - delete
                  - retain
                  type: string
                object:
                  description: Cloud Object Storage image filename.
                  type: string
                region:
                  description: Cloud Object Storage region.
                  type: string
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance
                    where the image will get imported.
                  type: string
                storageType:
                  default: tier1
                  description: Type of storage, storage pool with the most available
                    space will be selected.
                  enum:
                  - tier1
                  - tier3
                  type: string
              required:
              - bucket
              - clusterName
              - object
              - region
              - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.
              properties:
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSImage.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                imageID:
                  description: ImageID is the id of the imported image.
                  type: string
                imageState:
                  description: ImageState is the status of the imported image.
                  type: string
                jobID:
                  description: JobID is the job ID of an import operation.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: ibmpowervsmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSMachine
      listKind: IBMPowerVSMachineList
      plural: ibmpowervsmachines
      singular: ibmpowervsmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this IBMPowerVSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Machine object to which this IBMPowerVSMachine belongs
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        priority: 1
        type: string
      - description: Time duration since creation of IBMPowerVSMachine
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - description: Cluster infrastructure is ready for IBM PowerVS instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: Instance Internal Addresses
        jsonPath: .status.addresses[?(@.type=="InternalIP")].address
        name: Internal-IP
        priority: 1
        type: string
      - description: Instance External Addresses
        jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
        name: External-IP
        priority: 1
        type: string
      - description: PowerVS instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: PowerVS instance health
        jsonPath: .status.health
        name: Health
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
              properties:
                image:
                  description: Image is the reference to the Image from which to create
                    the machine instance.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: Regular expression to match resource, In case of
                        multiple resources matches the provided regular expression
                        the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                imageRef:
                  description: ImageRef is an optional reference to a provider-specific
                    resource that holds the details for provisioning the Image for
                    a Cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                memory:
                  description: Memory is Amount of memory allocated (in GB)
                  type: string
                network:
                  description: Network is the reference to the Network to use for
                    this instance.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: Regular expression to match resource, In case of
                        multiple resources matches the provided regular expression
                        the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                procType:
                  description: 'ProcType is the processor type, e.g: dedicated, shared,
                    capped'
                  type: string
                processors:
                  description: Processors is Number of processors allocated.
                  pattern: ^\d+(\.)?(\d)?(\d)?$
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance
                    where the vsi instance will get deployed.
                  minLength: 1
                  type: string
                sshKey:
                  description: SSHKey is the name of the SSH key pair provided to
                    the vsi for authenticating users.
                  type: string
                sysType:
                  description: SysType is the System type used to host the vsi.
                  type: string
              required:
              - network
              - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
              properties:
                addresses:
                  description: Addresses contains the vsi associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                fault:
                  description: Fault will report if any fault messages for the vsi.
                  type: string
                health:
                  description: Health is the health of the vsi.
                  type: string
                instanceID:
                  type: string
                instanceState:
                  description: InstanceState is the status of the vsi.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                region:
                  description: Region specifies the Power VS Service instance region.
                  type: string
                zone:
                  description: Zone specifies the Power VS Service instance zone.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: ibmpowervsmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      kind: IBMPowerVSMachineTemplate
      listKind: IBMPowerVSMachineTemplateList
      plural: ibmpowervsmachinetemplates
      singular: ibmpowervsmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineTemplateSpec defines the desired state
                of IBMPowerVSMachineTemplate.
              properties:
                template:
                  description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine
                    spec.
                  properties:
                    spec:
                      description: IBMPowerVSMachineSpec defines the desired state
                        of IBMPowerVSMachine.
                      properties:
                        image:
                          description: Image is the reference to the Image from which
                            to create the machine instance.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: Regular expression to match resource, In
                                case of multiple resources matches the provided regular
                                expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        imageRef:
                          description: ImageRef is an optional reference to a provider-specific
                            resource that holds the details for provisioning the Image
                            for a Cluster.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        memory:
                          description: Memory is Amount of memory allocated (in GB)
                          type: string
                        network:
                          description: Network is the reference to the Network to
                            use for this instance.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: Regular expression to match resource, In
                                case of multiple resources matches the provided regular
                                expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        procType:
                          description: 'ProcType is the processor type, e.g: dedicated,
                            shared, capped'
                          type: string
                        processors:
                          description: Processors is Number of processors allocated.
                          pattern: ^\d+(\.)?(\d)?(\d)?$
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        serviceInstanceID:
                          description: ServiceInstanceID is the id of the power cloud
                            instance where the vsi instance will get deployed.
                          minLength: 1
                          type: string
                        sshKey:
                          description: SSHKey is the name of the SSH key pair provided
                            to the vsi for authenticating users.
                          type: string
                        sysType:
                          description: SysType is the System type used to host the
                            vsi.
                          type: string
                      required:
                      - network
                      - serviceInstanceID
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
            status:
              description: IBMPowerVSMachineTemplateStatus defines the observed state
                of IBMPowerVSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined
                    in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha4
    name: ibmvpcclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCCluster
      listKind: IBMVPCClusterList
      plural: ibmvpcclusters
      singular: ibmvpccluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster to which this IBMVPCCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for IBM VPC instances
        jsonPath: .status.ready
        name: Ready
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior.
                  properties:
                    name:
                      description: Name sets the name of the VPC load balancer.
                      maxLength: 64
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                  type: object
                region:
                  description: The IBM Cloud Region the cluster lives in.
                  type: string
                resourceGroup:
                  description: The VPC resources should be created under the resource
                    group.
                  type: string
                vpc:
                  description: The Name of VPC.
                  type: string
                zone:
                  description: The Name of availability zone.
                  type: string
              required:
              - region
              - resourceGroup
              type: object
            status:
              description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the load
                    balancer.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneLoadBalancerState:
                  description: ControlPlaneLoadBalancerState is the status of the
                    load balancer.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                subnet:
                  description: Subnet describes a subnet.
                  properties:
                    cidr:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    zone:
                      type: string
                  required:
                  - cidr
                  - id
                  - name
                  - zone
                  type: object
                vpc:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                  - id
                  - name
                  type: object
                vpcEndpoint:
                  description: VPCEndpoint describes a VPCEndpoint.
                  properties:
                    address:
                      type: string
                    floatingIPID:
                      type: string
                    loadBalancerIPID:
                      type: string
                  required:
                  - address
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: ibmvpcmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCMachine
      listKind: IBMVPCMachineList
      plural: ibmvpcmachines
      singular: ibmvpcmachine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster infrastructure is ready for IBM VPC instances
        jsonPath: .status.ready
        name: Ready
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachine is the Schema for the ibmvpcmachines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine.
              properties:
                image:
                  description: 'Image is the id of OS image which would be install
                    on the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                    TODO: allow user to specify a image name is much reasonable. Example:
                    ibm-ubuntu-18-04-1-minimal-amd64-2'
                  type: string
                name:
                  description: Name of the instance.
                  type: string
                primaryNetworkInterface:
                  description: PrimaryNetworkInterface is required to specify subnet.
                  properties:
                    subnet:
                      description: Subnet ID of the network interface.
                      type: string
                  type: object
                profile:
                  description: "Profile indicates the flavor of instance. Example:
                    bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a reference
                    link of profile"
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                sshKeys:
                  description: SSHKeys is the SSH pub keys that will be used to access
                    VM.
                  items:
                    type: string
                  type: array
                zone:
                  description: 'Zone is the place where the instance should be created.
                    Example: us-south-3 TODO: Actually zone is transparent to user.
                    The field user can access is location. Example: Dallas 2'
                  type: string
              required:
              - image
              - zone
              type: object
            status:
              description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine.
              properties:
                addresses:
                  description: Addresses contains the GCP instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                instanceID:
                  type: string
                instanceState:
                  description: InstanceStatus is the status of the GCP instance for
                    this machine.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    name: ibmvpcmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: IBMVPCMachineTemplate
      listKind: IBMVPCMachineTemplateList
      plural: ibmvpcmachinetemplates
      singular: ibmvpcmachinetemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineTemplateSpec defines the desired state of
                IBMVPCMachineTemplate.
              properties:
                template:
                  description: IBMVPCMachineTemplateResource describes the data needed
                    to create am IBMVPCMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        image:
                          description: 'Image is the id of OS image which would be
                            install on the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                            TODO: allow user to specify a image name is much reasonable.
                            Example: ibm-ubuntu-18-04-1-minimal-amd64-2'
                          type: string
                        name:
                          description: Name of the instance.
                          type: string
                        primaryNetworkInterface:
                          description: PrimaryNetworkInterface is required to specify
                            subnet.
                          properties:
                            subnet:
                              description: Subnet ID of the network interface.
                              type: string
                          type: object
                        profile:
                          description: "Profile indicates the flavor of instance.
                            Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO:
                            add a reference link of profile"
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        sshKeys:
                          description: SSHKeys is the SSH pub keys that will be used
                            to access VM.
                          items:
                            type: string
                          type: array
                        zone:
                          description: 'Zone is the place where the instance should
                            be created. Example: us-south-3 TODO: Actually zone is
                            transparent to user. The field user can access is location.
                            Example: Dallas 2'
                          type: string
                      required:
                      - image
                      - zone
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtclusters.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtCluster
      listKind: KubevirtClusterList
      plural: kubevirtclusters
      singular: kubevirtcluster
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtCluster is the Schema for the kubevirtclusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtClusterSpec defines the desired state of KubevirtCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                infraClusterSecretRef:
                  description: InfraClusterSecretRef is a reference to a secret with
                    a kubeconfig for external cluster used for infra.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                sshKeys:
                  description: SSHKeys is a reference to a local struct for SSH keys
                    persistence.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a resource containing
                        the keys. The reference is optional to allow users/operators
                        to specify Bootstrap.DataSecretName without the need of a
                        controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores
                        ssh keys.
                      type: string
                  type: object
              type: object
            status:
              description: KubevirtClusterStatus defines the observed state of KubevirtCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the KubevirtCluster.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains don't mean much in CAPD since it's all
                    local, but we can see how the rest of cluster API will use this
                    if we populate it.
                  type: object
                ready:
                  description: Ready denotes that the infrastructure is ready.
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtmachines.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtMachine
      listKind: KubevirtMachineList
      plural: kubevirtmachines
      singular: kubevirtmachine
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachine is the Schema for the kubevirtmachines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineSpec defines the desired state of KubevirtMachine.
              properties:
                providerID:
                  description: ProviderID TBD what to use for Kubevirt
                  type: string
                virtualMachineTemplate:
                  description: VirtualMachineTemplateSpec defines the desired state
                    of the kubevirt VM.
                  properties:
                    metadata:
                      nullable: true
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: VirtualMachineSpec contains the VirtualMachine
                        specification.
                      properties:
                        dataVolumeTemplates:
                          description: dataVolumeTemplates is a list of dataVolumes
                            that the VirtualMachineInstance template can reference.
                            DataVolumes in this list are dynamically created for the
                            VirtualMachine and are tied to the VirtualMachine's life-cycle.
                          items:
                            nullable: true
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              metadata:
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: DataVolumeSpec contains the DataVolume
                                  specification.
                                properties:
                                  checkpoints:
                                    description: Checkpoints is a list of DataVolumeCheckpoints,
                                      representing stages in a multistage import.
                                    items:
                                      description: DataVolumeCheckpoint defines a
                                        stage in a warm migration.
                                      properties:
                                        current:
                                          description: Current is the identifier of
                                            the snapshot created for this checkpoint.
                                          type: string
                                        previous:
                                          description: Previous is the identifier
                                            of the snapshot from the previous checkpoint.
                                          type: string
                                      required:
                                      - current
                                      - previous
                                      type: object
                                    type: array
                                  contentType:
                                    description: 'DataVolumeContentType options: "kubevirt",
                                      "archive"'
                                    enum:
                                    - kubevirt
                                    - archive
                                    type: string
                                  finalCheckpoint:
                                    description: FinalCheckpoint indicates whether
                                      the current DataVolumeCheckpoint is the final
                                      checkpoint.
                                    type: boolean
                                  preallocation:
                                    description: Preallocation controls whether storage
                                      for DataVolumes should be allocated in advance.
                                    type: boolean
                                  priorityClassName:
                                    description: PriorityClassName for Importer, Cloner
                                      and Uploader pod
                                    type: string
                                  pvc:
                                    description: PVC is the PVC specification
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'dataSource field can be used
                                          to specify either: * An existing VolumeSnapshot
                                          object (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      dataSourceRef:
                                        description: 'dataSourceRef specifies the
                                          object from which to populate the volume
                                          with data, if a non-empty volume is desired.
                                          This may be any local object from a non-empty
                                          API group (non core object) or a PersistentVolumeClaim
                                          object. When this field is specified, volume
                                          binding will only succeed if the type of
                                          the specified object matches some installed
                                          volume populator or dynamic provisioner.
                                          This field will replace the functionality
                                          of the DataSource field and as such if both
                                          fields are non-empty, they must have the
                                          same value. For backwards compatibility,
                                          both fields (DataSource and DataSourceRef)
                                          will be set to the same value automatically
                                          if one of them is empty and the other is
                                          non-empty. There are two important differences
                                          between DataSource and DataSourceRef: *
                                          While DataSource only allows two specific
                                          types of objects, DataSourceRef allows any
                                          non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef preserves
                                          all values, and generates an error if a
                                          disallowed value is specified. (Beta) Using
                                          this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resources:
                                        description: 'resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over
                                          volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: 'storageClassName is the name
                                          of the StorageClass required by the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  source:
                                    description: Source is the src of the data for
                                      the requested DataVolume
                                    properties:
                                      blank:
                                        description: DataVolumeBlankImage provides
                                          the parameters to create a new raw blank
                                          image for the PVC
                                        type: object
                                      http:
                                        description: DataVolumeSourceHTTP can be either
                                          an http or https endpoint, with an optional
                                          basic auth user name and password, and an
                                          optional configmap containing additional
                                          CAs
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap
                                              reference, containing a Certificate
                                              Authority(CA) public key, and a base64
                                              encoded pem certificate
                                            type: string
                                          extraHeaders:
                                            description: ExtraHeaders is a list of
                                              strings containing extra headers to
                                              include with HTTP transfer requests
                                            items:
                                              type: string
                                            type: array
                                          secretExtraHeaders:
                                            description: SecretExtraHeaders is a list
                                              of Secret references, each containing
                                              an extra HTTP header that may include
                                              sensitive information
                                            items:
                                              type: string
                                            type: array
                                          secretRef:
                                            description: SecretRef A Secret reference,
                                              the secret should contain accessKeyId
                                              (user name) base64 encoded, and secretKey
                                              (password) also base64 encoded
                                            type: string
                                          url:
                                            description: URL is the URL of the http(s)
                                              endpoint
                                            type: string
                                        required:
                                        - url
                                        type: object
                                      imageio:
                                        description: DataVolumeSourceImageIO provides
                                          the parameters to create a Data Volume from
                                          an imageio source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a
                                              reference to the CA cert
                                            type: string
                                          diskId:
                                            description: DiskID provides id of a disk
                                              to be imported
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the ovirt-engine
                                            type: string
                                          url:
                                            description: URL is the URL of the ovirt-engine
                                            type: string
                                        required:
                                        - diskId
                                        - url
                                        type: object
                                      pvc:
                                        description: DataVolumeSourcePVC provides
                                          the parameters to create a Data Volume from
                                          an existing PVC
                                        properties:
                                          name:
                                            description: The name of the source PVC
                                            type: string
                                          namespace:
                                            description: The namespace of the source
                                              PVC
                                            type: string
                                        required:
                                        - name
                                        - namespace
                                        type: object
                                      registry:
                                        description: DataVolumeSourceRegistry provides
                                          the parameters to create a Data Volume from
                                          an registry source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a
                                              reference to the Registry certs
                                            type: string
                                          imageStream:
                                            description: ImageStream is the name of
                                              image stream for import
                                            type: string
                                          pullMethod:
                                            description: PullMethod can be either
                                              "pod" (default import), or "node" (node
                                              docker cache based import)
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the Registry
                                              source
                                            type: string
                                          url:
                                            description: 'URL is the url of the registry
                                              source (starting with the scheme: docker,
                                              oci-archive)'
                                            type: string
                                        type: object
                                      s3:
                                        description: DataVolumeSourceS3 provides the
                                          parameters to create a Data Volume from
                                          an S3 source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap
                                              reference, containing a Certificate
                                              Authority(CA) public key, and a base64
                                              encoded pem certificate
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret
                                              reference needed to access the S3 source
                                            type: string
                                          url:
                                            description: URL is the url of the S3
                                              source
                                            type: string
                                        required:
                                        - url
                                        type: object
                                      upload:
                                        description: DataVolumeSourceUpload provides
                                          the parameters to create a Data Volume by
                                          uploading the source
                                        type: object
                                      vddk:
                                        description: DataVolumeSourceVDDK provides
                                          the parameters to create a Data Volume from
                                          a Vmware source
                                        properties:
                                          backingFile:
                                            description: BackingFile is the path to
                                              the virtual hard disk to migrate from
                                              vCenter/ESXi
                                            type: string
                                          secretRef:
                                            description: SecretRef provides a reference
                                              to a secret containing the username
                                              and password needed to access the vCenter
                                              or ESXi host
                                            type: string
                                          thumbprint:
                                            description: Thumbprint is the certificate
                                              thumbprint of the vCenter or ESXi host
                                            type: string
                                          url:
                                            description: URL is the URL of the vCenter
                                              or ESXi host with the VM to migrate
                                            type: string
                                          uuid:
                                            description: UUID is the UUID of the virtual
                                              machine that the backing file is attached
                                              to in vCenter/ESXi
                                            type: string
                                        type: object
                                    type: object
                                  sourceRef:
                                    description: SourceRef is an indirect reference
                                      to the source of data for the requested DataVolume
                                    properties:
                                      kind:
                                        description: The kind of the source reference,
                                          currently only "DataSource" is supported
                                        type: string
                                      name:
                                        description: The name of the source reference
                                        type: string
                                      namespace:
                                        description: The namespace of the source reference,
                                          defaults to the DataVolume namespace
                                        type: string
                                    required:
                                    - kind
                                    - name
                                    type: object
                                  storage:
                                    description: Storage is the requested storage
                                      specification
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          * An existing custom resource that implements
                                          data population (Alpha) In order to use
                                          custom resource types that implement data
                                          population, the AnyVolumeDataSource feature
                                          gate must be enabled. If the provisioner
                                          or an external controller can support the
                                          specified data source, it will create a
                                          new volume based on the contents of the
                                          specified data source.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                type: object
                              status:
                                description: DataVolumeTemplateDummyStatus is here
                                  simply for backwards compatibility with a previous
                                  API.
                                nullable: true
                                type: object
                            required:
                            - spec
                            type: object
                          type: array
                        flavor:
                          description: FlavorMatcher references a flavor that is used
                            to fill fields in Template
                          properties:
                            kind:
                              description: 'Kind specifies which flavor resource is
                                referenced. Allowed values are: "VirtualMachineFlavor"
                                and "VirtualMachineClusterFlavor". If not specified,
                                "VirtualMachineClusterFlavor" is used by default.'
                              type: string
                            name:
                              description: Name is the name of the VirtualMachineFlavor
                                or VirtualMachineClusterFlavor
                              type: string
                            profile:
                              description: Profile is the name of a custom profile
                                in the flavor. If left empty, the default profile
                                is used.
                              type: string
                          required:
                          - name
                          type: object
                        runStrategy:
                          description: Running state indicates the requested running
                            state of the VirtualMachineInstance mutually exclusive
                            with Running
                          type: string
                        running:
                          description: Running controls whether the associatied VirtualMachineInstance
                            is created or not Mutually exclusive with RunStrategy
                          type: boolean
                        template:
                          description: Template is the direct specification of VirtualMachineInstance
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineInstance Spec contains the
                                VirtualMachineInstance specification.
                              properties:
                                accessCredentials:
                                  description: Specifies a set of public keys to inject
                                    into the vm guest
                                  items:
                                    description: AccessCredential represents a credential
                                      source that can be used to authorize remote
                                      access to the vm guest Only one of its members
                                      may be specified.
                                    properties:
                                      sshPublicKey:
                                        description: SSHPublicKey represents the source
                                          and method of applying a ssh public key
                                          into a guest virtual machine.
                                        properties:
                                          propagationMethod:
                                            description: PropagationMethod represents
                                              how the public key is injected into
                                              the vm guest.
                                            properties:
                                              configDrive:
                                                description: ConfigDrivePropagation
                                                  means that the ssh public keys are
                                                  injected into the VM using metadata
                                                  using the configDrive cloud-init
                                                  provider
                                                type: object
                                              qemuGuestAgent:
                                                description: QemuGuestAgentAccessCredentailPropagation
                                                  means ssh public keys are dynamically
                                                  injected into the vm at runtime
                                                  via the qemu guest agent. This feature
                                                  requires the qemu guest agent to
                                                  be running within the guest.
                                                properties:
                                                  users:
                                                    description: Users represents
                                                      a list of guest users that should
                                                      have the ssh public keys added
                                                      to their authorized_keys file.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: set
                                                required:
                                                - users
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the
                                              public keys are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the
                                                  access credential is pulled from
                                                  a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents
                                                      the name of the secret in the
                                                      VMI's namespace
                                                    type: string
                                                required:
                                                - secretName
                                                type: object
                                            type: object
                                        required:
                                        - propagationMethod
                                        - source
                                        type: object
                                      userPassword:
                                        description: UserPassword represents the source
                                          and method for applying a guest user's password
                                        properties:
                                          propagationMethod:
                                            description: propagationMethod represents
                                              how the user passwords are injected
                                              into the vm guest.
                                            properties:
                                              qemuGuestAgent:
                                                description: QemuGuestAgentAccessCredentailPropagation
                                                  means passwords are dynamically
                                                  injected into the vm at runtime
                                                  via the qemu guest agent. This feature
                                                  requires the qemu guest agent to
                                                  be running within the guest.
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the
                                              user passwords are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the
                                                  access credential is pulled from
                                                  a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents
                                                      the name of the secret in the
                                                      VMI's namespace
                                                    type: string
                                                required:
                                                - secretName
                                                type: object
                                            type: object
                                        required:
                                        - propagationMethod
                                        - source
                                        type: object
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                affinity:
                                  description: If affinity is specifies, obey all
                                    the affinity rules
                                  properties:
                                    nodeAffinity:
                                      description: Describes node affinity scheduling
                                        rules for the pod.
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node matches the corresponding
                                            matchExpressions; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: An empty preferred scheduling
                                              term matches all objects with implicit
                                              weight 0 (i.e. it's a no-op). A null
                                              preferred scheduling term matches no
                                              objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term,
                                                  associated with the corresponding
                                                  weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              weight:
                                                description: Weight associated with
                                                  matching the corresponding nodeSelectorTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - preference
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to an update), the system may or may
                                            not try to eventually evict the pod from
                                            its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node
                                                selector terms. The terms are ORed.
                                              items:
                                                description: A null or empty node
                                                  selector term matches no objects.
                                                  The requirements of them are ANDed.
                                                  The TopologySelectorTerm type implements
                                                  a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              type: array
                                          required:
                                          - nodeSelectorTerms
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    podAffinity:
                                      description: Describes pod affinity scheduling
                                        rules (e.g. co-locate this pod in the same
                                        node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node has pods which matches
                                            the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most
                                            preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    podAntiAffinity:
                                      description: Describes pod anti-affinity scheduling
                                        rules (e.g. avoid putting this pod in the
                                        same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            anti-affinity expressions specified by
                                            this field, but it may choose a node that
                                            violates one or more of the expressions.
                                            The node that is most preferred is the
                                            one with the greatest sum of weights,
                                            i.e. for each node that meets all of the
                                            scheduling requirements (resource request,
                                            requiredDuringScheduling anti-affinity
                                            expressions, etc.), compute a sum by iterating
                                            through the elements of this field and
                                            adding "weight" to the sum if the node
                                            has pods which matches the corresponding
                                            podAffinityTerm; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the anti-affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the anti-affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                dnsConfig:
                                  description: Specifies the DNS parameters of a pod.
                                    Parameters specified here will be merged to the
                                    generated DNS configuration based on DNSPolicy.
                                  properties:
                                    nameservers:
                                      description: A list of DNS name server IP addresses.
                                        This will be appended to the base nameservers
                                        generated from DNSPolicy. Duplicated nameservers
                                        will be removed.
                                      items:
                                        type: string
                                      type: array
                                    options:
                                      description: A list of DNS resolver options.
                                        This will be merged with the base options
                                        generated from DNSPolicy. Duplicated entries
                                        will be removed. Resolution options given
                                        in Options will override those that appear
                                        in the base DNSPolicy.
                                      items:
                                        description: PodDNSConfigOption defines DNS
                                          resolver options of a pod.
                                        properties:
                                          name:
                                            description: Required.
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    searches:
                                      description: A list of DNS search domains for
                                        host-name lookup. This will be appended to
                                        the base search paths generated from DNSPolicy.
                                        Duplicated search paths will be removed.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                dnsPolicy:
                                  description: Set DNS policy for the pod. Defaults
                                    to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet',
                                    'ClusterFirst', 'Default' or 'None'. DNS parameters
                                    given in DNSConfig will be merged with the policy
                                    selected with DNSPolicy. To have DNS options set
                                    along with hostNetwork, you have to specify DNS
                                    policy explicitly to 'ClusterFirstWithHostNet'.
                                  type: string
                                domain:
                                  description: Specification of the desired behavior
                                    of the VirtualMachineInstance on the host.
                                  properties:
                                    chassis:
                                      description: Chassis specifies the chassis info
                                        passed to the domain.
                                      properties:
                                        asset:
                                          type: string
                                        manufacturer:
                                          type: string
                                        serial:
                                          type: string
                                        sku:
                                          type: string
                                        version:
                                          type: string
                                      type: object
                                    clock:
                                      description: Clock sets the clock and timers
                                        of the vmi.
                                      properties:
                                        timer:
                                          description: Timer specifies whih timers
                                            are attached to the vmi.
                                          properties:
                                            hpet:
                                              description: HPET (High Precision Event
                                                Timer) - multiple timers with periodic
                                                interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup", "merge", "discard".
                                                  type: string
                                              type: object
                                            hyperv:
                                              description: Hyperv (Hypervclock) -
                                                lets guests read the host’s wall clock
                                                time (paravirtualized). For windows
                                                guests.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            kvm:
                                              description: "KVM \t(KVM clock) - lets
                                                guests read the host’s wall clock
                                                time (paravirtualized). For linux
                                                guests."
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            pit:
                                              description: PIT (Programmable Interval
                                                Timer) - a timer with periodic interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup", "discard".
                                                  type: string
                                              type: object
                                            rtc:
                                              description: RTC (Real Time Clock) -
                                                a continuously running timer with
                                                periodic interrupts.
                                              properties:
                                                present:
                                                  description: Enabled set to false
                                                    makes sure that the machine type
                                                    or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: TickPolicy determines
                                                    what happens when QEMU misses
                                                    a deadline for injecting a tick
                                                    to the guest. One of "delay",
                                                    "catchup".
                                                  type: string
                                                track:
                                                  description: Track the guest or
                                                    the wall clock.
                                                  type: string
                                              type: object
                                          type: object
                                        timezone:
                                          description: Timezone sets the guest clock
                                            to the specified timezone. Zone name follows
                                            the TZ environment variable format (e.g.
                                            'America/New_York').
                                          type: string
                                        utc:
                                          description: UTC sets the guest clock to
                                            UTC on each boot. If an offset is specified,
                                            guest changes to the clock will be kept
                                            during reboots and are not reset.
                                          properties:
                                            offsetSeconds:
                                              description: OffsetSeconds specifies
                                                an offset in seconds, relative to
                                                UTC. If set, guest changes to the
                                                clock will be kept during reboots
                                                and not reset.
                                              type: integer
                                          type: object
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    cpu:
                                      description: CPU allow specified the detailed
                                        CPU topology inside the vmi.
                                      properties:
                                        cores:
                                          description: Cores specifies the number
                                            of cores inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                        dedicatedCpuPlacement:
                                          description: DedicatedCPUPlacement requests
                                            the scheduler to place the VirtualMachineInstance
                                            on a node with enough dedicated pCPUs
                                            and pin the vCPUs to it.
                                          type: boolean
                                        features:
                                          description: Features specifies the CPU
                                            features list inside the VMI.
                                          items:
                                            description: CPUFeature allows specifying
                                              a CPU feature.
                                            properties:
                                              name:
                                                description: Name of the CPU feature
                                                type: string
                                              policy:
                                                description: 'Policy is the CPU feature
                                                  attribute which can have the following
                                                  attributes: force    - The virtual
                                                  CPU will claim the feature is supported
                                                  regardless of it being supported
                                                  by host CPU. require  - Guest creation
                                                  will fail unless the feature is
                                                  supported by the host CPU or the
                                                  hypervisor is able to emulate it.
                                                  optional - The feature will be supported
                                                  by virtual CPU if and only if it
                                                  is supported by host CPU. disable  -
                                                  The feature will not be supported
                                                  by virtual CPU. forbid   - Guest
                                                  creation will fail if the feature
                                                  is supported by host CPU. Defaults
                                                  to require'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        isolateEmulatorThread:
                                          description: IsolateEmulatorThread requests
                                            one more dedicated pCPU to be allocated
                                            for the VMI to place the emulator thread
                                            on it.
                                          type: boolean
                                        model:
                                          description: Model specifies the CPU model
                                            inside the VMI. List of available models
                                            https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                            It is possible to specify special cases
                                            like "host-passthrough" to get the same
                                            CPU as the node and "host-model" to get
                                            CPU closest to the node one. Defaults
                                            to host-model.
                                          type: string
                                        numa:
                                          description: NUMA allows specifying settings
                                            for the guest NUMA topology
                                          properties:
                                            guestMappingPassthrough:
                                              description: GuestMappingPassthrough
                                                will create an efficient guest topology
                                                based on host CPUs exclusively assigned
                                                to a pod. The created topology ensures
                                                that memory and CPUs on the virtual
                                                numa nodes never cross boundaries
                                                of host numa nodes.
                                              type: object
                                          type: object
                                        realtime:
                                          description: Realtime instructs the virt-launcher
                                            to tune the VMI for lower latency, optional
                                            for real time workloads
                                          properties:
                                            mask:
                                              description: 'Mask defines the vcpu
                                                mask expression that defines which
                                                vcpus are used for realtime. Format
                                                matches libvirt''s expressions. Example:
                                                "0-3,^1","0,2,3","2-3"'
                                              type: string
                                          type: object
                                        sockets:
                                          description: Sockets specifies the number
                                            of sockets inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                        threads:
                                          description: Threads specifies the number
                                            of threads inside the vmi. Must be a value
                                            greater or equal 1.
                                          format: int32
                                          type: integer
                                      type: object
                                    devices:
                                      description: Devices allows adding disks, network
                                        interfaces, and others
                                      properties:
                                        autoattachGraphicsDevice:
                                          description: Whether to attach the default
                                            graphics device or not. VNC will not be
                                            available if set to false. Defaults to
                                            true.
                                          type: boolean
                                        autoattachMemBalloon:
                                          description: Whether to attach the Memory
                                            balloon device with default period. Period
                                            can be adjusted in virt-config. Defaults
                                            to true.
                                          type: boolean
                                        autoattachPodInterface:
                                          description: Whether to attach a pod network
                                            interface. Defaults to true.
                                          type: boolean
                                        autoattachSerialConsole:
                                          description: Whether to attach the default
                                            serial console or not. Serial console
                                            access will not be available if set to
                                            false. Defaults to true.
                                          type: boolean
                                        blockMultiQueue:
                                          description: Whether or not to enable virtio
                                            multi-queue for block devices. Defaults
                                            to false.
                                          type: boolean
                                        clientPassthrough:
                                          description: To configure and access client
                                            devices such as redirecting USB
                                          type: object
                                        disableHotplug:
                                          description: DisableHotplug disabled the
                                            ability to hotplug disks.
                                          type: boolean
                                        disks:
                                          description: Disks describes disks, cdroms,
                                            floppy and luns which are connected to
                                            the vmi.
                                          items:
                                            properties:
                                              blockSize:
                                                description: If specified, the virtual
                                                  disk will be presented with the
                                                  given block sizes.
                                                properties:
                                                  custom:
                                                    description: CustomBlockSize represents
                                                      the desired logical and physical
                                                      block size for a VM disk.
                                                    properties:
                                                      logical:
                                                        type: integer
                                                      physical:
                                                        type: integer
                                                    required:
                                                    - logical
                                                    - physical
                                                    type: object
                                                  matchVolume:
                                                    description: Represents if a feature
                                                      is enabled or disabled.
                                                    properties:
                                                      enabled:
                                                        description: Enabled determines
                                                          if the feature should be
                                                          enabled or disabled on the
                                                          guest. Defaults to true.
                                                        type: boolean
                                                    type: object
                                                type: object
                                              bootOrder:
                                                description: BootOrder is an integer
                                                  value > 0, used to determine ordering
                                                  of boot devices. Lower values take
                                                  precedence. Each disk or interface
                                                  that has a boot order must have
                                                  a unique value. Disks without a
                                                  boot order are not tried if a disk
                                                  with a boot order exists.
                                                type: integer
                                              cache:
                                                description: 'Cache specifies which
                                                  kvm disk cache mode should be used.
                                                  Supported values are: CacheNone,
                                                  CacheWriteThrough.'
                                                type: string
                                              cdrom:
                                                description: Attach a volume as a
                                                  cdrom to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to true.
                                                    type: boolean
                                                  tray:
                                                    description: Tray indicates if
                                                      the tray of the device is open
                                                      or closed. Allowed values are
                                                      "open" and "closed". Defaults
                                                      to closed.
                                                    type: string
                                                type: object
                                              dedicatedIOThread:
                                                description: dedicatedIOThread indicates
                                                  this disk should have an exclusive
                                                  IO Thread. Enabling this implies
                                                  useIOThreads = true. Defaults to
                                                  false.
                                                type: boolean
                                              disk:
                                                description: Attach a volume as a
                                                  disk to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  pciAddress:
                                                    description: 'If specified, the
                                                      virtual disk will be placed
                                                      on the guests pci address with
                                                      the specified PCI address. For
                                                      example: 0000:81:01.10'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                type: object
                                              floppy:
                                                description: Attach a volume as a
                                                  floppy to the vmi.
                                                properties:
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                  tray:
                                                    description: Tray indicates if
                                                      the tray of the device is open
                                                      or closed. Allowed values are
                                                      "open" and "closed". Defaults
                                                      to closed.
                                                    type: string
                                                type: object
                                              io:
                                                description: 'IO specifies which QEMU
                                                  disk IO mode should be used. Supported
                                                  values are: native, default, threads.'
                                                type: string
                                              lun:
                                                description: Attach a volume as a
                                                  LUN to the vmi.
                                                properties:
                                                  bus:
                                                    description: 'Bus indicates the
                                                      type of disk device to emulate.
                                                      supported values: virtio, sata,
                                                      scsi.'
                                                    type: string
                                                  readonly:
                                                    description: ReadOnly. Defaults
                                                      to false.
                                                    type: boolean
                                                type: object
                                              name:
                                                description: Name is the device name
                                                type: string
                                              serial:
                                                description: Serial provides the ability
                                                  to specify a serial number for the
                                                  disk device.
                                                type: string
                                              tag:
                                                description: If specified, disk address
                                                  and its tag will be provided to
                                                  the guest via config drive metadata
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        filesystems:
                                          description: Filesystems describes filesystem
                                            which is connected to the vmi.
                                          items:
                                            properties:
                                              name:
                                                description: Name is the device name
                                                type: string
                                              virtiofs:
                                                description: Virtiofs is supported
                                                type: object
                                            required:
                                            - name
                                            - virtiofs
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        gpus:
                                          description: Whether to attach a GPU device
                                            to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                type: string
                                              name:
                                                description: Name of the GPU device
                                                  as exposed by a device plugin
                                                type: string
                                              virtualGPUOptions:
                                                properties:
                                                  display:
                                                    properties:
                                                      enabled:
                                                        description: Enabled determines
                                                          if a display addapter backed
                                                          by a vGPU should be enabled
                                                          or disabled on the guest.
                                                          Defaults to true.
                                                        type: boolean
                                                      ramFB:
                                                        description: Enables a boot
                                                          framebuffer, until the guest
                                                          OS loads a real GPU driver
                                                          Defaults to true.
                                                        properties:
                                                          enabled:
                                                            description: Enabled determines
                                                              if the feature should
                                                              be enabled or disabled
                                                              on the guest. Defaults
                                                              to true.
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                type: object
                                            required:
                                            - deviceName
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        hostDevices:
                                          description: Whether to attach a host device
                                            to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                description: DeviceName is the resource
                                                  name of the host device exposed
                                                  by a device plugin
                                                type: string
                                              name:
                                                type: string
                                            required:
                                            - deviceName
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        inputs:
                                          description: Inputs describe input devices
                                          items:
                                            properties:
                                              bus:
                                                description: 'Bus indicates the bus
                                                  of input device to emulate. Supported
                                                  values: virtio, usb.'
                                                type: string
                                              name:
                                                description: Name is the device name
                                                type: string
                                              type:
                                                description: 'Type indicated the type
                                                  of input device. Supported values:
                                                  tablet.'
                                                type: string
                                            required:
                                            - name
                                            - type
                                            type: object
                                          type: array
                                        interfaces:
                                          description: Interfaces describe network
                                            interfaces which are added to the vmi.
                                          items:
                                            properties:
                                              bootOrder:
                                                description: BootOrder is an integer
                                                  value > 0, used to determine ordering
                                                  of boot devices. Lower values take
                                                  precedence. Each interface or disk
                                                  that has a boot order must have
                                                  a unique value. Interfaces without
                                                  a boot order are not tried.
                                                type: integer
                                              bridge:
                                                type: object
                                              dhcpOptions:
                                                description: If specified the network
                                                  interface will pass additional DHCP
                                                  options to the VMI
                                                properties:
                                                  bootFileName:
                                                    description: If specified will
                                                      pass option 67 to interface's
                                                      DHCP server
                                                    type: string
                                                  ntpServers:
                                                    description: If specified will
                                                      pass the configured NTP server
                                                      to the VM via DHCP option 042.
                                                    items:
                                                      type: string
                                                    type: array
                                                  privateOptions:
                                                    description: 'If specified will
                                                      pass extra DHCP options for
                                                      private use, range: 224-254'
                                                    items:
                                                      description: DHCPExtraOptions
                                                        defines Extra DHCP options
                                                        for a VM.
                                                      properties:
                                                        option:
                                                          description: Option is an
                                                            Integer value from 224-254
                                                            Required.
                                                          type: integer
                                                        value:
                                                          description: Value is a
                                                            String value for the Option
                                                            provided Required.
                                                          type: string
                                                      required:
                                                      - option
                                                      - value
                                                      type: object
                                                    type: array
                                                  tftpServerName:
                                                    description: If specified will
                                                      pass option 66 to interface's
                                                      DHCP server
                                                    type: string
                                                type: object
                                              macAddress:
                                                description: 'Interface MAC address.
                                                  For example: de:ad:00:00:be:af or
                                                  DE-AD-00-00-BE-AF.'
                                                type: string
                                              macvtap:
                                                type: object
                                              masquerade:
                                                type: object
                                              model:
                                                description: 'Interface model. One
                                                  of: e1000, e1000e, ne2k_pci, pcnet,
                                                  rtl8139, virtio. Defaults to virtio.
                                                  TODO:(ihar) switch to enums once
                                                  opengen-api supports them. See:
                                                  https://github.com/kubernetes/kube-openapi/issues/51'
                                                type: string
                                              name:
                                                description: Logical name of the interface
                                                  as well as a reference to the associated
                                                  networks. Must match the Name of
                                                  a Network.
                                                type: string
                                              pciAddress:
                                                description: 'If specified, the virtual
                                                  network interface will be placed
                                                  on the guests pci address with the
                                                  specified PCI address. For example:
                                                  0000:81:01.10'
                                                type: string
                                              ports:
                                                description: List of ports to be forwarded
                                                  to the virtual machine.
                                                items:
                                                  description: Port repesents a port
                                                    to expose from the virtual machine.
                                                    Default protocol TCP. The port
                                                    field is mandatory
                                                  properties:
                                                    name:
                                                      description: If specified, this
                                                        must be an IANA_SVC_NAME and
                                                        unique within the pod. Each
                                                        named port in a pod must have
                                                        a unique name. Name for the
                                                        port that can be referred
                                                        to by services.
                                                      type: string
                                                    port:
                                                      description: Number of port
                                                        to expose for the virtual
                                                        machine. This must be a valid
                                                        port number, 0 < x < 65536.
                                                      format: int32
                                                      type: integer
                                                    protocol:
                                                      description: Protocol for port.
                                                        Must be UDP or TCP. Defaults
                                                        to "TCP".
                                                      type: string
                                                  required:
                                                  - port
                                                  type: object
                                                type: array
                                              slirp:
                                                type: object
                                              sriov:
                                                type: object
                                              tag:
                                                description: If specified, the virtual
                                                  network interface address and its
                                                  tag will be provided to the guest
                                                  via config drive
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        networkInterfaceMultiqueue:
                                          description: If specified, virtual network
                                            interfaces configured with a virtio bus
                                            will also enable the vhost multiqueue
                                            feature for network devices. The number
                                            of queues created depends on additional
                                            factors of the VirtualMachineInstance,
                                            like the number of guest CPUs.
                                          type: boolean
                                        rng:
                                          description: Whether to have random number
                                            generator from host
                                          type: object
                                        useVirtioTransitional:
                                          description: Fall back to legacy virtio
                                            0.9 support if virtio bus is selected
                                            on devices. This is helpful for old machines
                                            like CentOS6 or RHEL6 which do not understand
                                            virtio_non_transitional (virtio 1.0).
                                          type: boolean
                                        watchdog:
                                          description: Watchdog describes a watchdog
                                            device which can be added to the vmi.
                                          properties:
                                            i6300esb:
                                              description: i6300esb watchdog device.
                                              properties:
                                                action:
                                                  description: The action to take.
                                                    Valid values are poweroff, reset,
                                                    shutdown. Defaults to reset.
                                                  type: string
                                              type: object
                                            name:
                                              description: Name of the watchdog.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                      type: object
                                    features:
                                      description: Features like acpi, apic, hyperv,
                                        smm.
                                      properties:
                                        acpi:
                                          description: ACPI enables/disables ACPI
                                            inside the guest. Defaults to enabled.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                        apic:
                                          description: Defaults to the machine type
                                            setting.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                            endOfInterrupt:
                                              description: EndOfInterrupt enables
                                                the end of interrupt notification
                                                in the guest. Defaults to false.
                                              type: boolean
                                          type: object
                                        hyperv:
                                          description: Defaults to the machine type
                                            setting.
                                          properties:
                                            evmcs:
                                              description: EVMCS Speeds up L2 vmexits,
                                                but disables other virtualization
                                                features. Requires vapic. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            frequencies:
                                              description: Frequencies improves the
                                                TSC clock source handling for Hyper-V
                                                on KVM. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            ipi:
                                              description: IPI improves performances
                                                in overcommited environments. Requires
                                                vpindex. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            reenlightenment:
                                              description: Reenlightenment enables
                                                the notifications on TSC frequency
                                                changes. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            relaxed:
                                              description: Relaxed instructs the guest
                                                OS to disable watchdog timeouts. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            reset:
                                              description: Reset enables Hyperv reboot/reset
                                                for the vmi. Requires synic. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            runtime:
                                              description: Runtime improves the time
                                                accounting to improve scheduling in
                                                the guest. Defaults to the machine
                                                type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            spinlocks:
                                              description: Spinlocks allows to configure
                                                the spinlock retry attempts.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                                spinlocks:
                                                  description: Retries indicates the
                                                    number of retries. Must be a value
                                                    greater or equal 4096. Defaults
                                                    to 4096.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            synic:
                                              description: SyNIC enables the Synthetic
                                                Interrupt Controller. Defaults to
                                                the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            synictimer:
                                              description: SyNICTimer enables Synthetic
                                                Interrupt Controller Timers, reducing
                                                CPU load. Defaults to the machine
                                                type setting.
                                              properties:
                                                direct:
                                                  description: Represents if a feature
                                                    is enabled or disabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                enabled:
                                                  type: boolean
                                              type: object
                                            tlbflush:
                                              description: TLBFlush improves performances
                                                in overcommited environments. Requires
                                                vpindex. Defaults to the machine type
                                                setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            vapic:
                                              description: VAPIC improves the paravirtualized
                                                handling of interrupts. Defaults to
                                                the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                            vendorid:
                                              description: VendorID allows setting
                                                the hypervisor vendor id. Defaults
                                                to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                                vendorid:
                                                  description: VendorID sets the hypervisor
                                                    vendor id, visible to the vmi.
                                                    String up to twelve characters.
                                                  type: string
                                              type: object
                                            vpindex:
                                              description: VPIndex enables the Virtual
                                                Processor Index to help windows identifying
                                                virtual processors. Defaults to the
                                                machine type setting.
                                              properties:
                                                enabled:
                                                  description: Enabled determines
                                                    if the feature should be enabled
                                                    or disabled on the guest. Defaults
                                                    to true.
                                                  type: boolean
                                              type: object
                                          type: object
                                        kvm:
                                          description: Configure how KVM presence
                                            is exposed to the guest.
                                          properties:
                                            hidden:
                                              description: Hide the KVM hypervisor
                                                from standard MSR based discovery.
                                                Defaults to false
                                              type: boolean
                                          type: object
                                        pvspinlock:
                                          description: Notify the guest that the host
                                            supports paravirtual spinlocks. For older
                                            kernels this feature should be explicitly
                                            disabled.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                        smm:
                                          description: SMM enables/disables System
                                            Management Mode. TSEG not yet implemented.
                                          properties:
                                            enabled:
                                              description: Enabled determines if the
                                                feature should be enabled or disabled
                                                on the guest. Defaults to true.
                                              type: boolean
                                          type: object
                                      type: object
                                    firmware:
                                      description: Firmware.
                                      properties:
                                        bootloader:
                                          description: Settings to control the bootloader
                                            that is used.
                                          properties:
                                            bios:
                                              description: If set (default), BIOS
                                                will be used.
                                              properties:
                                                useSerial:
                                                  description: If set, the BIOS output
                                                    will be transmitted over serial
                                                  type: boolean
                                              type: object
                                            efi:
                                              description: If set, EFI will be used
                                                instead of BIOS.
                                              properties:
                                                secureBoot:
                                                  description: If set, SecureBoot
                                                    will be enabled and the OVMF roms
                                                    will be swapped for SecureBoot-enabled
                                                    ones. Requires SMM to be enabled.
                                                    Defaults to true
                                                  type: boolean
                                              type: object
                                          type: object
                                        kernelBoot:
                                          description: Settings to set the kernel
                                            for booting.
                                          properties:
                                            container:
                                              description: Container defines the container
                                                that containes kernel artifacts
                                              properties:
                                                image:
                                                  description: Image that container
                                                    initrd / kernel files.
                                                  type: string
                                                imagePullPolicy:
                                                  description: 'Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest
                                                    tag is specified, or IfNotPresent
                                                    otherwise. Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                  type: string
                                                imagePullSecret:
                                                  description: ImagePullSecret is
                                                    the name of the Docker registry
                                                    secret required to pull the image.
                                                    The secret must already exist.
                                                  type: string
                                                initrdPath:
                                                  description: the fully-qualified
                                                    path to the ramdisk image in the
                                                    host OS
                                                  type: string
                                                kernelPath:
                                                  description: The fully-qualified
                                                    path to the kernel image in the
                                                    host OS
                                                  type: string
                                              required:
                                              - image
                                              type: object
                                            kernelArgs:
                                              description: Arguments to be passed
                                                to the kernel at boot time
                                              type: string
                                          type: object
                                        serial:
                                          description: The system-serial-number in
                                            SMBIOS
                                          type: string
                                        uuid:
                                          description: UUID reported by the vmi bios.
                                            Defaults to a random generated uid.
                                          type: string
                                      type: object
                                    ioThreadsPolicy:
                                      description: 'Controls whether or not disks
                                        will share IOThreads. Omitting IOThreadsPolicy
                                        disables use of IOThreads. One of: shared,
                                        auto'
                                      type: string
                                    machine:
                                      description: Machine type.
                                      properties:
                                        type:
                                          description: QEMU machine type is the actual
                                            chipset of the VirtualMachineInstance.
                                          type: string
                                      type: object
                                    memory:
                                      description: Memory allow specifying the VMI
                                        memory features.
                                      properties:
                                        guest:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Guest allows to specifying
                                            the amount of memory which is visible
                                            inside the Guest OS. The Guest must lie
                                            between Requests and Limits from the resources
                                            section. Defaults to the requested memory
                                            in the resources section if not specified.
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        hugepages:
                                          description: Hugepages allow to use hugepages
                                            for the VirtualMachineInstance instead
                                            of regular memory.
                                          properties:
                                            pageSize:
                                              description: PageSize specifies the
                                                hugepage size, for x86_64 architecture
                                                valid values are 1Gi and 2Mi.
                                              type: string
                                          type: object
                                      type: object
                                    resources:
                                      description: Resources describes the Compute
                                        Resources required by this vmi.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Limits describes the maximum
                                            amount of compute resources allowed. Valid
                                            resource keys are "memory" and "cpu".
                                          type: object
                                        overcommitGuestOverhead:
                                          description: Don't ask the scheduler to
                                            take the guest-management overhead into
                                            account. Instead put the overhead only
                                            into the container's memory limit. This
                                            can lead to crashes if all memory is in
                                            use on a node. Defaults to false.
                                          type: boolean
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Requests is a description of
                                            the initial vmi resources. Valid resource
                                            keys are "memory" and "cpu".
                                          type: object
                                      type: object
                                  required:
                                  - devices
                                  type: object
                                evictionStrategy:
                                  description: EvictionStrategy can be set to "LiveMigrate"
                                    if the VirtualMachineInstance should be migrated
                                    instead of shut-off in case of a node drain.
                                  type: string
                                hostname:
                                  description: Specifies the hostname of the vmi If
                                    not specified, the hostname will be set to the
                                    name of the vmi, if dhcp or cloud-init is configured
                                    properly.
                                  type: string
                                livenessProbe:
                                  description: 'Periodic probe of VirtualMachineInstance
                                    liveness. VirtualmachineInstances will be stopped
                                    if the probe fails. Cannot be updated. More info:
                                    https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: One and only one of the following
                                        should be specified. Exec specifies the action
                                        to take, it will be executed on the guest
                                        through the qemu-guest-agent. If the guest
                                        agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent
                                        for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the VirtualMachineInstance
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: 'TCPSocket specifies an action
                                        involving a TCP port. TCP hooks not yet supported
                                        TODO: implement a realistic TCP lifecycle
                                        hook'
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. For exec probes the timeout
                                        fails the probe but does not terminate the
                                        command running on the guest. This means a
                                        blocking command can result in an increasing
                                        load on the guest. A small buffer will be
                                        added to the resulting workload exec probe
                                        to compensate for delays caused by the qemu
                                        guest exec mechanism. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                networks:
                                  description: List of networks that can be attached
                                    to a vm's virtual interface.
                                  items:
                                    description: Network represents a network type
                                      and a resource that should be connected to the
                                      vm.
                                    properties:
                                      multus:
                                        description: Represents the multus cni network.
                                        properties:
                                          default:
                                            description: Select the default network
                                              and add it to the multus-cni.io/default-network
                                              annotation.
                                            type: boolean
                                          networkName:
                                            description: 'References to a NetworkAttachmentDefinition
                                              CRD object. Format: <networkName>, <namespace>/<networkName>.
                                              If namespace is not specified, VMI namespace
                                              is assumed.'
                                            type: string
                                        required:
                                        - networkName
                                        type: object
                                      name:
                                        description: 'Network name. Must be a DNS_LABEL
                                          and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      pod:
                                        description: Represents the stock pod network
                                          interface.
                                        properties:
                                          vmIPv6NetworkCIDR:
                                            description: IPv6 CIDR for the vm network.
                                              Defaults to fd10:0:2::/120 if not specified.
                                            type: string
                                          vmNetworkCIDR:
                                            description: CIDR for vm network. Default
                                              10.0.2.0/24 if not specified.
                                            type: string
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: 'NodeSelector is a selector which must
                                    be true for the vmi to fit on a node. Selector
                                    which must match a node''s labels for the vmi
                                    to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                  type: object
                                priorityClassName:
                                  description: If specified, indicates the pod's priority.
                                    If not specified, the pod priority will be default
                                    or zero if there is no default.
                                  type: string
                                readinessProbe:
                                  description: 'Periodic probe of VirtualMachineInstance
                                    service readiness. VirtualmachineInstances will
                                    be removed from service endpoints if the probe
                                    fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: One and only one of the following
                                        should be specified. Exec specifies the action
                                        to take, it will be executed on the guest
                                        through the qemu-guest-agent. If the guest
                                        agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent
                                        for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the VirtualMachineInstance
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: 'TCPSocket specifies an action
                                        involving a TCP port. TCP hooks not yet supported
                                        TODO: implement a realistic TCP lifecycle
                                        hook'
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. For exec probes the timeout
                                        fails the probe but does not terminate the
                                        command running on the guest. This means a
                                        blocking command can result in an increasing
                                        load on the guest. A small buffer will be
                                        added to the resulting workload exec probe
                                        to compensate for delays caused by the qemu
                                        guest exec mechanism. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                schedulerName:
                                  description: If specified, the VMI will be dispatched
                                    by specified scheduler. If not specified, the
                                    VMI will be dispatched by default scheduler.
                                  type: string
                                startStrategy:
                                  description: StartStrategy can be set to "Paused"
                                    if Virtual Machine should be started in paused
                                    state.
                                  type: string
                                subdomain:
                                  description: If specified, the fully qualified vmi
                                    hostname will be "<hostname>.<subdomain>.<pod
                                    namespace>.svc.<cluster domain>". If not specified,
                                    the vmi will not have a domainname at all. The
                                    DNS entry will resolve to the vmi, no matter if
                                    the vmi itself can pick up a hostname.
                                  type: string
                                terminationGracePeriodSeconds:
                                  description: Grace period observed after signalling
                                    a VirtualMachineInstance to stop after which the
                                    VirtualMachineInstance is force terminated.
                                  format: int64
                                  type: integer
                                tolerations:
                                  description: If toleration is specified, obey all
                                    the toleration rules.
                                  items:
                                    description: The pod this Toleration is attached
                                      to tolerates any taint that matches the triple
                                      <key,value,effect> using the matching operator
                                      <operator>.
                                    properties:
                                      effect:
                                        description: Effect indicates the taint effect
                                          to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule,
                                          PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: Key is the taint key that the
                                          toleration applies to. Empty means match
                                          all taint keys. If the key is empty, operator
                                          must be Exists; this combination means to
                                          match all values and all keys.
                                        type: string
                                      operator:
                                        description: Operator represents a key's relationship
                                          to the value. Valid operators are Exists
                                          and Equal. Defaults to Equal. Exists is
                                          equivalent to wildcard for value, so that
                                          a pod can tolerate all taints of a particular
                                          category.
                                        type: string
                                      tolerationSeconds:
                                        description: TolerationSeconds represents
                                          the period of time the toleration (which
                                          must be of effect NoExecute, otherwise this
                                          field is ignored) tolerates the taint. By
                                          default, it is not set, which means tolerate
                                          the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict
                                          immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: Value is the taint value the
                                          toleration matches to. If the operator is
                                          Exists, the value should be empty, otherwise
                                          just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                volumes:
                                  description: List of volumes that can be mounted
                                    by disks belonging to the vmi.
                                  items:
                                    description: Volume represents a named volume
                                      in a vmi.
                                    properties:
                                      cloudInitConfigDrive:
                                        description: 'CloudInitConfigDrive represents
                                          a cloud-init Config Drive user-data source.
                                          The Config Drive data will be added as a
                                          disk to the vmi. A proper cloud-init installation
                                          is required inside the guest. More info:
                                          https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html'
                                        properties:
                                          networkData:
                                            description: NetworkData contains config
                                              drive inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains
                                              config drive cloud-init networkdata
                                              as a base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references
                                              a k8s secret that contains config drive
                                              networkdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretRef:
                                            description: UserDataSecretRef references
                                              a k8s secret that contains config drive
                                              userdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          userData:
                                            description: UserData contains config
                                              drive inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains config
                                              drive cloud-init userdata as a base64
                                              encoded string.
                                            type: string
                                        type: object
                                      cloudInitNoCloud:
                                        description: 'CloudInitNoCloud represents
                                          a cloud-init NoCloud user-data source. The
                                          NoCloud data will be added as a disk to
                                          the vmi. A proper cloud-init installation
                                          is required inside the guest. More info:
                                          http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                                        properties:
                                          networkData:
                                            description: NetworkData contains NoCloud
                                              inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains
                                              NoCloud cloud-init networkdata as a
                                              base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references
                                              a k8s secret that contains NoCloud networkdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretRef:
                                            description: UserDataSecretRef references
                                              a k8s secret that contains NoCloud userdata.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          userData:
                                            description: UserData contains NoCloud
                                              inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains NoCloud
                                              cloud-init userdata as a base64 encoded
                                              string.
                                            type: string
                                        type: object
                                      configMap:
                                        description: 'ConfigMapSource represents a
                                          reference to a ConfigMap in the same namespace.
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or it's keys must be defined
                                            type: boolean
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      containerDisk:
                                        description: 'ContainerDisk references a docker
                                          image, embedding a qcow or raw disk. More
                                          info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                                        properties:
                                          image:
                                            description: Image is the name of the
                                              image with the embedded disk.
                                            type: string
                                          imagePullPolicy:
                                            description: 'Image pull policy. One of
                                              Always, Never, IfNotPresent. Defaults
                                              to Always if :latest tag is specified,
                                              or IfNotPresent otherwise. Cannot be
                                              updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                            type: string
                                          imagePullSecret:
                                            description: ImagePullSecret is the name
                                              of the Docker registry secret required
                                              to pull the image. The secret must already
                                              exist.
                                            type: string
                                          path:
                                            description: Path defines the path to
                                              disk file in the container
                                            type: string
                                        required:
                                        - image
                                        type: object
                                      dataVolume:
                                        description: DataVolume represents the dynamic
                                          creation a PVC for this volume as well as
                                          the process of populating that PVC with
                                          a disk image.
                                        properties:
                                          hotpluggable:
                                            description: Hotpluggable indicates whether
                                              the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          name:
                                            description: Name represents the name
                                              of the DataVolume in the same namespace
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      downwardAPI:
                                        description: DownwardAPI represents downward
                                          API about the pod that should populate this
                                          volume
                                        properties:
                                          fields:
                                            description: Fields is a list of downward
                                              API volume file
                                            items:
                                              description: DownwardAPIVolumeFile represents
                                                information to create the file containing
                                                the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name and namespace are
                                                    supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the
                                                        schema the FieldPath is written
                                                        in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field
                                                        to select in the specified
                                                        API version.
                                                      type: string
                                                  required:
                                                  - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                mode:
                                                  description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file, must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created. Must not be absolute
                                                    or contain the ''..'' path. Must
                                                    be utf-8 encoded. The first item
                                                    of the relative path must not
                                                    start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: 'Selects a resource
                                                    of the container: only resources
                                                    limits and requests (limits.cpu,
                                                    limits.memory, requests.cpu and
                                                    requests.memory) are currently
                                                    supported.'
                                                  properties:
                                                    containerName:
                                                      description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: Specifies the output
                                                        format of the exposed resources,
                                                        defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource
                                                        to select'
                                                      type: string
                                                  required:
                                                  - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              required:
                                              - path
                                              type: object
                                            type: array
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                      downwardMetrics:
                                        description: DownwardMetrics adds a very small
                                          disk to VMIs which contains a limited view
                                          of host and guest metrics. The disk content
                                          is compatible with vhostmd (https://github.com/vhostmd/vhostmd)
                                          and vm-dump-metrics.
                                        type: object
                                      emptyDisk:
                                        description: 'EmptyDisk represents a temporary
                                          disk which shares the vmis lifecycle. More
                                          info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                                        properties:
                                          capacity:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Capacity of the sparse disk.
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - capacity
                                        type: object
                                      ephemeral:
                                        description: Ephemeral is a special volume
                                          source that "wraps" specified source and
                                          provides copy-on-write image on top of it.
                                        properties:
                                          persistentVolumeClaim:
                                            description: 'PersistentVolumeClaimVolumeSource
                                              represents a reference to a PersistentVolumeClaim
                                              in the same namespace. Directly attached
                                              to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            properties:
                                              claimName:
                                                description: 'claimName is the name
                                                  of a PersistentVolumeClaim in the
                                                  same namespace as the pod using
                                                  this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                type: string
                                              readOnly:
                                                description: readOnly Will force the
                                                  ReadOnly setting in VolumeMounts.
                                                  Default false.
                                                type: boolean
                                            required:
                                            - claimName
                                            type: object
                                        type: object
                                      hostDisk:
                                        description: HostDisk represents a disk created
                                          on the cluster level
                                        properties:
                                          capacity:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Capacity of the sparse disk
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          path:
                                            description: The path to HostDisk image
                                              located on the cluster
                                            type: string
                                          shared:
                                            description: Shared indicate whether the
                                              path is shared between nodes
                                            type: boolean
                                          type:
                                            description: Contains information if disk.img
                                              exists or should be created allowed
                                              options are 'Disk' and 'DiskOrCreate'
                                            type: string
                                        required:
                                        - path
                                        - type
                                        type: object
                                      name:
                                        description: 'Volume''s name. Must be a DNS_LABEL
                                          and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      persistentVolumeClaim:
                                        description: 'PersistentVolumeClaimVolumeSource
                                          represents a reference to a PersistentVolumeClaim
                                          in the same namespace. Directly attached
                                          to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          claimName:
                                            description: 'claimName is the name of
                                              a PersistentVolumeClaim in the same
                                              namespace as the pod using this volume.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            type: string
                                          hotpluggable:
                                            description: Hotpluggable indicates whether
                                              the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          readOnly:
                                            description: readOnly Will force the ReadOnly
                                              setting in VolumeMounts. Default false.
                                            type: boolean
                                        required:
                                        - claimName
                                        type: object
                                      secret:
                                        description: 'SecretVolumeSource represents
                                          a reference to a secret data in the same
                                          namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/'
                                        properties:
                                          optional:
                                            description: Specify whether the Secret
                                              or it's keys must be defined
                                            type: boolean
                                          secretName:
                                            description: 'Name of the secret in the
                                              pod''s namespace to use. More info:
                                              https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                            type: string
                                          volumeLabel:
                                            description: The volume label of the resulting
                                              disk inside the VMI. Different bootstrapping
                                              mechanisms require different values.
                                              Typical values are "cidata" (cloud-init),
                                              "config-2" (cloud-init) or "OEMDRV"
                                              (kickstart).
                                            type: string
                                        type: object
                                      serviceAccount:
                                        description: 'ServiceAccountVolumeSource represents
                                          a reference to a service account. There
                                          can only be one volume of this type! More
                                          info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                        properties:
                                          serviceAccountName:
                                            description: 'Name of the service account
                                              in the pod''s namespace to use. More
                                              info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                            type: string
                                        type: object
                                      sysprep:
                                        description: Represents a Sysprep volume source.
                                        properties:
                                          configMap:
                                            description: ConfigMap references a ConfigMap
                                              that contains Sysprep answer file named
                                              autounattend.xml that should be attached
                                              as disk of CDROM type.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secret:
                                            description: Secret references a k8s Secret
                                              that contains Sysprep answer file named
                                              autounattend.xml that should be attached
                                              as disk of CDROM type.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                              required:
                              - domain
                              type: object
                          type: object
                      required:
                      - template
                      type: object
                  type: object
              type: object
            status:
              description: KubevirtMachineStatus defines the observed state of KubevirtMachine.
              properties:
                addresses:
                  description: Addresses contains the associated addresses for the
                    machine.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the KubevirtMachine.
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                loadBalancerConfigured:
                  description: LoadBalancerConfigured denotes that the machine has
                    been added to the load balancer
                  type: boolean
                nodeupdated:
                  description: NodeUpdated denotes that the ProviderID is updated
                    on Node of this KubevirtMachine
                  type: boolean
                ready:
                  description: Ready denotes that the machine is ready
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1alpha1
    name: kubevirtmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubevirtMachineTemplate
      listKind: KubevirtMachineTemplateList
      plural: kubevirtmachinetemplates
      singular: kubevirtmachinetemplate
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachineTemplate is the Schema for the kubevirtmachinetemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineTemplateSpec defines the desired state of
                KubevirtMachineTemplate.
              properties:
                template:
                  description: KubevirtMachineTemplateResource describes the data
                    needed to create a KubevirtMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        providerID:
                          description: ProviderID TBD what to use for Kubevirt
                          type: string
                        virtualMachineTemplate:
                          description: VirtualMachineTemplateSpec defines the desired
                            state of the kubevirt VM.
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineSpec contains the VirtualMachine
                                specification.
                              properties:
                                dataVolumeTemplates:
                                  description: dataVolumeTemplates is a list of dataVolumes
                                    that the VirtualMachineInstance template can reference.
                                    DataVolumes in this list are dynamically created
                                    for the VirtualMachine and are tied to the VirtualMachine's
                                    life-cycle.
                                  items:
                                    nullable: true
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        nullable: true
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      spec:
                                        description: DataVolumeSpec contains the DataVolume
                                          specification.
                                        properties:
                                          checkpoints:
                                            description: Checkpoints is a list of
                                              DataVolumeCheckpoints, representing
                                              stages in a multistage import.
                                            items:
                                              description: DataVolumeCheckpoint defines
                                                a stage in a warm migration.
                                              properties:
                                                current:
                                                  description: Current is the identifier
                                                    of the snapshot created for this
                                                    checkpoint.
                                                  type: string
                                                previous:
                                                  description: Previous is the identifier
                                                    of the snapshot from the previous
                                                    checkpoint.
                                                  type: string
                                              required:
                                              - current
                                              - previous
                                              type: object
                                            type: array
                                          contentType:
                                            description: 'DataVolumeContentType options:
                                              "kubevirt", "archive"'
                                            enum:
                                            - kubevirt
                                            - archive
                                            type: string
                                          finalCheckpoint:
                                            description: FinalCheckpoint indicates
                                              whether the current DataVolumeCheckpoint
                                              is the final checkpoint.
                                            type: boolean
                                          preallocation:
                                            description: Preallocation controls whether
                                              storage for DataVolumes should be allocated
                                              in advance.
                                            type: boolean
                                          priorityClassName:
                                            description: PriorityClassName for Importer,
                                              Cloner and Uploader pod
                                            type: string
                                          pvc:
                                            description: PVC is the PVC specification
                                            properties:
                                              accessModes:
                                                description: 'accessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'dataSource field can
                                                  be used to specify either: * An
                                                  existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external
                                                  controller can support the specified
                                                  data source, it will create a new
                                                  volume based on the contents of
                                                  the specified data source. If the
                                                  AnyVolumeDataSource feature gate
                                                  is enabled, this field will always
                                                  have the same contents as the DataSourceRef
                                                  field.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              dataSourceRef:
                                                description: 'dataSourceRef specifies
                                                  the object from which to populate
                                                  the volume with data, if a non-empty
                                                  volume is desired. This may be any
                                                  local object from a non-empty API
                                                  group (non core object) or a PersistentVolumeClaim
                                                  object. When this field is specified,
                                                  volume binding will only succeed
                                                  if the type of the specified object
                                                  matches some installed volume populator
                                                  or dynamic provisioner. This field
                                                  will replace the functionality of
                                                  the DataSource field and as such
                                                  if both fields are non-empty, they
                                                  must have the same value. For backwards
                                                  compatibility, both fields (DataSource
                                                  and DataSourceRef) will be set to
                                                  the same value automatically if
                                                  one of them is empty and the other
                                                  is non-empty. There are two important
                                                  differences between DataSource and
                                                  DataSourceRef: * While DataSource
                                                  only allows two specific types of
                                                  objects, DataSourceRef allows any
                                                  non-core object, as well as PersistentVolumeClaim
                                                  objects. * While DataSource ignores
                                                  disallowed values (dropping them),
                                                  DataSourceRef preserves all values,
                                                  and generates an error if a disallowed
                                                  value is specified. (Beta) Using
                                                  this field requires the AnyVolumeDataSource
                                                  feature gate to be enabled.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resources:
                                                description: 'resources represents
                                                  the minimum resources the volume
                                                  should have. If RecoverVolumeExpansionFailure
                                                  feature is enabled users are allowed
                                                  to specify resource requirements
                                                  that are lower than previous value
                                                  but must still be higher than capacity
                                                  recorded in the status field of
                                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: selector is a label query
                                                  over volumes to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              storageClassName:
                                                description: 'storageClassName is
                                                  the name of the StorageClass required
                                                  by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: volumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                          source:
                                            description: Source is the src of the
                                              data for the requested DataVolume
                                            properties:
                                              blank:
                                                description: DataVolumeBlankImage
                                                  provides the parameters to create
                                                  a new raw blank image for the PVC
                                                type: object
                                              http:
                                                description: DataVolumeSourceHTTP
                                                  can be either an http or https endpoint,
                                                  with an optional basic auth user
                                                  name and password, and an optional
                                                  configmap containing additional
                                                  CAs
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  extraHeaders:
                                                    description: ExtraHeaders is a
                                                      list of strings containing extra
                                                      headers to include with HTTP
                                                      transfer requests
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretExtraHeaders:
                                                    description: SecretExtraHeaders
                                                      is a list of Secret references,
                                                      each containing an extra HTTP
                                                      header that may include sensitive
                                                      information
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretRef:
                                                    description: SecretRef A Secret
                                                      reference, the secret should
                                                      contain accessKeyId (user name)
                                                      base64 encoded, and secretKey
                                                      (password) also base64 encoded
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the http(s) endpoint
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              imageio:
                                                description: DataVolumeSourceImageIO
                                                  provides the parameters to create
                                                  a Data Volume from an imageio source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the CA cert
                                                    type: string
                                                  diskId:
                                                    description: DiskID provides id
                                                      of a disk to be imported
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the ovirt-engine
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the ovirt-engine
                                                    type: string
                                                required:
                                                - diskId
                                                - url
                                                type: object
                                              pvc:
                                                description: DataVolumeSourcePVC provides
                                                  the parameters to create a Data
                                                  Volume from an existing PVC
                                                properties:
                                                  name:
                                                    description: The name of the source
                                                      PVC
                                                    type: string
                                                  namespace:
                                                    description: The namespace of
                                                      the source PVC
                                                    type: string
                                                required:
                                                - name
                                                - namespace
                                                type: object
                                              registry:
                                                description: DataVolumeSourceRegistry
                                                  provides the parameters to create
                                                  a Data Volume from an registry source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides
                                                      a reference to the Registry
                                                      certs
                                                    type: string
                                                  imageStream:
                                                    description: ImageStream is the
                                                      name of image stream for import
                                                    type: string
                                                  pullMethod:
                                                    description: PullMethod can be
                                                      either "pod" (default import),
                                                      or "node" (node docker cache
                                                      based import)
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the Registry source
                                                    type: string
                                                  url:
                                                    description: 'URL is the url of
                                                      the registry source (starting
                                                      with the scheme: docker, oci-archive)'
                                                    type: string
                                                type: object
                                              s3:
                                                description: DataVolumeSourceS3 provides
                                                  the parameters to create a Data
                                                  Volume from an S3 source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is
                                                      a configmap reference, containing
                                                      a Certificate Authority(CA)
                                                      public key, and a base64 encoded
                                                      pem certificate
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      the secret reference needed
                                                      to access the S3 source
                                                    type: string
                                                  url:
                                                    description: URL is the url of
                                                      the S3 source
                                                    type: string
                                                required:
                                                - url
                                                type: object
                                              upload:
                                                description: DataVolumeSourceUpload
                                                  provides the parameters to create
                                                  a Data Volume by uploading the source
                                                type: object
                                              vddk:
                                                description: DataVolumeSourceVDDK
                                                  provides the parameters to create
                                                  a Data Volume from a Vmware source
                                                properties:
                                                  backingFile:
                                                    description: BackingFile is the
                                                      path to the virtual hard disk
                                                      to migrate from vCenter/ESXi
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides
                                                      a reference to a secret containing
                                                      the username and password needed
                                                      to access the vCenter or ESXi
                                                      host
                                                    type: string
                                                  thumbprint:
                                                    description: Thumbprint is the
                                                      certificate thumbprint of the
                                                      vCenter or ESXi host
                                                    type: string
                                                  url:
                                                    description: URL is the URL of
                                                      the vCenter or ESXi host with
                                                      the VM to migrate
                                                    type: string
                                                  uuid:
                                                    description: UUID is the UUID
                                                      of the virtual machine that
                                                      the backing file is attached
                                                      to in vCenter/ESXi
                                                    type: string
                                                type: object
                                            type: object
                                          sourceRef:
                                            description: SourceRef is an indirect
                                              reference to the source of data for
                                              the requested DataVolume
                                            properties:
                                              kind:
                                                description: The kind of the source
                                                  reference, currently only "DataSource"
                                                  is supported
                                                type: string
                                              name:
                                                description: The name of the source
                                                  reference
                                                type: string
                                              namespace:
                                                description: The namespace of the
                                                  source reference, defaults to the
                                                  DataVolume namespace
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          storage:
                                            description: Storage is the requested
                                              storage specification
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  * An existing custom resource that
                                                  implements data population (Alpha)
                                                  In order to use custom resource
                                                  types that implement data population,
                                                  the AnyVolumeDataSource feature
                                                  gate must be enabled. If the provisioner
                                                  or an external controller can support
                                                  the specified data source, it will
                                                  create a new volume based on the
                                                  contents of the specified data source.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                        type: object
                                      status:
                                        description: DataVolumeTemplateDummyStatus
                                          is here simply for backwards compatibility
                                          with a previous API.
                                        nullable: true
                                        type: object
                                    required:
                                    - spec
                                    type: object
                                  type: array
                                flavor:
                                  description: FlavorMatcher references a flavor that
                                    is used to fill fields in Template
                                  properties:
                                    kind:
                                      description: 'Kind specifies which flavor resource
                                        is referenced. Allowed values are: "VirtualMachineFlavor"
                                        and "VirtualMachineClusterFlavor". If not
                                        specified, "VirtualMachineClusterFlavor" is
                                        used by default.'
                                      type: string
                                    name:
                                      description: Name is the name of the VirtualMachineFlavor
                                        or VirtualMachineClusterFlavor
                                      type: string
                                    profile:
                                      description: Profile is the name of a custom
                                        profile in the flavor. If left empty, the
                                        default profile is used.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                runStrategy:
                                  description: Running state indicates the requested
                                    running state of the VirtualMachineInstance mutually
                                    exclusive with Running
                                  type: string
                                running:
                                  description: Running controls whether the associatied
                                    VirtualMachineInstance is created or not Mutually
                                    exclusive with RunStrategy
                                  type: boolean
                                template:
                                  description: Template is the direct specification
                                    of VirtualMachineInstance
                                  properties:
                                    metadata:
                                      nullable: true
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: VirtualMachineInstance Spec contains
                                        the VirtualMachineInstance specification.
                                      properties:
                                        accessCredentials:
                                          description: Specifies a set of public keys
                                            to inject into the vm guest
                                          items:
                                            description: AccessCredential represents
                                              a credential source that can be used
                                              to authorize remote access to the vm
                                              guest Only one of its members may be
                                              specified.
                                            properties:
                                              sshPublicKey:
                                                description: SSHPublicKey represents
                                                  the source and method of applying
                                                  a ssh public key into a guest virtual
                                                  machine.
                                                properties:
                                                  propagationMethod:
                                                    description: PropagationMethod
                                                      represents how the public key
                                                      is injected into the vm guest.
                                                    properties:
                                                      configDrive:
                                                        description: ConfigDrivePropagation
                                                          means that the ssh public
                                                          keys are injected into the
                                                          VM using metadata using
                                                          the configDrive cloud-init
                                                          provider
                                                        type: object
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means ssh public keys are
                                                          dynamically injected into
                                                          the vm at runtime via the
                                                          qemu guest agent. This feature
                                                          requires the qemu guest
                                                          agent to be running within
                                                          the guest.
                                                        properties:
                                                          users:
                                                            description: Users represents
                                                              a list of guest users
                                                              that should have the
                                                              ssh public keys added
                                                              to their authorized_keys
                                                              file.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: set
                                                        required:
                                                        - users
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the public keys are pulled
                                                      from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                              userPassword:
                                                description: UserPassword represents
                                                  the source and method for applying
                                                  a guest user's password
                                                properties:
                                                  propagationMethod:
                                                    description: propagationMethod
                                                      represents how the user passwords
                                                      are injected into the vm guest.
                                                    properties:
                                                      qemuGuestAgent:
                                                        description: QemuGuestAgentAccessCredentailPropagation
                                                          means passwords are dynamically
                                                          injected into the vm at
                                                          runtime via the qemu guest
                                                          agent. This feature requires
                                                          the qemu guest agent to
                                                          be running within the guest.
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents
                                                      where the user passwords are
                                                      pulled from
                                                    properties:
                                                      secret:
                                                        description: Secret means
                                                          that the access credential
                                                          is pulled from a kubernetes
                                                          secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName
                                                              represents the name
                                                              of the secret in the
                                                              VMI's namespace
                                                            type: string
                                                        required:
                                                        - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                - propagationMethod
                                                - source
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        affinity:
                                          description: If affinity is specifies, obey
                                            all the affinity rules
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - preference
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      type: array
                                                  required:
                                                  - nodeSelectorTerms
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              type: object
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  type: object
                                                                type: array
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            items:
                                                              type: string
                                                            type: array
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                        required:
                                                        - topologyKey
                                                        type: object
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    type: object
                                                  type: array
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  type: array
                                              type: object
                                          type: object
                                        dnsConfig:
                                          description: Specifies the DNS parameters
                                            of a pod. Parameters specified here will
                                            be merged to the generated DNS configuration
                                            based on DNSPolicy.
                                          properties:
                                            nameservers:
                                              description: A list of DNS name server
                                                IP addresses. This will be appended
                                                to the base nameservers generated
                                                from DNSPolicy. Duplicated nameservers
                                                will be removed.
                                              items:
                                                type: string
                                              type: array
                                            options:
                                              description: A list of DNS resolver
                                                options. This will be merged with
                                                the base options generated from DNSPolicy.
                                                Duplicated entries will be removed.
                                                Resolution options given in Options
                                                will override those that appear in
                                                the base DNSPolicy.
                                              items:
                                                description: PodDNSConfigOption defines
                                                  DNS resolver options of a pod.
                                                properties:
                                                  name:
                                                    description: Required.
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            searches:
                                              description: A list of DNS search domains
                                                for host-name lookup. This will be
                                                appended to the base search paths
                                                generated from DNSPolicy. Duplicated
                                                search paths will be removed.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        dnsPolicy:
                                          description: Set DNS policy for the pod.
                                            Defaults to "ClusterFirst". Valid values
                                            are 'ClusterFirstWithHostNet', 'ClusterFirst',
                                            'Default' or 'None'. DNS parameters given
                                            in DNSConfig will be merged with the policy
                                            selected with DNSPolicy. To have DNS options
                                            set along with hostNetwork, you have to
                                            specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                                          type: string
                                        domain:
                                          description: Specification of the desired
                                            behavior of the VirtualMachineInstance
                                            on the host.
                                          properties:
                                            chassis:
                                              description: Chassis specifies the chassis
                                                info passed to the domain.
                                              properties:
                                                asset:
                                                  type: string
                                                manufacturer:
                                                  type: string
                                                serial:
                                                  type: string
                                                sku:
                                                  type: string
                                                version:
                                                  type: string
                                              type: object
                                            clock:
                                              description: Clock sets the clock and
                                                timers of the vmi.
                                              properties:
                                                timer:
                                                  description: Timer specifies whih
                                                    timers are attached to the vmi.
                                                  properties:
                                                    hpet:
                                                      description: HPET (High Precision
                                                        Event Timer) - multiple timers
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "merge", "discard".
                                                          type: string
                                                      type: object
                                                    hyperv:
                                                      description: Hyperv (Hypervclock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For windows guests.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    kvm:
                                                      description: "KVM \t(KVM clock)
                                                        - lets guests read the host’s
                                                        wall clock time (paravirtualized).
                                                        For linux guests."
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    pit:
                                                      description: PIT (Programmable
                                                        Interval Timer) - a timer
                                                        with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup", "discard".
                                                          type: string
                                                      type: object
                                                    rtc:
                                                      description: RTC (Real Time
                                                        Clock) - a continuously running
                                                        timer with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: Enabled set
                                                            to false makes sure that
                                                            the machine type or a
                                                            preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: TickPolicy
                                                            determines what happens
                                                            when QEMU misses a deadline
                                                            for injecting a tick to
                                                            the guest. One of "delay",
                                                            "catchup".
                                                          type: string
                                                        track:
                                                          description: Track the guest
                                                            or the wall clock.
                                                          type: string
                                                      type: object
                                                  type: object
                                                timezone:
                                                  description: Timezone sets the guest
                                                    clock to the specified timezone.
                                                    Zone name follows the TZ environment
                                                    variable format (e.g. 'America/New_York').
                                                  type: string
                                                utc:
                                                  description: UTC sets the guest
                                                    clock to UTC on each boot. If
                                                    an offset is specified, guest
                                                    changes to the clock will be kept
                                                    during reboots and are not reset.
                                                  properties:
                                                    offsetSeconds:
                                                      description: OffsetSeconds specifies
                                                        an offset in seconds, relative
                                                        to UTC. If set, guest changes
                                                        to the clock will be kept
                                                        during reboots and not reset.
                                                      type: integer
                                                  type: object
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            cpu:
                                              description: CPU allow specified the
                                                detailed CPU topology inside the vmi.
                                              properties:
                                                cores:
                                                  description: Cores specifies the
                                                    number of cores inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                dedicatedCpuPlacement:
                                                  description: DedicatedCPUPlacement
                                                    requests the scheduler to place
                                                    the VirtualMachineInstance on
                                                    a node with enough dedicated pCPUs
                                                    and pin the vCPUs to it.
                                                  type: boolean
                                                features:
                                                  description: Features specifies
                                                    the CPU features list inside the
                                                    VMI.
                                                  items:
                                                    description: CPUFeature allows
                                                      specifying a CPU feature.
                                                    properties:
                                                      name:
                                                        description: Name of the CPU
                                                          feature
                                                        type: string
                                                      policy:
                                                        description: 'Policy is the
                                                          CPU feature attribute which
                                                          can have the following attributes:
                                                          force    - The virtual CPU
                                                          will claim the feature is
                                                          supported regardless of
                                                          it being supported by host
                                                          CPU. require  - Guest creation
                                                          will fail unless the feature
                                                          is supported by the host
                                                          CPU or the hypervisor is
                                                          able to emulate it. optional
                                                          - The feature will be supported
                                                          by virtual CPU if and only
                                                          if it is supported by host
                                                          CPU. disable  - The feature
                                                          will not be supported by
                                                          virtual CPU. forbid   -
                                                          Guest creation will fail
                                                          if the feature is supported
                                                          by host CPU. Defaults to
                                                          require'
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                isolateEmulatorThread:
                                                  description: IsolateEmulatorThread
                                                    requests one more dedicated pCPU
                                                    to be allocated for the VMI to
                                                    place the emulator thread on it.
                                                  type: boolean
                                                model:
                                                  description: Model specifies the
                                                    CPU model inside the VMI. List
                                                    of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                                    It is possible to specify special
                                                    cases like "host-passthrough"
                                                    to get the same CPU as the node
                                                    and "host-model" to get CPU closest
                                                    to the node one. Defaults to host-model.
                                                  type: string
                                                numa:
                                                  description: NUMA allows specifying
                                                    settings for the guest NUMA topology
                                                  properties:
                                                    guestMappingPassthrough:
                                                      description: GuestMappingPassthrough
                                                        will create an efficient guest
                                                        topology based on host CPUs
                                                        exclusively assigned to a
                                                        pod. The created topology
                                                        ensures that memory and CPUs
                                                        on the virtual numa nodes
                                                        never cross boundaries of
                                                        host numa nodes.
                                                      type: object
                                                  type: object
                                                realtime:
                                                  description: Realtime instructs
                                                    the virt-launcher to tune the
                                                    VMI for lower latency, optional
                                                    for real time workloads
                                                  properties:
                                                    mask:
                                                      description: 'Mask defines the
                                                        vcpu mask expression that
                                                        defines which vcpus are used
                                                        for realtime. Format matches
                                                        libvirt''s expressions. Example:
                                                        "0-3,^1","0,2,3","2-3"'
                                                      type: string
                                                  type: object
                                                sockets:
                                                  description: Sockets specifies the
                                                    number of sockets inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                                threads:
                                                  description: Threads specifies the
                                                    number of threads inside the vmi.
                                                    Must be a value greater or equal
                                                    1.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            devices:
                                              description: Devices allows adding disks,
                                                network interfaces, and others
                                              properties:
                                                autoattachGraphicsDevice:
                                                  description: Whether to attach the
                                                    default graphics device or not.
                                                    VNC will not be available if set
                                                    to false. Defaults to true.
                                                  type: boolean
                                                autoattachMemBalloon:
                                                  description: Whether to attach the
                                                    Memory balloon device with default
                                                    period. Period can be adjusted
                                                    in virt-config. Defaults to true.
                                                  type: boolean
                                                autoattachPodInterface:
                                                  description: Whether to attach a
                                                    pod network interface. Defaults
                                                    to true.
                                                  type: boolean
                                                autoattachSerialConsole:
                                                  description: Whether to attach the
                                                    default serial console or not.
                                                    Serial console access will not
                                                    be available if set to false.
                                                    Defaults to true.
                                                  type: boolean
                                                blockMultiQueue:
                                                  description: Whether or not to enable
                                                    virtio multi-queue for block devices.
                                                    Defaults to false.
                                                  type: boolean
                                                clientPassthrough:
                                                  description: To configure and access
                                                    client devices such as redirecting
                                                    USB
                                                  type: object
                                                disableHotplug:
                                                  description: DisableHotplug disabled
                                                    the ability to hotplug disks.
                                                  type: boolean
                                                disks:
                                                  description: Disks describes disks,
                                                    cdroms, floppy and luns which
                                                    are connected to the vmi.
                                                  items:
                                                    properties:
                                                      blockSize:
                                                        description: If specified,
                                                          the virtual disk will be
                                                          presented with the given
                                                          block sizes.
                                                        properties:
                                                          custom:
                                                            description: CustomBlockSize
                                                              represents the desired
                                                              logical and physical
                                                              block size for a VM
                                                              disk.
                                                            properties:
                                                              logical:
                                                                type: integer
                                                              physical:
                                                                type: integer
                                                            required:
                                                            - logical
                                                            - physical
                                                            type: object
                                                          matchVolume:
                                                            description: Represents
                                                              if a feature is enabled
                                                              or disabled.
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if the
                                                                  feature should be
                                                                  enabled or disabled
                                                                  on the guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                            type: object
                                                        type: object
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each disk
                                                          or interface that has a
                                                          boot order must have a unique
                                                          value. Disks without a boot
                                                          order are not tried if a
                                                          disk with a boot order exists.
                                                        type: integer
                                                      cache:
                                                        description: 'Cache specifies
                                                          which kvm disk cache mode
                                                          should be used. Supported
                                                          values are: CacheNone, CacheWriteThrough.'
                                                        type: string
                                                      cdrom:
                                                        description: Attach a volume
                                                          as a cdrom to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to true.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      dedicatedIOThread:
                                                        description: dedicatedIOThread
                                                          indicates this disk should
                                                          have an exclusive IO Thread.
                                                          Enabling this implies useIOThreads
                                                          = true. Defaults to false.
                                                        type: boolean
                                                      disk:
                                                        description: Attach a volume
                                                          as a disk to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          pciAddress:
                                                            description: 'If specified,
                                                              the virtual disk will
                                                              be placed on the guests
                                                              pci address with the
                                                              specified PCI address.
                                                              For example: 0000:81:01.10'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      floppy:
                                                        description: Attach a volume
                                                          as a floppy to the vmi.
                                                        properties:
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                          tray:
                                                            description: Tray indicates
                                                              if the tray of the device
                                                              is open or closed. Allowed
                                                              values are "open" and
                                                              "closed". Defaults to
                                                              closed.
                                                            type: string
                                                        type: object
                                                      io:
                                                        description: 'IO specifies
                                                          which QEMU disk IO mode
                                                          should be used. Supported
                                                          values are: native, default,
                                                          threads.'
                                                        type: string
                                                      lun:
                                                        description: Attach a volume
                                                          as a LUN to the vmi.
                                                        properties:
                                                          bus:
                                                            description: 'Bus indicates
                                                              the type of disk device
                                                              to emulate. supported
                                                              values: virtio, sata,
                                                              scsi.'
                                                            type: string
                                                          readonly:
                                                            description: ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      serial:
                                                        description: Serial provides
                                                          the ability to specify a
                                                          serial number for the disk
                                                          device.
                                                        type: string
                                                      tag:
                                                        description: If specified,
                                                          disk address and its tag
                                                          will be provided to the
                                                          guest via config drive metadata
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                filesystems:
                                                  description: Filesystems describes
                                                    filesystem which is connected
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      virtiofs:
                                                        description: Virtiofs is supported
                                                        type: object
                                                    required:
                                                    - name
                                                    - virtiofs
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                gpus:
                                                  description: Whether to attach a
                                                    GPU device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        type: string
                                                      name:
                                                        description: Name of the GPU
                                                          device as exposed by a device
                                                          plugin
                                                        type: string
                                                      virtualGPUOptions:
                                                        properties:
                                                          display:
                                                            properties:
                                                              enabled:
                                                                description: Enabled
                                                                  determines if a
                                                                  display addapter
                                                                  backed by a vGPU
                                                                  should be enabled
                                                                  or disabled on the
                                                                  guest. Defaults
                                                                  to true.
                                                                type: boolean
                                                              ramFB:
                                                                description: Enables
                                                                  a boot framebuffer,
                                                                  until the guest
                                                                  OS loads a real
                                                                  GPU driver Defaults
                                                                  to true.
                                                                properties:
                                                                  enabled:
                                                                    description: Enabled
                                                                      determines if
                                                                      the feature
                                                                      should be enabled
                                                                      or disabled
                                                                      on the guest.
                                                                      Defaults to
                                                                      true.
                                                                    type: boolean
                                                                type: object
                                                            type: object
                                                        type: object
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                hostDevices:
                                                  description: Whether to attach a
                                                    host device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        description: DeviceName is
                                                          the resource name of the
                                                          host device exposed by a
                                                          device plugin
                                                        type: string
                                                      name:
                                                        type: string
                                                    required:
                                                    - deviceName
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                inputs:
                                                  description: Inputs describe input
                                                    devices
                                                  items:
                                                    properties:
                                                      bus:
                                                        description: 'Bus indicates
                                                          the bus of input device
                                                          to emulate. Supported values:
                                                          virtio, usb.'
                                                        type: string
                                                      name:
                                                        description: Name is the device
                                                          name
                                                        type: string
                                                      type:
                                                        description: 'Type indicated
                                                          the type of input device.
                                                          Supported values: tablet.'
                                                        type: string
                                                    required:
                                                    - name
                                                    - type
                                                    type: object
                                                  type: array
                                                interfaces:
                                                  description: Interfaces describe
                                                    network interfaces which are added
                                                    to the vmi.
                                                  items:
                                                    properties:
                                                      bootOrder:
                                                        description: BootOrder is
                                                          an integer value > 0, used
                                                          to determine ordering of
                                                          boot devices. Lower values
                                                          take precedence. Each interface
                                                          or disk that has a boot
                                                          order must have a unique
                                                          value. Interfaces without
                                                          a boot order are not tried.
                                                        type: integer
                                                      bridge:
                                                        type: object
                                                      dhcpOptions:
                                                        description: If specified
                                                          the network interface will
                                                          pass additional DHCP options
                                                          to the VMI
                                                        properties:
                                                          bootFileName:
                                                            description: If specified
                                                              will pass option 67
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                          ntpServers:
                                                            description: If specified
                                                              will pass the configured
                                                              NTP server to the VM
                                                              via DHCP option 042.
                                                            items:
                                                              type: string
                                                            type: array
                                                          privateOptions:
                                                            description: 'If specified
                                                              will pass extra DHCP
                                                              options for private
                                                              use, range: 224-254'
                                                            items:
                                                              description: DHCPExtraOptions
                                                                defines Extra DHCP
                                                                options for a VM.
                                                              properties:
                                                                option:
                                                                  description: Option
                                                                    is an Integer
                                                                    value from 224-254
                                                                    Required.
                                                                  type: integer
                                                                value:
                                                                  description: Value
                                                                    is a String value
                                                                    for the Option
                                                                    provided Required.
                                                                  type: string
                                                              required:
                                                              - option
                                                              - value
                                                              type: object
                                                            type: array
                                                          tftpServerName:
                                                            description: If specified
                                                              will pass option 66
                                                              to interface's DHCP
                                                              server
                                                            type: string
                                                        type: object
                                                      macAddress:
                                                        description: 'Interface MAC
                                                          address. For example: de:ad:00:00:be:af
                                                          or DE-AD-00-00-BE-AF.'
                                                        type: string
                                                      macvtap:
                                                        type: object
                                                      masquerade:
                                                        type: object
                                                      model:
                                                        description: 'Interface model.
                                                          One of: e1000, e1000e, ne2k_pci,
                                                          pcnet, rtl8139, virtio.
                                                          Defaults to virtio. TODO:(ihar)
                                                          switch to enums once opengen-api
                                                          supports them. See: https://github.com/kubernetes/kube-openapi/issues/51'
                                                        type: string
                                                      name:
                                                        description: Logical name
                                                          of the interface as well
                                                          as a reference to the associated
                                                          networks. Must match the
                                                          Name of a Network.
                                                        type: string
                                                      pciAddress:
                                                        description: 'If specified,
                                                          the virtual network interface
                                                          will be placed on the guests
                                                          pci address with the specified
                                                          PCI address. For example:
                                                          0000:81:01.10'
                                                        type: string
                                                      ports:
                                                        description: List of ports
                                                          to be forwarded to the virtual
                                                          machine.
                                                        items:
                                                          description: Port repesents
                                                            a port to expose from
                                                            the virtual machine. Default
                                                            protocol TCP. The port
                                                            field is mandatory
                                                          properties:
                                                            name:
                                                              description: If specified,
                                                                this must be an IANA_SVC_NAME
                                                                and unique within
                                                                the pod. Each named
                                                                port in a pod must
                                                                have a unique name.
                                                                Name for the port
                                                                that can be referred
                                                                to by services.
                                                              type: string
                                                            port:
                                                              description: Number
                                                                of port to expose
                                                                for the virtual machine.
                                                                This must be a valid
                                                                port number, 0 < x
                                                                < 65536.
                                                              format: int32
                                                              type: integer
                                                            protocol:
                                                              description: Protocol
                                                                for port. Must be
                                                                UDP or TCP. Defaults
                                                                to "TCP".
                                                              type: string
                                                          required:
                                                          - port
                                                          type: object
                                                        type: array
                                                      slirp:
                                                        type: object
                                                      sriov:
                                                        type: object
                                                      tag:
                                                        description: If specified,
                                                          the virtual network interface
                                                          address and its tag will
                                                          be provided to the guest
                                                          via config drive
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                networkInterfaceMultiqueue:
                                                  description: If specified, virtual
                                                    network interfaces configured
                                                    with a virtio bus will also enable
                                                    the vhost multiqueue feature for
                                                    network devices. The number of
                                                    queues created depends on additional
                                                    factors of the VirtualMachineInstance,
                                                    like the number of guest CPUs.
                                                  type: boolean
                                                rng:
                                                  description: Whether to have random
                                                    number generator from host
                                                  type: object
                                                useVirtioTransitional:
                                                  description: Fall back to legacy
                                                    virtio 0.9 support if virtio bus
                                                    is selected on devices. This is
                                                    helpful for old machines like
                                                    CentOS6 or RHEL6 which do not
                                                    understand virtio_non_transitional
                                                    (virtio 1.0).
                                                  type: boolean
                                                watchdog:
                                                  description: Watchdog describes
                                                    a watchdog device which can be
                                                    added to the vmi.
                                                  properties:
                                                    i6300esb:
                                                      description: i6300esb watchdog
                                                        device.
                                                      properties:
                                                        action:
                                                          description: The action
                                                            to take. Valid values
                                                            are poweroff, reset, shutdown.
                                                            Defaults to reset.
                                                          type: string
                                                      type: object
                                                    name:
                                                      description: Name of the watchdog.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                              type: object
                                            features:
                                              description: Features like acpi, apic,
                                                hyperv, smm.
                                              properties:
                                                acpi:
                                                  description: ACPI enables/disables
                                                    ACPI inside the guest. Defaults
                                                    to enabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                apic:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                    endOfInterrupt:
                                                      description: EndOfInterrupt
                                                        enables the end of interrupt
                                                        notification in the guest.
                                                        Defaults to false.
                                                      type: boolean
                                                  type: object
                                                hyperv:
                                                  description: Defaults to the machine
                                                    type setting.
                                                  properties:
                                                    evmcs:
                                                      description: EVMCS Speeds up
                                                        L2 vmexits, but disables other
                                                        virtualization features. Requires
                                                        vapic. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    frequencies:
                                                      description: Frequencies improves
                                                        the TSC clock source handling
                                                        for Hyper-V on KVM. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    ipi:
                                                      description: IPI improves performances
                                                        in overcommited environments.
                                                        Requires vpindex. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reenlightenment:
                                                      description: Reenlightenment
                                                        enables the notifications
                                                        on TSC frequency changes.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    relaxed:
                                                      description: Relaxed instructs
                                                        the guest OS to disable watchdog
                                                        timeouts. Defaults to the
                                                        machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    reset:
                                                      description: Reset enables Hyperv
                                                        reboot/reset for the vmi.
                                                        Requires synic. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    runtime:
                                                      description: Runtime improves
                                                        the time accounting to improve
                                                        scheduling in the guest. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    spinlocks:
                                                      description: Spinlocks allows
                                                        to configure the spinlock
                                                        retry attempts.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        spinlocks:
                                                          description: Retries indicates
                                                            the number of retries.
                                                            Must be a value greater
                                                            or equal 4096. Defaults
                                                            to 4096.
                                                          format: int32
                                                          type: integer
                                                      type: object
                                                    synic:
                                                      description: SyNIC enables the
                                                        Synthetic Interrupt Controller.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    synictimer:
                                                      description: SyNICTimer enables
                                                        Synthetic Interrupt Controller
                                                        Timers, reducing CPU load.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        direct:
                                                          description: Represents
                                                            if a feature is enabled
                                                            or disabled.
                                                          properties:
                                                            enabled:
                                                              description: Enabled
                                                                determines if the
                                                                feature should be
                                                                enabled or disabled
                                                                on the guest. Defaults
                                                                to true.
                                                              type: boolean
                                                          type: object
                                                        enabled:
                                                          type: boolean
                                                      type: object
                                                    tlbflush:
                                                      description: TLBFlush improves
                                                        performances in overcommited
                                                        environments. Requires vpindex.
                                                        Defaults to the machine type
                                                        setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vapic:
                                                      description: VAPIC improves
                                                        the paravirtualized handling
                                                        of interrupts. Defaults to
                                                        the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                    vendorid:
                                                      description: VendorID allows
                                                        setting the hypervisor vendor
                                                        id. Defaults to the machine
                                                        type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                        vendorid:
                                                          description: VendorID sets
                                                            the hypervisor vendor
                                                            id, visible to the vmi.
                                                            String up to twelve characters.
                                                          type: string
                                                      type: object
                                                    vpindex:
                                                      description: VPIndex enables
                                                        the Virtual Processor Index
                                                        to help windows identifying
                                                        virtual processors. Defaults
                                                        to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: Enabled determines
                                                            if the feature should
                                                            be enabled or disabled
                                                            on the guest. Defaults
                                                            to true.
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kvm:
                                                  description: Configure how KVM presence
                                                    is exposed to the guest.
                                                  properties:
                                                    hidden:
                                                      description: Hide the KVM hypervisor
                                                        from standard MSR based discovery.
                                                        Defaults to false
                                                      type: boolean
                                                  type: object
                                                pvspinlock:
                                                  description: Notify the guest that
                                                    the host supports paravirtual
                                                    spinlocks. For older kernels this
                                                    feature should be explicitly disabled.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                smm:
                                                  description: SMM enables/disables
                                                    System Management Mode. TSEG not
                                                    yet implemented.
                                                  properties:
                                                    enabled:
                                                      description: Enabled determines
                                                        if the feature should be enabled
                                                        or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                              type: object
                                            firmware:
                                              description: Firmware.
                                              properties:
                                                bootloader:
                                                  description: Settings to control
                                                    the bootloader that is used.
                                                  properties:
                                                    bios:
                                                      description: If set (default),
                                                        BIOS will be used.
                                                      properties:
                                                        useSerial:
                                                          description: If set, the
                                                            BIOS output will be transmitted
                                                            over serial
                                                          type: boolean
                                                      type: object
                                                    efi:
                                                      description: If set, EFI will
                                                        be used instead of BIOS.
                                                      properties:
                                                        secureBoot:
                                                          description: If set, SecureBoot
                                                            will be enabled and the
                                                            OVMF roms will be swapped
                                                            for SecureBoot-enabled
                                                            ones. Requires SMM to
                                                            be enabled. Defaults to
                                                            true
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kernelBoot:
                                                  description: Settings to set the
                                                    kernel for booting.
                                                  properties:
                                                    container:
                                                      description: Container defines
                                                        the container that containes
                                                        kernel artifacts
                                                      properties:
                                                        image:
                                                          description: Image that
                                                            container initrd / kernel
                                                            files.
                                                          type: string
                                                        imagePullPolicy:
                                                          description: 'Image pull
                                                            policy. One of Always,
                                                            Never, IfNotPresent. Defaults
                                                            to Always if :latest tag
                                                            is specified, or IfNotPresent
                                                            otherwise. Cannot be updated.
                                                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                          type: string
                                                        imagePullSecret:
                                                          description: ImagePullSecret
                                                            is the name of the Docker
                                                            registry secret required
                                                            to pull the image. The
                                                            secret must already exist.
                                                          type: string
                                                        initrdPath:
                                                          description: the fully-qualified
                                                            path to the ramdisk image
                                                            in the host OS
                                                          type: string
                                                        kernelPath:
                                                          description: The fully-qualified
                                                            path to the kernel image
                                                            in the host OS
                                                          type: string
                                                      required:
                                                      - image
                                                      type: object
                                                    kernelArgs:
                                                      description: Arguments to be
                                                        passed to the kernel at boot
                                                        time
                                                      type: string
                                                  type: object
                                                serial:
                                                  description: The system-serial-number
                                                    in SMBIOS
                                                  type: string
                                                uuid:
                                                  description: UUID reported by the
                                                    vmi bios. Defaults to a random
                                                    generated uid.
                                                  type: string
                                              type: object
                                            ioThreadsPolicy:
                                              description: 'Controls whether or not
                                                disks will share IOThreads. Omitting
                                                IOThreadsPolicy disables use of IOThreads.
                                                One of: shared, auto'
                                              type: string
                                            machine:
                                              description: Machine type.
                                              properties:
                                                type:
                                                  description: QEMU machine type is
                                                    the actual chipset of the VirtualMachineInstance.
                                                  type: string
                                              type: object
                                            memory:
                                              description: Memory allow specifying
                                                the VMI memory features.
                                              properties:
                                                guest:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Guest allows to specifying
                                                    the amount of memory which is
                                                    visible inside the Guest OS. The
                                                    Guest must lie between Requests
                                                    and Limits from the resources
                                                    section. Defaults to the requested
                                                    memory in the resources section
                                                    if not specified.
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                hugepages:
                                                  description: Hugepages allow to
                                                    use hugepages for the VirtualMachineInstance
                                                    instead of regular memory.
                                                  properties:
                                                    pageSize:
                                                      description: PageSize specifies
                                                        the hugepage size, for x86_64
                                                        architecture valid values
                                                        are 1Gi and 2Mi.
                                                      type: string
                                                  type: object
                                              type: object
                                            resources:
                                              description: Resources describes the
                                                Compute Resources required by this
                                                vmi.
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. Valid resource keys are
                                                    "memory" and "cpu".
                                                  type: object
                                                overcommitGuestOverhead:
                                                  description: Don't ask the scheduler
                                                    to take the guest-management overhead
                                                    into account. Instead put the
                                                    overhead only into the container's
                                                    memory limit. This can lead to
                                                    crashes if all memory is in use
                                                    on a node. Defaults to false.
                                                  type: boolean
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: Requests is a description
                                                    of the initial vmi resources.
                                                    Valid resource keys are "memory"
                                                    and "cpu".
                                                  type: object
                                              type: object
                                          required:
                                          - devices
                                          type: object
                                        evictionStrategy:
                                          description: EvictionStrategy can be set
                                            to "LiveMigrate" if the VirtualMachineInstance
                                            should be migrated instead of shut-off
                                            in case of a node drain.
                                          type: string
                                        hostname:
                                          description: Specifies the hostname of the
                                            vmi If not specified, the hostname will
                                            be set to the name of the vmi, if dhcp
                                            or cloud-init is configured properly.
                                          type: string
                                        livenessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            liveness. VirtualmachineInstances will
                                            be stopped if the probe fails. Cannot
                                            be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        networks:
                                          description: List of networks that can be
                                            attached to a vm's virtual interface.
                                          items:
                                            description: Network represents a network
                                              type and a resource that should be connected
                                              to the vm.
                                            properties:
                                              multus:
                                                description: Represents the multus
                                                  cni network.
                                                properties:
                                                  default:
                                                    description: Select the default
                                                      network and add it to the multus-cni.io/default-network
                                                      annotation.
                                                    type: boolean
                                                  networkName:
                                                    description: 'References to a
                                                      NetworkAttachmentDefinition
                                                      CRD object. Format: <networkName>,
                                                      <namespace>/<networkName>. If
                                                      namespace is not specified,
                                                      VMI namespace is assumed.'
                                                    type: string
                                                required:
                                                - networkName
                                                type: object
                                              name:
                                                description: 'Network name. Must be
                                                  a DNS_LABEL and unique within the
                                                  vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              pod:
                                                description: Represents the stock
                                                  pod network interface.
                                                properties:
                                                  vmIPv6NetworkCIDR:
                                                    description: IPv6 CIDR for the
                                                      vm network. Defaults to fd10:0:2::/120
                                                      if not specified.
                                                    type: string
                                                  vmNetworkCIDR:
                                                    description: CIDR for vm network.
                                                      Default 10.0.2.0/24 if not specified.
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: 'NodeSelector is a selector
                                            which must be true for the vmi to fit
                                            on a node. Selector which must match a
                                            node''s labels for the vmi to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                        priorityClassName:
                                          description: If specified, indicates the
                                            pod's priority. If not specified, the
                                            pod priority will be default or zero if
                                            there is no default.
                                          type: string
                                        readinessProbe:
                                          description: 'Periodic probe of VirtualMachineInstance
                                            service readiness. VirtualmachineInstances
                                            will be removed from service endpoints
                                            if the probe fails. Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          properties:
                                            exec:
                                              description: One and only one of the
                                                following should be specified. Exec
                                                specifies the action to take, it will
                                                be executed on the guest through the
                                                qemu-guest-agent. If the guest agent
                                                is not available, this probe will
                                                fail.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            failureThreshold:
                                              description: Minimum consecutive failures
                                                for the probe to be considered failed
                                                after having succeeded. Defaults to
                                                3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts
                                                the qemu-guest-agent for availability
                                                checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            initialDelaySeconds:
                                              description: 'Number of seconds after
                                                the VirtualMachineInstance has started
                                                before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: How often (in seconds)
                                                to perform the probe. Default to 10
                                                seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: Minimum consecutive successes
                                                for the probe to be considered successful
                                                after having failed. Defaults to 1.
                                                Must be 1 for liveness. Minimum value
                                                is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: 'TCPSocket specifies an
                                                action involving a TCP port. TCP hooks
                                                not yet supported TODO: implement
                                                a realistic TCP lifecycle hook'
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                            timeoutSeconds:
                                              description: 'Number of seconds after
                                                which the probe times out. For exec
                                                probes the timeout fails the probe
                                                but does not terminate the command
                                                running on the guest. This means a
                                                blocking command can result in an
                                                increasing load on the guest. A small
                                                buffer will be added to the resulting
                                                workload exec probe to compensate
                                                for delays caused by the qemu guest
                                                exec mechanism. Defaults to 1 second.
                                                Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                              format: int32
                                              type: integer
                                          type: object
                                        schedulerName:
                                          description: If specified, the VMI will
                                            be dispatched by specified scheduler.
                                            If not specified, the VMI will be dispatched
                                            by default scheduler.
                                          type: string
                                        startStrategy:
                                          description: StartStrategy can be set to
                                            "Paused" if Virtual Machine should be
                                            started in paused state.
                                          type: string
                                        subdomain:
                                          description: If specified, the fully qualified
                                            vmi hostname will be "<hostname>.<subdomain>.<pod
                                            namespace>.svc.<cluster domain>". If not
                                            specified, the vmi will not have a domainname
                                            at all. The DNS entry will resolve to
                                            the vmi, no matter if the vmi itself can
                                            pick up a hostname.
                                          type: string
                                        terminationGracePeriodSeconds:
                                          description: Grace period observed after
                                            signalling a VirtualMachineInstance to
                                            stop after which the VirtualMachineInstance
                                            is force terminated.
                                          format: int64
                                          type: integer
                                        tolerations:
                                          description: If toleration is specified,
                                            obey all the toleration rules.
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                format: int64
                                                type: integer
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                            type: object
                                          type: array
                                        volumes:
                                          description: List of volumes that can be
                                            mounted by disks belonging to the vmi.
                                          items:
                                            description: Volume represents a named
                                              volume in a vmi.
                                            properties:
                                              cloudInitConfigDrive:
                                                description: 'CloudInitConfigDrive
                                                  represents a cloud-init Config Drive
                                                  user-data source. The Config Drive
                                                  data will be added as a disk to
                                                  the vmi. A proper cloud-init installation
                                                  is required inside the guest. More
                                                  info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      config drive inline cloud-init
                                                      networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains config drive cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains config drive userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  userData:
                                                    description: UserData contains
                                                      config drive inline cloud-init
                                                      userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      config drive cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              cloudInitNoCloud:
                                                description: 'CloudInitNoCloud represents
                                                  a cloud-init NoCloud user-data source.
                                                  The NoCloud data will be added as
                                                  a disk to the vmi. A proper cloud-init
                                                  installation is required inside
                                                  the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html'
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains
                                                      NoCloud inline cloud-init networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64
                                                      contains NoCloud cloud-init
                                                      networkdata as a base64 encoded
                                                      string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud networkdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secretRef:
                                                    description: UserDataSecretRef
                                                      references a k8s secret that
                                                      contains NoCloud userdata.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  userData:
                                                    description: UserData contains
                                                      NoCloud inline cloud-init userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains
                                                      NoCloud cloud-init userdata
                                                      as a base64 encoded string.
                                                    type: string
                                                type: object
                                              configMap:
                                                description: 'ConfigMapSource represents
                                                  a reference to a ConfigMap in the
                                                  same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/'
                                                properties:
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or it's keys must
                                                      be defined
                                                    type: boolean
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              containerDisk:
                                                description: 'ContainerDisk references
                                                  a docker image, embedding a qcow
                                                  or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html'
                                                properties:
                                                  image:
                                                    description: Image is the name
                                                      of the image with the embedded
                                                      disk.
                                                    type: string
                                                  imagePullPolicy:
                                                    description: 'Image pull policy.
                                                      One of Always, Never, IfNotPresent.
                                                      Defaults to Always if :latest
                                                      tag is specified, or IfNotPresent
                                                      otherwise. Cannot be updated.
                                                      More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                    type: string
                                                  imagePullSecret:
                                                    description: ImagePullSecret is
                                                      the name of the Docker registry
                                                      secret required to pull the
                                                      image. The secret must already
                                                      exist.
                                                    type: string
                                                  path:
                                                    description: Path defines the
                                                      path to disk file in the container
                                                    type: string
                                                required:
                                                - image
                                                type: object
                                              dataVolume:
                                                description: DataVolume represents
                                                  the dynamic creation a PVC for this
                                                  volume as well as the process of
                                                  populating that PVC with a disk
                                                  image.
                                                properties:
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  name:
                                                    description: Name represents the
                                                      name of the DataVolume in the
                                                      same namespace
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              downwardAPI:
                                                description: DownwardAPI represents
                                                  downward API about the pod that
                                                  should populate this volume
                                                properties:
                                                  fields:
                                                    description: Fields is a list
                                                      of downward API volume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              downwardMetrics:
                                                description: DownwardMetrics adds
                                                  a very small disk to VMIs which
                                                  contains a limited view of host
                                                  and guest metrics. The disk content
                                                  is compatible with vhostmd (https://github.com/vhostmd/vhostmd)
                                                  and vm-dump-metrics.
                                                type: object
                                              emptyDisk:
                                                description: 'EmptyDisk represents
                                                  a temporary disk which shares the
                                                  vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html'
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk.
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                - capacity
                                                type: object
                                              ephemeral:
                                                description: Ephemeral is a special
                                                  volume source that "wraps" specified
                                                  source and provides copy-on-write
                                                  image on top of it.
                                                properties:
                                                  persistentVolumeClaim:
                                                    description: 'PersistentVolumeClaimVolumeSource
                                                      represents a reference to a
                                                      PersistentVolumeClaim in the
                                                      same namespace. Directly attached
                                                      to the vmi via qemu. More info:
                                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    properties:
                                                      claimName:
                                                        description: 'claimName is
                                                          the name of a PersistentVolumeClaim
                                                          in the same namespace as
                                                          the pod using this volume.
                                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                        type: string
                                                      readOnly:
                                                        description: readOnly Will
                                                          force the ReadOnly setting
                                                          in VolumeMounts. Default
                                                          false.
                                                        type: boolean
                                                    required:
                                                    - claimName
                                                    type: object
                                                type: object
                                              hostDisk:
                                                description: HostDisk represents a
                                                  disk created on the cluster level
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Capacity of the sparse
                                                      disk
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  path:
                                                    description: The path to HostDisk
                                                      image located on the cluster
                                                    type: string
                                                  shared:
                                                    description: Shared indicate whether
                                                      the path is shared between nodes
                                                    type: boolean
                                                  type:
                                                    description: Contains information
                                                      if disk.img exists or should
                                                      be created allowed options are
                                                      'Disk' and 'DiskOrCreate'
                                                    type: string
                                                required:
                                                - path
                                                - type
                                                type: object
                                              name:
                                                description: 'Volume''s name. Must
                                                  be a DNS_LABEL and unique within
                                                  the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              persistentVolumeClaim:
                                                description: 'PersistentVolumeClaimVolumeSource
                                                  represents a reference to a PersistentVolumeClaim
                                                  in the same namespace. Directly
                                                  attached to the vmi via qemu. More
                                                  info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                properties:
                                                  claimName:
                                                    description: 'claimName is the
                                                      name of a PersistentVolumeClaim
                                                      in the same namespace as the
                                                      pod using this volume. More
                                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    type: string
                                                  hotpluggable:
                                                    description: Hotpluggable indicates
                                                      whether the volume can be hotplugged
                                                      and hotunplugged.
                                                    type: boolean
                                                  readOnly:
                                                    description: readOnly Will force
                                                      the ReadOnly setting in VolumeMounts.
                                                      Default false.
                                                    type: boolean
                                                required:
                                                - claimName
                                                type: object
                                              secret:
                                                description: 'SecretVolumeSource represents
                                                  a reference to a secret data in
                                                  the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/'
                                                properties:
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or it's keys must be
                                                      defined
                                                    type: boolean
                                                  secretName:
                                                    description: 'Name of the secret
                                                      in the pod''s namespace to use.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                    type: string
                                                  volumeLabel:
                                                    description: The volume label
                                                      of the resulting disk inside
                                                      the VMI. Different bootstrapping
                                                      mechanisms require different
                                                      values. Typical values are "cidata"
                                                      (cloud-init), "config-2" (cloud-init)
                                                      or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              serviceAccount:
                                                description: 'ServiceAccountVolumeSource
                                                  represents a reference to a service
                                                  account. There can only be one volume
                                                  of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                properties:
                                                  serviceAccountName:
                                                    description: 'Name of the service
                                                      account in the pod''s namespace
                                                      to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                                    type: string
                                                type: object
                                              sysprep:
                                                description: Represents a Sysprep
                                                  volume source.
                                                properties:
                                                  configMap:
                                                    description: ConfigMap references
                                                      a ConfigMap that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secret:
                                                    description: Secret references
                                                      a k8s Secret that contains Sysprep
                                                      answer file named autounattend.xml
                                                      that should be attached as disk
                                                      of CDROM type.
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          type: array
                                      required:
                                      - domain
                                      type: object
                                  type: object
                              required:
                              - template
                              type: object
                          type: object
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: null
    name: awsendpointservices.hypershift.openshift.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: operator
            namespace: ${NAMESPACE}
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1beta2
        - v1beta1
        - v1alpha1
    group: hypershift.openshift.io
    names:
      kind: AWSEndpointService
      listKind: AWSEndpointServiceList
      plural: awsendpointservices
      singular: awsendpointservice
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AWSEndpointService specifies a request for an Endpoint Service
            in AWS
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSEndpointServiceSpec defines the desired state of AWSEndpointService
              properties:
                networkLoadBalancerName:
                  description: The name of the NLB for which an Endpoint Service should
                    be configured
                  type: string
                resourceTags:
                  description: Tags to apply to the EndpointService
                  items:
                    description: AWSResourceTag is a tag to apply to AWS resources
                      created for the cluster.
                    properties:
                      key:
                        description: Key is the key of the tag.
                        maxLength: 128
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                      value:
                        description: "Value is the value of the tag. \n Some AWS service
                          do not support empty values. Since tags are added to resources
                          in many services, the length of the tag value must meet
                          the requirements of all services."
                        maxLength: 256
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs is the list of subnet IDs to which guest
                    nodes can attach
                  items:
                    type: string
                  type: array
              required:
              - networkLoadBalancerName
              type: object
            status:
              description: AWSEndpointServiceStatus defines the observed state of
                AWSEndpointService
              properties:
                conditions:
                  description: "Conditions contains details for the current state
                    of the Endpoint Service request If there is an error processing
                    the request e.g. the NLB doesn't exist, then the Available condition
                    will be false, reason AWSErrorReason, and the error reported in
                    the message. \n Current condition types are: \"Available\""
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                dnsName:
                  description: 'Deprecated: Use DNSNames instead'
                  type: string
                dnsNames:
                  description: DNSName are the names for the records created in the
                    hypershift private zone
                  items:
                    type: string
                  type: array
                dnsZoneID:
                  description: DNSZoneID is ID for the hypershift private zone
                  type: string
                endpointID:
                  description: EndpointID is the ID of the Endpoint created in the
                    guest VPC
                  type: string
                endpointServiceName:
                  description: EndpointServiceName is the name of the Endpoint Service
                    created in the management VPC
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSEndpointService specifies a request for an Endpoint Service
            in AWS
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSEndpointServiceSpec defines the desired state of AWSEndpointService
              properties:
                networkLoadBalancerName:
                  description: The name of the NLB for which an Endpoint Service should
                    be configured
                  type: string
                resourceTags:
                  description: Tags to apply to the EndpointService
                  items:
                    description: AWSResourceTag is a tag to apply to AWS resources
                      created for the cluster.
                    properties:
                      key:
                        description: Key is the key of the tag.
                        maxLength: 128
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                      value:
                        description: "Value is the value of the tag. \n Some AWS service
                          do not support empty values. Since tags are added to resources
                          in many services, the length of the tag value must meet
                          the requirements of all services."
                        maxLength: 256
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs is the list of subnet IDs to which guest
                    nodes can attach
                  items:
                    type: string
                  type: array
              required:
              - networkLoadBalancerName
              type: object
            status:
              description: AWSEndpointServiceStatus defines the observed state of
                AWSEndpointService
              properties:
                conditions:
                  description: "Conditions contains details for the current state
                    of the Endpoint Service request If there is an error processing
                    the request e.g. the NLB doesn't exist, then the Available condition
                    will be false, reason AWSErrorReason, and the error reported in
                    the message. \n Current condition types are: \"Available\""
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                dnsNames:
                  description: DNSName are the names for the records created in the
                    hypershift private zone
                  items:
                    type: string
                  type: array
                dnsZoneID:
                  description: DNSZoneID is ID for the hypershift private zone
                  type: string
                endpointID:
                  description: EndpointID is the ID of the Endpoint created in the
                    guest VPC
                  type: string
                endpointServiceName:
                  description: EndpointServiceName is the name of the Endpoint Service
                    created in the management VPC
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: null
    name: hostedclusters.hypershift.openshift.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: operator
            namespace: ${NAMESPACE}
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1beta2
        - v1beta1
        - v1alpha1
    group: hypershift.openshift.io
    names:
      kind: HostedCluster
      listKind: HostedClusterList
      plural: hostedclusters
      shortNames:
      - hc
      - hcs
      singular: hostedcluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Version
        jsonPath: .status.version.history[?(@.state=="Completed")].version
        name: Version
        type: string
      - description: KubeConfig Secret
        jsonPath: .status.kubeconfig.name
        name: KubeConfig
        type: string
      - description: Progress
        jsonPath: .status.version.history[?(@.state!="")].state
        name: Progress
        type: string
      - description: Available
        jsonPath: .status.conditions[?(@.type=="Available")].status
        name: Available
        type: string
      - description: Progressing
        jsonPath: .status.conditions[?(@.type=="Progressing")].status
        name: Progressing
        type: string
      - description: Message
        jsonPath: .status.conditions[?(@.type=="Available")].message
        name: Message
        type: string
      deprecated: true
      deprecationWarning: v1alpha1 is a deprecated version for HostedCluster
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HostedCluster is the primary representation of a HyperShift
            cluster and encapsulates the control plane and common data plane configuration.
            Creating a HostedCluster results in a fully functional OpenShift control
            plane with no attached nodes. To support workloads (e.g. pods), a HostedCluster
            may have one or more associated NodePool resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the HostedCluster.
              properties:
                additionalTrustBundle:
                  description: AdditionalTrustBundle is a reference to a ConfigMap
                    containing a PEM-encoded X.509 certificate bundle that will be
                    added to the hosted controlplane and nodes
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                auditWebhook:
                  description: "AuditWebhook contains metadata for configuring an
                    audit webhook endpoint for a cluster to process cluster audit
                    events. It references a secret that contains the webhook information
                    for the audit webhook endpoint. It is a secret because if the
                    endpoint has mTLS the kubeconfig will contain client keys. The
                    kubeconfig needs to be stored in the secret with a secret key
                    name that corresponds to the constant AuditWebhookKubeconfigKey.
                    \n This field is currently only supported on the IBMCloud platform."
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: Autoscaling specifies auto-scaling behavior that applies
                    to all NodePools associated with the control plane.
                  properties:
                    maxNodeProvisionTime:
                      description: MaxNodeProvisionTime is the maximum time to wait
                        for node provisioning before considering the provisioning
                        to be unsuccessful, expressed as a Go duration string. The
                        default is 15 minutes.
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: MaxNodesTotal is the maximum allowable number of
                        nodes across all NodePools for a HostedCluster. The autoscaler
                        will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: MaxPodGracePeriod is the maximum seconds to wait
                        for graceful pod termination before scaling down a NodePool.
                        The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: "PodPriorityThreshold enables users to schedule
                        \"best-effort\" pods, which shouldn't trigger autoscaler actions,
                        but only run when there are spare resources available. The
                        default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption"
                      format: int32
                      type: integer
                  type: object
                channel:
                  description: channel is an identifier for explicitly requesting
                    that a non-default set of updates be applied to this cluster.
                    The default channel will be contain stable updates that are appropriate
                    for production clusters.
                  type: string
                clusterID:
                  description: ClusterID uniquely identifies this cluster. This is
                    expected to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    in hexadecimal values). As with a Kubernetes metadata.uid, this
                    ID uniquely identifies this cluster in space and time. This value
                    identifies the cluster in metrics pushed to telemetry and metrics
                    produced by the control plane operators. If a value is not specified,
                    an ID is generated. After initial creation, the value is immutable.
                  pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
                  type: string
                configuration:
                  description: Configuration specifies configuration for individual
                    OCP components in the cluster, represented as embedded resources
                    that correspond to the openshift configuration API.
                  properties:
                    apiServer:
                      description: APIServer holds configuration (like serving certificates,
                        client CA and CORS domains) shared by all API servers in the
                        system, among them especially kube-apiserver and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: additionalCORSAllowedOrigins lists additional,
                            user-defined regular expressions describing hosts for
                            which the API server allows access using the CORS headers.
                            This may be needed to access the API and the integrated
                            OAuth server from JavaScript applications. The values
                            are regular expressions that correspond to the Golang
                            regular expression language.
                          items:
                            type: string
                          type: array
                        audit:
                          default:
                            profile: Default
                          description: audit specifies the settings for audit configuration
                            to be applied to all OpenShift-provided API servers in
                            the cluster.
                          properties:
                            customRules:
                              description: customRules specify profiles per group.
                                These profile take precedence over the top-level profile
                                field if they apply. They are evaluation from top
                                to bottom and the first one that matches, applies.
                              items:
                                description: AuditCustomRule describes a custom rule
                                  for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request
                                      user must be member of in order to this profile
                                      to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: "profile specifies the name of the
                                      desired audit policy configuration to be deployed
                                      to all OpenShift-provided API servers in the
                                      cluster. \n The following profiles are provided:
                                      - Default: the existing default policy. - WriteRequestBodies:
                                      like 'Default', but logs request and response
                                      HTTP payloads for write requests (create, update,
                                      patch). - AllRequestBodies: like 'WriteRequestBodies',
                                      but also logs request and response HTTP payloads
                                      for read requests (get, list). - None: no requests
                                      are logged at all, not even oauthaccesstokens
                                      and oauthauthorizetokens. \n If unset, the 'Default'
                                      profile is used as the default."
                                    enum:
                                    - Default
                                    - WriteRequestBodies
                                    - AllRequestBodies
                                    - None
                                    type: string
                                required:
                                - group
                                - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: "profile specifies the name of the desired
                                top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers
                                in the cluster (kube-apiserver, openshift-apiserver
                                and oauth-apiserver), with the exception of those
                                requests that match one or more of the customRules.
                                \n The following profiles are provided: - Default:
                                default policy which means MetaData level logging
                                with the exception of events (not logged at all),
                                oauthaccesstokens and oauthauthorizetokens (both logged
                                at RequestBody level). - WriteRequestBodies: like
                                'Default', but logs request and response HTTP payloads
                                for write requests (create, update, patch). - AllRequestBodies:
                                like 'WriteRequestBodies', but also logs request and
                                response HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens
                                and oauthauthorizetokens. \n Warning: It is not recommended
                                to disable audit logging by using the `None` profile
                                unless you are fully aware of the risks of not logging
                                data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation
                                arises, you might need to enable audit logging and
                                reproduce the issue in order to troubleshoot properly.
                                \n If unset, the 'Default' profile is used as the
                                default."
                              enum:
                              - Default
                              - WriteRequestBodies
                              - AllRequestBodies
                              - None
                              type: string
                          type: object
                        clientCA:
                          description: 'clientCA references a ConfigMap containing
                            a certificate bundle for the signers that will be recognized
                            for incoming client certificates in addition to the operator
                            managed signers. If this is empty, then only operator
                            managed signers are valid. You usually only have to set
                            this if you have your own PKI you wish to honor client
                            certificates from. The ConfigMap must exist in the openshift-config
                            namespace and contain the following required fields: -
                            ConfigMap.Data["ca-bundle.crt"] - CA bundle.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption
                            of resources at the datastore layer.
                          properties:
                            type:
                              description: "type defines what encryption type should
                                be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the
                                empty string), identity is implied. The behavior of
                                unset can and will change over time.  Even if encryption
                                is enabled by default, the meaning of unset may change
                                to a different encryption type based on changes in
                                best practices. \n When encryption is enabled, all
                                sensitive resources shipped with the platform are
                                encrypted. This list of sensitive resources can and
                                will change over time.  The current authoritative
                                list is: \n 1. secrets 2. configmaps 3. routes.route.openshift.io
                                4. oauthaccesstokens.oauth.openshift.io 5. oauthauthorizetokens.oauth.openshift.io"
                              enum:
                              - ""
                              - identity
                              - aescbc
                              type: string
                          type: object
                        servingCerts:
                          description: servingCert is the TLS cert info for serving
                            secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: namedCertificates references secrets containing
                                the TLS cert info for serving secure traffic to specific
                                hostnames. If no named certificates are provided,
                                or no named certificates match the server name as
                                understood by a client, the defaultServingCertificate
                                will be used.
                              items:
                                description: APIServerNamedServingCert maps a server
                                  DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: names is a optional list of explicit
                                      DNS names (leading wildcards allowed) that should
                                      use this certificate to serve secure traffic.
                                      If no names are provided, the implicit names
                                      will be extracted from the certificates. Exact
                                      names trump over wildcard names. Explicit names
                                      defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    type: array
                                  servingCertificate:
                                    description: 'servingCertificate references a
                                      kubernetes.io/tls type secret containing the
                                      TLS cert info for serving secure traffic. The
                                      secret must exist in the openshift-config namespace
                                      and contain the following required fields: -
                                      Secret.Data["tls.key"] - TLS private key. -
                                      Secret.Data["tls.crt"] - TLS certificate.'
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              type: array
                          type: object
                        tlsSecurityProfile:
                          description: "tlsSecurityProfile specifies settings for
                            TLS connections for externally exposed servers. \n If
                            unset, a default (which may change between releases) is
                            chosen. Note that only Old, Intermediate and Custom profiles
                            are currently supported, and the maximum available MinTLSVersions
                            is VersionTLS12."
                          properties:
                            custom:
                              description: "custom is a user-defined TLS security
                                profile. Be extremely careful using a custom profile
                                as invalid configurations can be catastrophic. An
                                example custom profile looks like this: \n ciphers:
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256
                                minTLSVersion: TLSv1.1"
                              nullable: true
                              properties:
                                ciphers:
                                  description: "ciphers is used to specify the cipher
                                    algorithms that are negotiated during the TLS
                                    handshake.  Operators may remove entries their
                                    operands do not support.  For example, to use
                                    DES-CBC3-SHA  (yaml): \n ciphers: - DES-CBC3-SHA"
                                  items:
                                    type: string
                                  type: array
                                minTLSVersion:
                                  description: "minTLSVersion is used to specify the
                                    minimal version of the TLS protocol that is negotiated
                                    during the TLS handshake. For example, to use
                                    TLS versions 1.1, 1.2 and 1.3 (yaml): \n minTLSVersion:
                                    TLSv1.1 \n NOTE: currently the highest minTLSVersion
                                    allowed is VersionTLS12"
                                  enum:
                                  - VersionTLS10
                                  - VersionTLS11
                                  - VersionTLS12
                                  - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: "intermediate is a TLS security profile
                                based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                minTLSVersion: TLSv1.2"
                              nullable: true
                              type: object
                            modern:
                              description: "modern is a TLS security profile based
                                on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                              nullable: true
                              type: object
                            old:
                              description: "old is a TLS security profile based on:
                                \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                - DHE-RSA-CHACHA20-POLY1305 - ECDHE-ECDSA-AES128-SHA256
                                - ECDHE-RSA-AES128-SHA256 - ECDHE-ECDSA-AES128-SHA
                                - ECDHE-RSA-AES128-SHA - ECDHE-ECDSA-AES256-SHA384
                                - ECDHE-RSA-AES256-SHA384 - ECDHE-ECDSA-AES256-SHA
                                - ECDHE-RSA-AES256-SHA - DHE-RSA-AES128-SHA256 - DHE-RSA-AES256-SHA256
                                - AES128-GCM-SHA256 - AES256-GCM-SHA384 - AES128-SHA256
                                - AES256-SHA256 - AES128-SHA - AES256-SHA - DES-CBC3-SHA
                                minTLSVersion: TLSv1.0"
                              nullable: true
                              type: object
                            type:
                              description: "type is one of Old, Intermediate, Modern
                                or Custom. Custom provides the ability to specify
                                individual TLS security profile parameters. Old, Intermediate
                                and Modern are TLS security profiles based on: \n
                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                                \n The profiles are intent based, so they may change
                                over time as new ciphers are developed and existing
                                ciphers are found to be insecure.  Depending on precisely
                                which ciphers are available to a process, the list
                                may be reduced. \n Note that the Modern profile is
                                currently not supported because it is not yet well
                                adopted by common software libraries."
                              enum:
                              - Old
                              - Intermediate
                              - Modern
                              - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: Authentication specifies cluster-wide settings
                        for authentication (like OAuth and webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: 'oauthMetadata contains the discovery endpoint
                            data for OAuth 2.0 Authorization Server Metadata for an
                            external OAuth server. This discovery document can be
                            viewed from its served location: oc get --raw ''/.well-known/oauth-authorization-server''
                            For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status. The key
                            "oauthMetadata" is used to locate the data. If specified
                            and the config map or expected key is not found, no metadata
                            is served. If the specified metadata is not valid, no
                            metadata is served. The namespace for this config map
                            is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        serviceAccountIssuer:
                          description: 'serviceAccountIssuer is the identifier of
                            the bound service account token issuer. The default is
                            https://kubernetes.default.svc WARNING: Updating this
                            field will result in the invalidation of all bound tokens
                            with the previous issuer value. Unless the holder of a
                            bound token has explicit support for a change in issuer,
                            they will not request a new bound token until pod restart
                            or until their existing token exceeds 80% of its duration.'
                          type: string
                        type:
                          description: type identifies the cluster managed, user facing
                            authentication mode in use. Specifically, it manages the
                            component that responds to login attempts. The default
                            is IntegratedOAuth.
                          type: string
                        webhookTokenAuthenticator:
                          description: webhookTokenAuthenticator configures a remote
                            token reviewer. These remote authentication webhooks can
                            be used to verify bearer tokens via the tokenreviews.authentication.k8s.io
                            REST API. This is required to honor bearer tokens that
                            are provisioned by an external authentication service.
                          properties:
                            kubeConfig:
                              description: "kubeConfig references a secret that contains
                                kube config file data which describes how to access
                                the remote webhook service. The namespace for the
                                referenced secret is openshift-config. \n For further
                                details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                \n The key \"kubeConfig\" is used to locate the data.
                                If the secret or expected key is not found, the webhook
                                is not honored. If the specified kube config data
                                is not valid, the webhook is not honored."
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting
                            it has no effect.
                          items:
                            description: deprecatedWebhookTokenAuthenticator holds
                              the necessary configuration options for a remote token
                              authenticator. It's the same as WebhookTokenAuthenticator
                              but it's missing the 'required' validation on KubeConfig
                              field.
                            properties:
                              kubeConfig:
                                description: 'kubeConfig contains kube config file
                                  data which describes how to access the remote webhook
                                  service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the
                                  webhook is not honored. If the specified kube config
                                  data is not valid, the webhook is not honored. The
                                  namespace for this secret is determined by the point
                                  of use.'
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                      type: object
                    configMapRefs:
                      description: "ConfigMapRefs holds references to any configmaps
                        referenced by configuration entries. Entries can reference
                        the configmaps using local object references. \n Deprecated
                        This field is deprecated and will be removed in a future release"
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    featureGate:
                      description: FeatureGate holds cluster-wide information about
                        feature gates.
                      properties:
                        customNoUpgrade:
                          description: customNoUpgrade allows the enabling or disabling
                            of any feature. Turning this feature set on IS NOT SUPPORTED,
                            CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its
                            nature, this setting cannot be validated.  If you have
                            any typos or accidentally apply invalid combinations your
                            cluster may fail in an unrecoverable way.  featureSet
                            must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates
                                that you want to force off
                              items:
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates
                                that you want to force on
                              items:
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: featureSet changes the list of features in
                            the cluster.  The default is empty.  Be very careful adjusting
                            this setting. Turning on or off features may cause irreversible
                            changes in your cluster which cannot be undone.
                          type: string
                      type: object
                    image:
                      description: Image governs policies related to imagestream imports
                        and runtime configuration for external registries. It allows
                        cluster admins to configure which registries OpenShift is
                        allowed to import images from, extra CA trust bundles for
                        external registries, and policies to block or allow registry
                        hostnames. When exposing OpenShift's image registry to the
                        public, this also lets cluster admins specify the external
                        hostname.
                      properties:
                        additionalTrustedCA:
                          description: additionalTrustedCA is a reference to a ConfigMap
                            containing additional CAs that should be trusted during
                            imagestream import, pod image pull, build image pull,
                            and imageregistry pullthrough. The namespace for this
                            config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        allowedRegistriesForImport:
                          description: allowedRegistriesForImport limits the container
                            image registries that normal users may import images from.
                            Set this list to the registries that you trust to contain
                            valid Docker images and that you want applications to
                            be able to import from. Users with permission to create
                            Images or ImageStreamMappings via the API are not affected
                            by this policy - typically only administrators or system
                            integrations will have those permissions.
                          items:
                            description: RegistryLocation contains a location of the
                              registry specified by the registry domain name. The
                              domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: domainName specifies a domain name for
                                  the registry In case the registry use non-standard
                                  (80 or 443) port, the port should be included in
                                  the domain name as well.
                                type: string
                              insecure:
                                description: insecure indicates whether the registry
                                  is secure (https) or insecure (http) By default
                                  (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                        externalRegistryHostnames:
                          description: externalRegistryHostnames provides the hostnames
                            for the default external image registry. The external
                            hostname should be set only when the image registry is
                            exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]"
                            format.
                          items:
                            type: string
                          type: array
                        registrySources:
                          description: registrySources contains configuration that
                            determines how the container runtime should treat individual
                            registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not
                            contain configuration for the internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: "allowedRegistries are the only registries
                                permitted for image pull and push actions. All other
                                registries are denied. \n Only one of BlockedRegistries
                                or AllowedRegistries may be set."
                              items:
                                type: string
                              type: array
                            blockedRegistries:
                              description: "blockedRegistries cannot be used for image
                                pull and push actions. All other registries are permitted.
                                \n Only one of BlockedRegistries or AllowedRegistries
                                may be set."
                              items:
                                type: string
                              type: array
                            containerRuntimeSearchRegistries:
                              description: 'containerRuntimeSearchRegistries are registries
                                that will be searched when pulling images that do
                                not have fully qualified domains in their pull specs.
                                Registries will be searched in the order provided
                                in the list. Note: this search list only works with
                                the container runtime, i.e CRI-O. Will NOT work with
                                builds or imagestream imports.'
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which
                                do not have a valid TLS certificates or only support
                                HTTP connections.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    ingress:
                      description: Ingress holds cluster-wide information about ingress,
                        including the default ingress domain used for routes.
                      properties:
                        appsDomain:
                          description: appsDomain is an optional domain to use instead
                            of the one specified in the domain field when a Route
                            is created without specifying an explicit host. If appsDomain
                            is nonempty, this value is used to generate default host
                            values for Route. Unlike domain, appsDomain may be modified
                            after installation. This assumes a new ingresscontroller
                            has been setup with a wildcard certificate.
                          type: string
                        componentRoutes:
                          description: "componentRoutes is an optional list of routes
                            that are managed by OpenShift components that a cluster-admin
                            is able to configure the hostname and serving certificate
                            for. The namespace and name of each route in this list
                            should match an existing entry in the status.componentRoutes
                            list. \n To determine the set of configurable Routes,
                            look at namespace and name of entries in the .status.componentRoutes
                            list, where participating operators write the status of
                            configurable routes."
                          items:
                            description: ComponentRouteSpec allows for configuration
                              of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should
                                  be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: "name is the logical name of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: "namespace is the namespace of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: servingCertKeyPairSecret is a reference
                                  to a secret of type `kubernetes.io/tls` in the openshift-config
                                  namespace. The serving cert/key pair must match
                                  and will be used by the operator to fulfill the
                                  intent of serving with this name. If the custom
                                  hostname uses the default routing suffix of the
                                  cluster, the Secret specification for a serving
                                  certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - hostname
                            - name
                            - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - namespace
                          - name
                          x-kubernetes-list-type: map
                        domain:
                          description: "domain is used to generate a default host
                            name for a route when the route's host name is empty.
                            The generated host name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\".
                            \n It is also used as the default wildcard domain suffix
                            for ingress. The default ingresscontroller domain will
                            follow this pattern: \"*.<domain>\". \n Once set, changing
                            domain is not currently supported."
                          type: string
                        loadbalancer:
                          description: loadBalancer contains the load balancer details
                            in general which are not only specific to the underlying
                            infrastructure provider of the current cluster and are
                            required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: platform holds configuration specific to
                                the underlying infrastructure provider for the ingress
                                load balancers. When omitted, this means the user
                                has no opinion and the platform is left to choose
                                reasonable defaults. These defaults are subject to
                                change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the
                                    Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: "type allows user to set a load
                                        balancer type. When this field is set the
                                        default ingresscontroller will get created
                                        using the specified LBType. If this field
                                        is not set then the default ingress controller
                                        of LBType Classic will be created. Valid values
                                        are: \n * \"Classic\": A Classic Load Balancer
                                        that makes routing decisions at either the
                                        transport layer (TCP/SSL) or the application
                                        layer (HTTP/HTTPS). See the following for
                                        additional details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                        \n * \"NLB\": A Network Load Balancer that
                                        makes routing decisions at the transport layer
                                        (TCP/SSL). See the following for additional
                                        details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                      enum:
                                      - NLB
                                      - Classic
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type:
                                  description: type is the underlying infrastructure
                                    provider for the cluster. Allowed values are "AWS",
                                    "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
                                    "VSphere", "oVirt", "KubeVirt", "EquinixMetal",
                                    "PowerVS", "AlibabaCloud", "Nutanix" and "None".
                                    Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None
                                    if they do not support that platform.
                                  enum:
                                  - ""
                                  - AWS
                                  - Azure
                                  - BareMetal
                                  - GCP
                                  - Libvirt
                                  - OpenStack
                                  - None
                                  - VSphere
                                  - oVirt
                                  - IBMCloud
                                  - KubeVirt
                                  - EquinixMetal
                                  - PowerVS
                                  - AlibabaCloud
                                  - Nutanix
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: "requiredHSTSPolicies specifies HSTS policies
                            that are required to be set on newly created  or updated
                            routes matching the domainPattern/s and namespaceSelector/s
                            that are specified in the policy. Each requiredHSTSPolicy
                            must have at least a domainPattern and a maxAge to validate
                            a route HSTS Policy route annotation, and affect route
                            admission. \n A candidate route is checked for HSTS Policies
                            if it has the HSTS Policy route annotation: \"haproxy.router.openshift.io/hsts_header\"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains
                            \n - For each candidate route, if it matches a requiredHSTSPolicy
                            domainPattern and optional namespaceSelector, then the
                            maxAge, preloadPolicy, and includeSubdomainsPolicy must
                            be valid to be admitted.  Otherwise, the route is rejected.
                            - The first match, by domainPattern and optional namespaceSelector,
                            in the ordering of the RequiredHSTSPolicies determines
                            the route's admission status. - If the candidate route
                            doesn't match any requiredHSTSPolicy domainPattern and
                            optional namespaceSelector, then it may use any HSTS Policy
                            annotation. \n The HSTS policy configuration may be changed
                            after routes have already been created. An update to a
                            previously admitted route may then fail if the updated
                            route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not
                            cause a route that is already admitted to stop working.
                            \n Note that if there are no RequiredHSTSPolicies, any
                            HSTS Policy annotation on the route is valid."
                          items:
                            properties:
                              domainPatterns:
                                description: "domainPatterns is a list of domains
                                  for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created
                                  with a spec.host matching one of the domains, the
                                  route must specify the HSTS Policy components described
                                  in the matching RequiredHSTSPolicy. \n The use of
                                  wildcards is allowed like this: *.foo.com matches
                                  everything under foo.com. foo.com only matches foo.com,
                                  so to cover foo.com and everything under it, you
                                  must specify *both*."
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: 'includeSubDomainsPolicy means the HSTS
                                  Policy should apply to any subdomains of the host''s
                                  domain name.  Thus, for the host bar.foo.com, if
                                  includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS
                                  Policy of bar.foo.com - the host bar.foo.com would
                                  inherit the HSTS Policy of bar.foo.com - the host
                                  foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS
                                  Policy of bar.foo.com'
                                enum:
                                - RequireIncludeSubDomains
                                - RequireNoIncludeSubDomains
                                - NoOpinion
                                type: string
                              maxAge:
                                description: maxAge is the delta time range in seconds
                                  during which hosts are regarded as HSTS hosts. If
                                  set to 0, it negates the effect, and hosts are removed
                                  as HSTS hosts. If set to 0 and includeSubdomains
                                  is specified, all subdomains of the host are also
                                  removed as HSTS hosts. maxAge is a time-to-live
                                  value, and if this policy is not refreshed on a
                                  client, the HSTS policy will eventually expire on
                                  that client.
                                properties:
                                  largestMaxAge:
                                    description: The largest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age This value
                                      can be left unspecified, in which case no upper
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: The smallest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age Setting max-age=0
                                      allows the deletion of an existing HSTS header
                                      from a host.  This is a necessary tool for administrators
                                      to quickly correct mistakes. This value can
                                      be left unspecified, in which case no lower
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: namespaceSelector specifies a label selector
                                  such that the policy applies only to those routes
                                  that are in namespaces with labels that match the
                                  selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches
                                  everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: preloadPolicy directs the client to include
                                  hosts in its host preload list so that it never
                                  needs to do an initial load to get the HSTS header
                                  (note that this is not defined in RFC 6797 and is
                                  therefore client implementation-dependent).
                                enum:
                                - RequirePreload
                                - RequireNoPreload
                                - NoOpinion
                                type: string
                            required:
                            - domainPatterns
                            type: object
                          type: array
                      type: object
                    items:
                      description: "Items embeds the serialized configuration resources.
                        \n Deprecated This field is deprecated and will be removed
                        in a future release"
                      items:
                        type: object
                      type: array
                      x-kubernetes-preserve-unknown-fields: true
                    network:
                      description: 'Network holds cluster-wide information about the
                        network. It is used to configure the desired network configuration,
                        such as: IP address pools for services/pod IPs, network plugin,
                        etc. Please view network.spec for an explanation on what applies
                        when configuring this resource. TODO (csrwng): Add validation
                        here to exclude changes that conflict with networking settings
                        in the HostedCluster.Spec.Networking field.'
                      properties:
                        clusterNetwork:
                          description: IP address pool to use for pod IPs. This field
                            is immutable after installation.
                          items:
                            description: ClusterNetworkEntry is a contiguous block
                              of IP addresses from which pod IPs are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: The size (prefix) of block to allocate
                                  to each node. If this field is not used by the plugin,
                                  it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        externalIP:
                          description: externalIP defines configuration for controllers
                            that affect Service.ExternalIP. If nil, then ExternalIP
                            is not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: autoAssignCIDRs is a list of CIDRs from
                                which to automatically assign Service.ExternalIP.
                                These are assigned when the service is of type LoadBalancer.
                                In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected
                                by any ExternalIPPolicy rules. Currently, only one
                                entry may be provided.
                              items:
                                type: string
                              type: array
                            policy:
                              description: policy is a set of restrictions applied
                                to the ExternalIP field. If nil or empty, then ExternalIP
                                is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed
                                    CIDRs.
                                  items:
                                    type: string
                                  type: array
                                rejectedCIDRs:
                                  description: rejectedCIDRs is the list of disallowed
                                    CIDRs. These take precedence over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        networkType:
                          description: 'NetworkType is the plugin that is to be deployed
                            (e.g. OpenShiftSDN). This should match a value that the
                            cluster-network-operator understands, or else no networking
                            will be installed. Currently supported values are: - OpenShiftSDN
                            This field is immutable after installation.'
                          type: string
                        serviceNetwork:
                          description: IP address pool for services. Currently, we
                            only support a single entry here. This field is immutable
                            after installation.
                          items:
                            type: string
                          type: array
                        serviceNodePortRange:
                          description: The port range allowed for Services of type
                            NodePort. If not specified, the default of 30000-32767
                            will be used. Such Services without a NodePort specified
                            will have one automatically allocated from this range.
                            This parameter can be updated after the cluster is installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                    oauth:
                      description: OAuth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server. This
                        configuration is only honored when the top level Authentication
                        config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: identityProviders is an ordered list of ways
                            for a user to identify themselves. When this list is empty,
                            no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for
                              users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options
                                  for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using
                                  GitHub credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. This can
                                      only be configured when hostname is set to a
                                      non-empty value. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostname:
                                    description: hostname is the optional domain (e.g.
                                      "mycompany.com") for use with a hosted instance
                                      of GitHub Enterprise. It must match the GitHub
                                      Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts
                                      which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which
                                      teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using
                                  GitLab credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using
                                  Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google
                                      App domain (e.g. "mycompany.com") to restrict
                                      logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication
                                  using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: fileData is a required reference
                                      to a secret by name containing the data to use
                                      as the htpasswd file. The key "htpasswd" is
                                      used to locate the data. If the secret or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified htpasswd data is not
                                      valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication
                                  using keystone password credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone
                                      v3
                                    type: string
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using
                                  LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to
                                      identities
                                    properties:
                                      email:
                                        description: email is the list of attributes
                                          whose values should be used as the email
                                          address. Optional. If unspecified, no email
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: id is the list of attributes
                                          whose values should be used as the user
                                          ID. Required. First non-empty attribute
                                          is used. At least one attribute is required.
                                          If none of the listed attribute have a value,
                                          authentication fails. LDAP standard identity
                                          attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: name is the list of attributes
                                          whose values should be used as the display
                                          name. Optional. If unspecified, no display
                                          name is set for the identity LDAP standard
                                          display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of attributes whose values should be used
                                          as the preferred username. LDAP standard
                                          login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind
                                      with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: bindPassword is an optional reference
                                      to a secret by name containing a password to
                                      bind with during the search phase. The key "bindPassword"
                                      is used to locate the data. If specified and
                                      the secret or expected key is not found, the
                                      identity provider is not honored. The namespace
                                      for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  insecure:
                                    description: 'insecure, if true, indicates the
                                      connection should not use TLS WARNING: Should
                                      not be set to `true` with the URL scheme "ldaps://"
                                      as "ldaps://" URLs always attempt to connect
                                      using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely.
                                      When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified
                                      in https://tools.ietf.org/html/rfc2830.'
                                    type: boolean
                                  url:
                                    description: 'url is an RFC 2255 URL which specifies
                                      the LDAP search parameters to use. The syntax
                                      of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                                    type: string
                                type: object
                              mappingMethod:
                                description: mappingMethod determines how identities
                                  from this provider are mapped to users Defaults
                                  to "claim"
                                type: string
                              name:
                                description: 'name is used to qualify the identities
                                  returned by this provider. - It MUST be unique and
                                  not shared by any other identity provider used -
                                  It MUST be a valid path segment: name cannot equal
                                  "." or ".." or contain "/" or "%" or ":" Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                                type: string
                              openID:
                                description: openID enables user authentication using
                                  OpenID credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: email is the list of claims whose
                                          values should be used as the email address.
                                          Optional. If unspecified, no email is set
                                          for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: groups is the list of claims
                                          value of which should be used to synchronize
                                          groups from the OIDC provider to OpenShift
                                          for the user. If multiple claims are specified,
                                          the first one with a non-empty value is
                                          used.
                                        items:
                                          description: OpenIDClaim represents a claim
                                            retrieved from an OpenID provider's tokens
                                            or userInfo responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: name is the list of claims whose
                                          values should be used as the display name.
                                          Optional. If unspecified, no display name
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of claims whose values should be used as
                                          the preferred username. If unspecified,
                                          the preferred username is determined from
                                          the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any
                                      custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request
                                      in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: issuer is the URL that the OpenID
                                      Provider asserts as its Issuer Identifier. It
                                      must use the https scheme with no query or fragment
                                      component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication
                                  using request header credentials
                                properties:
                                  ca:
                                    description: ca is a required reference to a config
                                      map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the
                                      TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming
                                      requests to prevent header spoofing. The key
                                      "ca.crt" is used to locate the data. If the
                                      config map or expected key is not found, the
                                      identity provider is not honored. If the specified
                                      ca data is not valid, the identity provider
                                      is not honored. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  challengeURL:
                                    description: challengeURL is a URL to redirect
                                      unauthenticated /authorize requests to Unauthenticated
                                      requests from OAuth clients which expect WWW-Authenticate
                                      challenges will be redirected here. ${url} is
                                      replaced with the current URL, escaped to be
                                      safe in a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: clientCommonNames is an optional
                                      list of common names to require a match from.
                                      If empty, any client certificate validated against
                                      the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers
                                      to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to
                                      check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: loginURL is a URL to redirect unauthenticated
                                      /authorize requests to Unauthenticated requests
                                      from OAuth clients which expect interactive
                                      logins will be redirected here ${url} is replaced
                                      with the current URL, escaped to be safe in
                                      a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers
                                      to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set
                                      of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider
                                  type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like
                            the login page.
                          properties:
                            error:
                              description: error is the name of a secret that specifies
                                a go template to use to render error pages during
                                the authentication or grant flow. The key "errors.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                error page is used. If the specified template is not
                                valid, the default error page is used. If unspecified,
                                the default error page is used. The namespace for
                                this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            login:
                              description: login is the name of a secret that specifies
                                a go template to use to render the login page. The
                                key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not
                                found, the default login page is used. If the specified
                                template is not valid, the default login page is used.
                                If unspecified, the default login page is used. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            providerSelection:
                              description: providerSelection is the name of a secret
                                that specifies a go template to use to render the
                                provider selection page. The key "providers.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                provider selection page is used. If the specified
                                template is not valid, the default provider selection
                                page is used. If unspecified, the default provider
                                selection page is used. The namespace for this secret
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization
                            and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: "accessTokenInactivityTimeout defines the
                                token inactivity timeout for tokens granted by any
                                client. The value represents the maximum amount of
                                time that can occur between consecutive uses of the
                                token. Tokens become invalid if they are not used
                                within this temporal window. The user will need to
                                acquire a new token to regain access once a token
                                times out. Takes valid time duration string such as
                                \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout
                                is configured per client, then that value takes precedence.
                                If the timeout value is not specified and the client
                                does not override the value, then tokens are valid
                                until their lifetime. \n WARNING: existing tokens'
                                timeout will not be affected (lowered) by changing
                                this value"
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds -
                                DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum
                                age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                    proxy:
                      description: Proxy holds cluster-wide information on how to
                        configure default proxies for the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs and/or IPs for which the proxy should not
                            be used. Empty means unset and will not result in an env
                            var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata: name: user-ca-bundle namespace: openshift-config
                            data: ca-bundle.crt: | -----BEGIN CERTIFICATE----- Custom
                            CA certificate bundle. -----END CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    scheduler:
                      description: Scheduler holds cluster-wide config information
                        to run the Kubernetes Scheduler and influence its placement
                        decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: 'defaultNodeSelector helps set the cluster-wide
                            default node selector to restrict pod placement to specific
                            nodes. This is applied to the pods created in all namespaces
                            and creates an intersection with any existing nodeSelectors
                            already set on a pod, additionally constraining that pod''s
                            selector. For example, defaultNodeSelector: "type=user-node,region=east"
                            would set nodeSelector field in pod spec to "type=user-node,region=east"
                            to all pods created in all namespaces. Namespaces having
                            project-wide node selectors won''t be impacted even if
                            this field is set. This adds an annotation section to
                            the namespace. For example, if a new namespace is created
                            with node-selector=''type=user-node,region=east'', the
                            annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector
                            annotation is set on the project the value is used in
                            preference to the value we are setting for defaultNodeSelector
                            field. For instance, openshift.io/node-selector: "type=user-node,region=west"
                            means that the default of "type=user-node,region=east"
                            set in defaultNodeSelector would not be applied.'
                          type: string
                        mastersSchedulable:
                          description: 'MastersSchedulable allows masters nodes to
                            be schedulable. When this flag is turned on, all the master
                            nodes in the cluster will be made schedulable, so that
                            workload pods can run on them. The default value for this
                            field is false, meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on
                            the master nodes, extreme care must be taken to ensure
                            that cluster-critical control plane components are not
                            impacted. Please turn on this field after doing due diligence.'
                          type: boolean
                        policy:
                          description: 'DEPRECATED: the scheduler Policy API has been
                            deprecated and will be removed in a future release. policy
                            is a reference to a ConfigMap containing scheduler policy
                            which has user specified predicates and priorities. If
                            this ConfigMap is not available scheduler will default
                            to use DefaultAlgorithmProvider. The namespace for this
                            configmap is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        profile:
                          description: "profile sets which scheduling profile should
                            be set in order to configure scheduling decisions for
                            new pods. \n Valid values are \"LowNodeUtilization\",
                            \"HighNodeUtilization\", \"NoScoring\" Defaults to \"LowNodeUtilization\""
                          enum:
                          - ""
                          - LowNodeUtilization
                          - HighNodeUtilization
                          - NoScoring
                          type: string
                      type: object
                    secretRefs:
                      description: "SecretRefs holds references to any secrets referenced
                        by configuration entries. Entries can reference the secrets
                        using local object references. \n Deprecated This field is
                        deprecated and will be removed in a future release"
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                  type: object
                controllerAvailabilityPolicy:
                  default: SingleReplica
                  description: ControllerAvailabilityPolicy specifies the availability
                    policy applied to critical control plane components. The default
                    value is SingleReplica.
                  type: string
                dns:
                  description: DNS specifies DNS configuration for the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  default:
                    managed:
                      storage:
                        persistentVolume:
                          size: 4Gi
                        type: PersistentVolume
                    managementType: Managed
                  description: Etcd specifies configuration for the control plane
                    etcd cluster. The default ManagementType is Managed. Once set,
                    the ManagementType cannot be changed.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            restoreSnapshotURL:
                              description: RestoreSnapshotURL allows an optional list
                                of URLs to be provided where an etcd snapshot can
                                be downloaded, for example a pre-signed URL referencing
                                a storage service, one URL per replica. This snapshot
                                will be restored on initial startup, only when the
                                etcd PV is empty.
                              items:
                                type: string
                              type: array
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n https://etcd-client:2379 \n If the
                            URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n etcd-client-ca.crt:
                                Certificate Authority value etcd-client.crt: Client
                                certificate value etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS indicates whether this cluster's nodes will be
                    running in FIPS mode. If set to true, the control plane's ignition
                    server will be configured to expect that nodes joining the cluster
                    will be FIPS-enabled.
                  type: boolean
                imageContentSources:
                  description: ImageContentSources specifies image mirrors that can
                    be used by cluster nodes to pull content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  description: InfraID is a globally unique identifier for the cluster.
                    This identifier will be used to associate various cloud resources
                    with the HostedCluster and its associated NodePools.
                  type: string
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: InfrastructureAvailabilityPolicy specifies the availability
                    policy applied to infrastructure services which run on cluster
                    nodes. The default value is SingleReplica.
                  type: string
                issuerURL:
                  default: https://kubernetes.default.svc
                  description: IssuerURL is an OIDC issuer URL which is used as the
                    issuer in all ServiceAccount tokens generated by the control plane
                    API server. The default value is kubernetes.default.svc, which
                    only works for in-cluster validation.
                  format: uri
                  type: string
                networking:
                  description: Networking specifies network configuration for the
                    cluster.
                  properties:
                    apiServer:
                      description: APIServer contains advanced network settings for
                        the API server that affect how the APIServer is exposed inside
                        a cluster node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress is the address that nodes
                            will use to talk to the API server. This is an address
                            associated with the loopback adapter of each node. If
                            not specified, 172.20.0.1 is used.
                          type: string
                        allowedCIDRBlocks:
                          description: AllowedCIDRBlocks is an allow list of CIDR
                            blocks that can access the APIServer If not specified,
                            traffic is allowed from all addresses. This depends on
                            underlying support by the cloud provider for Service LoadBalancerSourceRanges
                          items:
                            pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                            type: string
                          type: array
                        port:
                          description: Port is the port at which the APIServer is
                            exposed inside a node. Other pods using host networking
                            cannot listen on this port. If not specified, 6443 is
                            used.
                          format: int32
                          type: integer
                      type: object
                    clusterNetwork:
                      description: 'ClusterNetwork is the list of IP address pools
                        for pods. TODO: make this required in the next version of
                        the API'
                      items:
                        description: ClusterNetworkEntry is a single IP address block
                          for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool.
                            type: string
                          hostPrefix:
                            description: HostPrefix is the prefix size to allocate
                              to each node from the CIDR. For example, 24 would allocate
                              2^8=256 adresses to each node. If this field is not
                              used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                        - cidr
                        type: object
                      type: array
                    machineCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use MachineNetwork instead
                      format: cidr
                      type: string
                    machineNetwork:
                      description: 'MachineNetwork is the list of IP address pools
                        for machines. TODO: make this required in the next version
                        of the API'
                      items:
                        description: MachineNetworkEntry is a single IP address block
                          for node IP blocks.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for machines
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                    networkType:
                      default: OVNKubernetes
                      description: NetworkType specifies the SDN provider used for
                        cluster networking.
                      enum:
                      - OpenShiftSDN
                      - Calico
                      - OVNKubernetes
                      - Other
                      type: string
                    podCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use ClusterNetwork instead
                      format: cidr
                      type: string
                    serviceCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use ServiceNetwork instead
                      format: cidr
                      type: string
                    serviceNetwork:
                      description: 'ServiceNetwork is the list of IP address pools
                        for services. NOTE: currently only one entry is supported.
                        TODO: make this required in the next version of the API'
                      items:
                        description: ServiceNetworkEntry is a single IP address block
                          for the service network.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for services
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                  required:
                  - networkType
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector when specified, must be true for the pods
                    managed by the HostedCluster to be scheduled.
                  type: object
                olmCatalogPlacement:
                  default: management
                  description: OLMCatalogPlacement specifies the placement of OLM
                    catalog components. By default, this is set to management and
                    OLM catalog components are deployed onto the management cluster.
                    If set to guest, the OLM catalog components will be deployed onto
                    the guest cluster.
                  enum:
                  - management
                  - guest
                  type: string
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the cluster and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: AdditionalAllowedPrincipals specifies a list
                            of additional allowed principal ARNs to be added to the
                            hosted control plane's VPC Endpoint Service to enable
                            additional VPC Endpoint connection requests to be automatically
                            accepted. See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            type: string
                          type: array
                        cloudProviderConfig:
                          description: 'CloudProviderConfig specifies AWS networking
                            configuration for the control plane. This is mainly used
                            for cloud provider controller config: https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                            TODO(dan): should this be named AWSNetworkConfig?'
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        controlPlaneOperatorCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        kubeCloudControllerCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                          x-kubernetes-list-map-keys:
                          - key
                          x-kubernetes-list-type: map
                        roles:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          items:
                            properties:
                              arn:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - arn
                            - name
                            - namespace
                            type: object
                          type: array
                        rolesRef:
                          description: RolesRef contains references to various AWS
                            IAM roles required to enable integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "ControlPlaneOperatorARN  is an ARN value
                                referencing a role appropriate for the Control Plane
                                Operator. \n The following is an example of a valid
                                policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"ec2:CreateVpcEndpoint\", \"ec2:DescribeVpcEndpoints\",
                                \"ec2:ModifyVpcEndpoint\", \"ec2:DeleteVpcEndpoints\",
                                \"ec2:CreateTags\", \"route53:ListHostedZones\" ],
                                \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\":
                                [ \"route53:ChangeResourceRecordSets\", \"route53:ListResourceRecordSets\"
                                ], \"Resource\": \"arn:aws:route53:::%s\" } ] }"
                              type: string
                            imageRegistryARN:
                              description: "ImageRegistryARN is an ARN value referencing
                                a role appropriate for the Image Registry Operator.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"s3:CreateBucket\",
                                \"s3:DeleteBucket\", \"s3:PutBucketTagging\", \"s3:GetBucketTagging\",
                                \"s3:PutBucketPublicAccessBlock\", \"s3:GetBucketPublicAccessBlock\",
                                \"s3:PutEncryptionConfiguration\", \"s3:GetEncryptionConfiguration\",
                                \"s3:PutLifecycleConfiguration\", \"s3:GetLifecycleConfiguration\",
                                \"s3:GetBucketLocation\", \"s3:ListBucket\", \"s3:GetObject\",
                                \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucketMultipartUploads\",
                                \"s3:AbortMultipartUpload\", \"s3:ListMultipartUploadParts\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            ingressARN:
                              description: "The referenced role must have a trust
                                relationship that allows it to be assumed via web
                                identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                }}:sub\": {{ .ServiceAccounts }} } } } ] } \n IngressARN
                                is an ARN value referencing a role appropriate for
                                the Ingress Operator. \n The following is an example
                                of a valid policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"elasticloadbalancing:DescribeLoadBalancers\",
                                \"tag:GetResources\", \"route53:ListHostedZones\"
                                ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\",
                                \"Action\": [ \"route53:ChangeResourceRecordSets\"
                                ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\",
                                \"arn:aws:route53:::PRIVATE_ZONE_ID\" ] } ] }"
                              type: string
                            kubeCloudControllerARN:
                              description: "KubeCloudControllerARN is an ARN value
                                referencing a role appropriate for the KCM/KCC. \n
                                The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeImages\",
                                \"ec2:DescribeRegions\", \"ec2:DescribeRouteTables\",
                                \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                                \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                                \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                                \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                                \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\",
                                \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                                \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                                \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                                \"elasticloadbalancing:CreateLoadBalancerListeners\",
                                \"elasticloadbalancing:ConfigureHealthCheck\", \"elasticloadbalancing:DeleteLoadBalancer\",
                                \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                                \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",
                                \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",
                                \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                                \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                                \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                                \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                                \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DescribeListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                                \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                                \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                                \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                                \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                } ] }"
                              type: string
                            networkARN:
                              description: "NetworkARN is an ARN value referencing
                                a role appropriate for the Network Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\",
                                \"ec2:DescribeInstanceStatus\", \"ec2:DescribeInstanceTypes\",
                                \"ec2:UnassignPrivateIpAddresses\", \"ec2:AssignPrivateIpAddresses\",
                                \"ec2:UnassignIpv6Addresses\", \"ec2:AssignIpv6Addresses\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeNetworkInterfaces\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            nodePoolManagementARN:
                              description: "NodePoolManagementARN is an ARN value
                                referencing a role appropriate for the CAPI Controller.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:AllocateAddress\", \"ec2:AssociateRouteTable\",
                                \"ec2:AttachInternetGateway\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateInternetGateway\", \"ec2:CreateNatGateway\",
                                \"ec2:CreateRoute\", \"ec2:CreateRouteTable\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateSubnet\", \"ec2:CreateTags\", \"ec2:DeleteInternetGateway\",
                                \"ec2:DeleteNatGateway\", \"ec2:DeleteRouteTable\",
                                \"ec2:DeleteSecurityGroup\", \"ec2:DeleteSubnet\",
                                \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\",
                                \"ec2:DescribeAddresses\", \"ec2:DescribeAvailabilityZones\",
                                \"ec2:DescribeImages\", \"ec2:DescribeInstances\",
                                \"ec2:DescribeInternetGateways\", \"ec2:DescribeNatGateways\",
                                \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeNetworkInterfaceAttribute\",
                                \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                                \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\",
                                \"ec2:DisassociateRouteTable\", \"ec2:DisassociateAddress\",
                                \"ec2:ModifyInstanceAttribute\", \"ec2:ModifyNetworkInterfaceAttribute\",
                                \"ec2:ModifySubnetAttribute\", \"ec2:ReleaseAddress\",
                                \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\",
                                \"ec2:TerminateInstances\", \"tag:GetResources\",
                                \"ec2:CreateLaunchTemplate\", \"ec2:CreateLaunchTemplateVersion\",
                                \"ec2:DescribeLaunchTemplates\", \"ec2:DescribeLaunchTemplateVersions\",
                                \"ec2:DeleteLaunchTemplate\", \"ec2:DeleteLaunchTemplateVersions\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                }, { \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\":
                                \"elasticloadbalancing.amazonaws.com\" } }, \"Action\":
                                [ \"iam:CreateServiceLinkedRole\" ], \"Resource\":
                                [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                                ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                                ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\"
                                ], \"Effect\": \"Allow\" } ] }"
                              type: string
                            storageARN:
                              description: "StorageARN is an ARN value referencing
                                a role appropriate for the Storage Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:AttachVolume\",
                                \"ec2:CreateSnapshot\", \"ec2:CreateTags\", \"ec2:CreateVolume\",
                                \"ec2:DeleteSnapshot\", \"ec2:DeleteTags\", \"ec2:DeleteVolume\",
                                \"ec2:DescribeInstances\", \"ec2:DescribeSnapshots\",
                                \"ec2:DescribeTags\", \"ec2:DescribeVolumes\", \"ec2:DescribeVolumesModifications\",
                                \"ec2:DetachVolume\", \"ec2:ModifyVolume\" ], \"Resource\":
                                \"*\" } ] }"
                              type: string
                          required:
                          - controlPlaneOperatorARN
                          - imageRegistryARN
                          - ingressARN
                          - kubeCloudControllerARN
                          - networkARN
                          - nodePoolManagementARN
                          - storageARN
                          type: object
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - controlPlaneOperatorCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - rolesRef
                      type: object
                    azure:
                      description: Azure defines azure specific settings
                      properties:
                        credentials:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        machineIdentityID:
                          type: string
                        resourceGroup:
                          type: string
                        securityGroupName:
                          type: string
                        subnetName:
                          type: string
                        subscriptionID:
                          type: string
                        vnetID:
                          type: string
                        vnetName:
                          type: string
                      required:
                      - credentials
                      - location
                      - machineIdentityID
                      - resourceGroup
                      - securityGroupName
                      - subnetName
                      - subscriptionID
                      - vnetID
                      - vnetName
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: KubeVirt defines KubeVirt specific settings for
                        cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: "BaseDomainPassthrough toggles whether or not
                            an automatically generated base domain for the guest cluster
                            should be used that is a subdomain of the management cluster's
                            *.apps DNS. \n For the KubeVirt platform, the basedomain
                            can be autogenerated using the *.apps domain of the management/infra
                            hosting cluster This makes the guest cluster's base domain
                            a subdomain of the hypershift infra/mgmt cluster's base
                            domain. \n Example: Infra/Mgmt cluster's DNS Base: example.com
                            Cluster: mgmt-cluster.example.com Apps:    *.apps.mgmt-cluster.example.com
                            KubeVirt Guest cluster's DNS Base: apps.mgmt-cluster.example.com
                            Cluster: guest.apps.mgmt-cluster.example.com Apps: *.apps.guest.apps.mgmt-cluster.example.com
                            \n This is possible using OCP wildcard routes"
                          type: boolean
                      type: object
                    powervs:
                      description: PowerVS specifies configuration for clusters running
                        on IBMCloud Power VS Service. This field is immutable. Once
                        set, It can't be changed.
                      properties:
                        accountID:
                          description: AccountID is the IBMCloud account id. This
                            field is immutable. Once set, It can't be changed.
                          type: string
                        cisInstanceCRN:
                          description: CISInstanceCRN is the IBMCloud CIS Service
                            Instance's Cloud Resource Name This field is immutable.
                            Once set, It can't be changed.
                          pattern: '^crn:'
                          type: string
                        ingressOperatorCloudCreds:
                          description: IngressOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for ingress
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. This field is immutable.
                            Once set, It can't be changed. \n TODO(dan): document
                            the \"cloud controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. This field is
                            immutable. Once set, It can't be changed. \n TODO(dan):
                            document the \"node pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the IBMCloud region in which the
                            cluster resides. This configures the OCP control plane
                            cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release. This field
                            is immutable. Once set, It can't be changed.
                          type: string
                        resourceGroup:
                          description: ResourceGroup is the IBMCloud Resource Group
                            in which the cluster resides. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                        serviceInstanceID:
                          description: "ServiceInstance is the reference to the Power
                            VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances
                            at a specific geographic region. serviceInstance can be
                            created via IBM Cloud catalog or CLI. ServiceInstanceID
                            is the unique identifier that can be obtained from IBM
                            Cloud UI or IBM Cloud cli. \n More detail about Power
                            VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            \n This field is immutable. Once set, It can't be changed."
                          type: string
                        storageOperatorCloudCreds:
                          description: StorageOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for storage
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: Subnet is the subnet to use for control plane
                            cloud resources. This field is immutable. Once set, It
                            can't be changed.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        vpc:
                          description: VPC specifies IBM Cloud PowerVS Load Balancing
                            configuration for the control plane. This field is immutable.
                            Once set, It can't be changed.
                          properties:
                            name:
                              description: Name for VPC to used for all the service
                                load balancer. This field is immutable. Once set,
                                It can't be changed.
                              type: string
                            region:
                              description: Region is the IBMCloud region in which
                                VPC gets created, this VPC used for all the ingress
                                traffic into the OCP cluster. This field is immutable.
                                Once set, It can't be changed.
                              type: string
                            subnet:
                              description: Subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              type: string
                            zone:
                              description: Zone is the availability zone where load
                                balancer cloud resources are created. This field is
                                immutable. Once set, It can't be changed.
                              type: string
                          required:
                          - name
                          - region
                          type: object
                        zone:
                          description: Zone is the availability zone where control
                            plane cloud resources are created. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                      required:
                      - accountID
                      - cisInstanceCRN
                      - ingressOperatorCloudCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - resourceGroup
                      - serviceInstanceID
                      - storageOperatorCloudCreds
                      - subnet
                      - vpc
                      - zone
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                  required:
                  - type
                  type: object
                pullSecret:
                  description: PullSecret references a pull secret to be injected
                    into the container runtime of all cluster nodes. The secret must
                    have a key named ".dockerconfigjson" whose value is the pull secret
                    JSON.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                release:
                  description: "Release specifies the desired OCP release payload
                    for the hosted cluster. \n Updating this field will trigger a
                    rollout of the control plane. The behavior of the rollout will
                    be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy."
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
                secretEncryption:
                  description: SecretEncryption specifies a Kubernetes secret encryption
                    strategy for the control plane.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "The referenced role must have a trust
                                    relationship that allows it to be assumed via
                                    web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                    Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                    \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                    \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                    }}:sub\": {{ .ServiceAccounts }} } } } ] } \n
                                    AWSKMSARN is an ARN value referencing a role appropriate
                                    for managing the auth via the AWS KMS key. \n
                                    The following is an example of a valid policy
                                    document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Action\": [ \"kms:Encrypt\",
                                    \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\",
                                    \"kms:DescribeKey\" ], \"Resource\": %q } ] }"
                                  type: string
                                credentials:
                                  description: Deprecated This field is deprecated
                                    and will be removed in a future release. Use AWSKMSRoleARN
                                    instead. Credentials contains the name of the
                                    secret that holds the aws credentials that can
                                    be used to make the necessary KMS calls. It should
                                    at key AWSCredentialsFileSecretKey contain the
                                    aws credentials file that can be used to configure
                                    AWS SDKs
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - awsKms
                              - credentials
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                serviceAccountSigningKey:
                  description: ServiceAccountSigningKey is a reference to a secret
                    containing the private key used by the service account token issuer.
                    The secret is expected to contain a single key named "key". If
                    not specified, a service account signing key will be generated
                    automatically for the cluster. When specifying a service account
                    signing key, a IssuerURL must also be specified.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                services:
                  description: "Services specifies how individual control plane services
                    are published from the hosting cluster of the control plane. \n
                    If a given service is not present in this list, it will be exposed
                    publicly by default."
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          loadBalancer:
                            description: LoadBalancer configures exposing a service
                              using a LoadBalancer.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the LoadBalancer.
                                type: string
                            type: object
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          route:
                            description: Route configures exposing a service using
                              a Route.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the Route.
                                type: string
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: SSHKey references an SSH key to be injected into all
                    cluster node sshd servers. The secret must have a single key "id_rsa.pub"
                    whose value is the public part of an SSH key.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
              - networking
              - platform
              - pullSecret
              - release
              - services
              - sshKey
              type: object
            status:
              description: Status is the latest observed status of the HostedCluster.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a control plane's current state.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint contains the endpoint information
                    by which external clients can access the control plane. This is
                    populated after the infrastructure is ready.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint is the endpoint injected in the ign
                    config userdata. It exposes the config for instances to become
                    kubernetes nodes.
                  type: string
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret that
                    contains the initial kubeadmin user password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                kubeconfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for the cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                oauthCallbackURLTemplate:
                  description: OAuthCallbackURLTemplate contains a template for the
                    URL to use as a callback for identity providers. The [identity-provider-name]
                    placeholder must be replaced with the name of an identity provider
                    defined on the HostedCluster. This is populated after the infrastructure
                    is ready.
                  type: string
                version:
                  description: Version is the status of the release version applied
                    to the HostedCluster.
                  properties:
                    availableUpdates:
                      description: availableUpdates contains updates recommended for
                        this cluster. Updates which appear in conditionalUpdates but
                        not in availableUpdates may expose this cluster to known issues.
                        This list may be empty if no updates are recommended, if the
                        update service is unavailable, or if an invalid channel has
                        been specified.
                      items:
                        description: Release represents an OpenShift release image
                          and associated metadata.
                        properties:
                          channels:
                            description: channels is the set of Cincinnati channels
                              to which the release currently belongs.
                            items:
                              type: string
                            type: array
                          image:
                            description: image is a container image location that
                              contains the update. When this field is part of spec,
                              image is optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          url:
                            description: url contains information about this release.
                              This URL is set by the 'url' metadata property on a
                              release or the metadata returned by the update API and
                              should be displayed as a link in user interfaces. The
                              URL field may not be set for test or nightly releases.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec,
                              version is optional if image is specified.
                            type: string
                        type: object
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: conditionalUpdates contains the list of updates
                        that may be recommended for this cluster if it meets specific
                        required conditions. Consumers interested in the set of updates
                        that are actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an
                        empty or invalid channel has been specified.
                      items:
                        description: ConditionalUpdate represents an update which
                          is recommended to some clusters on the version the current
                          cluster is reconciling, but which may not be recommended
                          for the current cluster.
                        properties:
                          conditions:
                            description: 'conditions represents the observations of
                              the conditional update''s current status. Known types
                              are: * Evaluating, for whether the cluster-version operator
                              will attempt to evaluate any risks[].matchingRules.
                              * Recommended, for whether the update is recommended
                              for the current cluster.'
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: channels is the set of Cincinnati channels
                                  to which the release currently belongs.
                                items:
                                  type: string
                                type: array
                              image:
                                description: image is a container image location that
                                  contains the update. When this field is part of
                                  spec, image is optional if version is specified
                                  and the availableUpdates field contains a matching
                                  version.
                                type: string
                              url:
                                description: url contains information about this release.
                                  This URL is set by the 'url' metadata property on
                                  a release or the metadata returned by the update
                                  API and should be displayed as a link in user interfaces.
                                  The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: version is a semantic versioning identifying
                                  the update version. When this field is part of spec,
                                  version is optional if image is specified.
                                type: string
                            type: object
                          risks:
                            description: risks represents the range of issues associated
                              with updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend
                              the update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: ConditionalUpdateRisk represents a reason
                                and cluster-state for not recommending a conditional
                                update.
                              properties:
                                matchingRules:
                                  description: matchingRules is a slice of conditions
                                    for deciding which clusters match the risk and
                                    which do not. The slice is ordered by decreasing
                                    precedence. The cluster-version operator will
                                    walk the slice in order, and stop after the first
                                    it can successfully evaluate. If no condition
                                    can be successfully evaluated, the update will
                                    not be recommended.
                                  items:
                                    description: ClusterCondition is a union of typed
                                      cluster conditions.  The 'type' property determines
                                      which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may
                                      match, not match, or fail to evaluate.
                                    properties:
                                      promql:
                                        description: promQL represents a cluster condition
                                          based on PromQL.
                                        properties:
                                          promql:
                                            description: PromQL is a PromQL query
                                              classifying clusters. This query query
                                              should return a 1 in the match case
                                              and a 0 in the does-not-match case.
                                              Queries which return no time series,
                                              or which return values besides 0 or
                                              1, are evaluation failures.
                                            type: string
                                        required:
                                        - promql
                                        type: object
                                      type:
                                        description: type represents the cluster-condition
                                          type. This defines the members and semantics
                                          of any additional properties.
                                        enum:
                                        - Always
                                        - PromQL
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: message provides additional information
                                    about the risk of updating, in the event that
                                    matchingRules match the cluster state. This is
                                    only to be consumed by humans. It may contain
                                    Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name is the CamelCase reason for not
                                    recommending a conditional update, in the event
                                    that matchingRules match the cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this
                                    risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                              - matchingRules
                              - message
                              - name
                              - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - release
                        - risks
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: desired is the version that the cluster is reconciling
                        towards. If the cluster is not yet fully initialized desired
                        will be set with the information available, which may be an
                        image or a tag.
                      properties:
                        channels:
                          description: channels is the set of Cincinnati channels
                            to which the release currently belongs.
                          items:
                            type: string
                          type: array
                        image:
                          description: image is a container image location that contains
                            the update. When this field is part of spec, image is
                            optional if version is specified and the availableUpdates
                            field contains a matching version.
                          type: string
                        url:
                          description: url contains information about this release.
                            This URL is set by the 'url' metadata property on a release
                            or the metadata returned by the update API and should
                            be displayed as a link in user interfaces. The URL field
                            may not be set for test or nightly releases.
                          type: string
                        version:
                          description: version is a semantic versioning identifying
                            the update version. When this field is part of spec, version
                            is optional if image is specified.
                          type: string
                      type: object
                    history:
                      description: history contains a list of the most recent versions
                        applied to the cluster. This value may be empty during cluster
                        startup, and then will be updated when a new update is being
                        applied. The newest update is first in the list and it is
                        ordered by recency. Updates in the history have state Completed
                        if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of
                        update history is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to
                          the cluster.
                        properties:
                          acceptedRisks:
                            description: acceptedRisks records risks which were accepted
                              to initiate the update. For example, it may menition
                              an Upgradeable=False or missing signature that was overriden
                              via desiredUpdate.force, or an update that was initiated
                              despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: completionTime, if set, is when the update
                              was fully applied. The update that is currently being
                              applied will have a null completion time. Completion
                              time will always be set for entries that are not the
                              current update (usually to the started time of the next
                              update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: image is a container image location that
                              contains the update. This value is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update
                              was started.
                            format: date-time
                            type: string
                          state:
                            description: state reflects whether the update was fully
                              applied. The Partial state indicates the update is not
                              fully applied, while the Completed state indicates the
                              update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: verified indicates whether the provided update
                              was properly verified before it was installed. If this
                              is false the cluster may not be trusted. Verified does
                              not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: version is a semantic versioning identifying
                              the update version. If the requested image does not
                              define a version, or if a failure occurs retrieving
                              the image, this value may be empty.
                            type: string
                        required:
                        - completionTime
                        - image
                        - startedTime
                        - state
                        - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: observedGeneration reports which version of the
                        spec is being synced. If this value is not equal to metadata.generation,
                        then the desired and conditions fields may represent a previous
                        version.
                      format: int64
                      type: integer
                  required:
                  - availableUpdates
                  - desired
                  - observedGeneration
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Version
        jsonPath: .status.version.history[?(@.state=="Completed")].version
        name: Version
        type: string
      - description: KubeConfig Secret
        jsonPath: .status.kubeconfig.name
        name: KubeConfig
        type: string
      - description: Progress
        jsonPath: .status.version.history[?(@.state!="")].state
        name: Progress
        type: string
      - description: Available
        jsonPath: .status.conditions[?(@.type=="Available")].status
        name: Available
        type: string
      - description: Progressing
        jsonPath: .status.conditions[?(@.type=="Progressing")].status
        name: Progressing
        type: string
      - description: Message
        jsonPath: .status.conditions[?(@.type=="Available")].message
        name: Message
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HostedCluster is the primary representation of a HyperShift
            cluster and encapsulates the control plane and common data plane configuration.
            Creating a HostedCluster results in a fully functional OpenShift control
            plane with no attached nodes. To support workloads (e.g. pods), a HostedCluster
            may have one or more associated NodePool resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the HostedCluster.
              properties:
                additionalTrustBundle:
                  description: AdditionalTrustBundle is a reference to a ConfigMap
                    containing a PEM-encoded X.509 certificate bundle that will be
                    added to the hosted controlplane and nodes
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                auditWebhook:
                  description: "AuditWebhook contains metadata for configuring an
                    audit webhook endpoint for a cluster to process cluster audit
                    events. It references a secret that contains the webhook information
                    for the audit webhook endpoint. It is a secret because if the
                    endpoint has mTLS the kubeconfig will contain client keys. The
                    kubeconfig needs to be stored in the secret with a secret key
                    name that corresponds to the constant AuditWebhookKubeconfigKey.
                    \n This field is currently only supported on the IBMCloud platform."
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: Autoscaling specifies auto-scaling behavior that applies
                    to all NodePools associated with the control plane.
                  properties:
                    maxNodeProvisionTime:
                      description: MaxNodeProvisionTime is the maximum time to wait
                        for node provisioning before considering the provisioning
                        to be unsuccessful, expressed as a Go duration string. The
                        default is 15 minutes.
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: MaxNodesTotal is the maximum allowable number of
                        nodes across all NodePools for a HostedCluster. The autoscaler
                        will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: MaxPodGracePeriod is the maximum seconds to wait
                        for graceful pod termination before scaling down a NodePool.
                        The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: "PodPriorityThreshold enables users to schedule
                        \"best-effort\" pods, which shouldn't trigger autoscaler actions,
                        but only run when there are spare resources available. The
                        default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption"
                      format: int32
                      type: integer
                  type: object
                channel:
                  description: channel is an identifier for explicitly requesting
                    that a non-default set of updates be applied to this cluster.
                    The default channel will be contain stable updates that are appropriate
                    for production clusters.
                  type: string
                clusterID:
                  description: ClusterID uniquely identifies this cluster. This is
                    expected to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    in hexadecimal values). As with a Kubernetes metadata.uid, this
                    ID uniquely identifies this cluster in space and time. This value
                    identifies the cluster in metrics pushed to telemetry and metrics
                    produced by the control plane operators. If a value is not specified,
                    an ID is generated. After initial creation, the value is immutable.
                  pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
                  type: string
                configuration:
                  description: Configuration specifies configuration for individual
                    OCP components in the cluster, represented as embedded resources
                    that correspond to the openshift configuration API.
                  properties:
                    apiServer:
                      description: APIServer holds configuration (like serving certificates,
                        client CA and CORS domains) shared by all API servers in the
                        system, among them especially kube-apiserver and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: additionalCORSAllowedOrigins lists additional,
                            user-defined regular expressions describing hosts for
                            which the API server allows access using the CORS headers.
                            This may be needed to access the API and the integrated
                            OAuth server from JavaScript applications. The values
                            are regular expressions that correspond to the Golang
                            regular expression language.
                          items:
                            type: string
                          type: array
                        audit:
                          default:
                            profile: Default
                          description: audit specifies the settings for audit configuration
                            to be applied to all OpenShift-provided API servers in
                            the cluster.
                          properties:
                            customRules:
                              description: customRules specify profiles per group.
                                These profile take precedence over the top-level profile
                                field if they apply. They are evaluation from top
                                to bottom and the first one that matches, applies.
                              items:
                                description: AuditCustomRule describes a custom rule
                                  for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request
                                      user must be member of in order to this profile
                                      to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: "profile specifies the name of the
                                      desired audit policy configuration to be deployed
                                      to all OpenShift-provided API servers in the
                                      cluster. \n The following profiles are provided:
                                      - Default: the existing default policy. - WriteRequestBodies:
                                      like 'Default', but logs request and response
                                      HTTP payloads for write requests (create, update,
                                      patch). - AllRequestBodies: like 'WriteRequestBodies',
                                      but also logs request and response HTTP payloads
                                      for read requests (get, list). - None: no requests
                                      are logged at all, not even oauthaccesstokens
                                      and oauthauthorizetokens. \n If unset, the 'Default'
                                      profile is used as the default."
                                    enum:
                                    - Default
                                    - WriteRequestBodies
                                    - AllRequestBodies
                                    - None
                                    type: string
                                required:
                                - group
                                - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: "profile specifies the name of the desired
                                top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers
                                in the cluster (kube-apiserver, openshift-apiserver
                                and oauth-apiserver), with the exception of those
                                requests that match one or more of the customRules.
                                \n The following profiles are provided: - Default:
                                default policy which means MetaData level logging
                                with the exception of events (not logged at all),
                                oauthaccesstokens and oauthauthorizetokens (both logged
                                at RequestBody level). - WriteRequestBodies: like
                                'Default', but logs request and response HTTP payloads
                                for write requests (create, update, patch). - AllRequestBodies:
                                like 'WriteRequestBodies', but also logs request and
                                response HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens
                                and oauthauthorizetokens. \n Warning: It is not recommended
                                to disable audit logging by using the `None` profile
                                unless you are fully aware of the risks of not logging
                                data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation
                                arises, you might need to enable audit logging and
                                reproduce the issue in order to troubleshoot properly.
                                \n If unset, the 'Default' profile is used as the
                                default."
                              enum:
                              - Default
                              - WriteRequestBodies
                              - AllRequestBodies
                              - None
                              type: string
                          type: object
                        clientCA:
                          description: 'clientCA references a ConfigMap containing
                            a certificate bundle for the signers that will be recognized
                            for incoming client certificates in addition to the operator
                            managed signers. If this is empty, then only operator
                            managed signers are valid. You usually only have to set
                            this if you have your own PKI you wish to honor client
                            certificates from. The ConfigMap must exist in the openshift-config
                            namespace and contain the following required fields: -
                            ConfigMap.Data["ca-bundle.crt"] - CA bundle.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption
                            of resources at the datastore layer.
                          properties:
                            type:
                              description: "type defines what encryption type should
                                be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the
                                empty string), identity is implied. The behavior of
                                unset can and will change over time.  Even if encryption
                                is enabled by default, the meaning of unset may change
                                to a different encryption type based on changes in
                                best practices. \n When encryption is enabled, all
                                sensitive resources shipped with the platform are
                                encrypted. This list of sensitive resources can and
                                will change over time.  The current authoritative
                                list is: \n 1. secrets 2. configmaps 3. routes.route.openshift.io
                                4. oauthaccesstokens.oauth.openshift.io 5. oauthauthorizetokens.oauth.openshift.io"
                              enum:
                              - ""
                              - identity
                              - aescbc
                              type: string
                          type: object
                        servingCerts:
                          description: servingCert is the TLS cert info for serving
                            secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: namedCertificates references secrets containing
                                the TLS cert info for serving secure traffic to specific
                                hostnames. If no named certificates are provided,
                                or no named certificates match the server name as
                                understood by a client, the defaultServingCertificate
                                will be used.
                              items:
                                description: APIServerNamedServingCert maps a server
                                  DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: names is a optional list of explicit
                                      DNS names (leading wildcards allowed) that should
                                      use this certificate to serve secure traffic.
                                      If no names are provided, the implicit names
                                      will be extracted from the certificates. Exact
                                      names trump over wildcard names. Explicit names
                                      defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    type: array
                                  servingCertificate:
                                    description: 'servingCertificate references a
                                      kubernetes.io/tls type secret containing the
                                      TLS cert info for serving secure traffic. The
                                      secret must exist in the openshift-config namespace
                                      and contain the following required fields: -
                                      Secret.Data["tls.key"] - TLS private key. -
                                      Secret.Data["tls.crt"] - TLS certificate.'
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              type: array
                          type: object
                        tlsSecurityProfile:
                          description: "tlsSecurityProfile specifies settings for
                            TLS connections for externally exposed servers. \n If
                            unset, a default (which may change between releases) is
                            chosen. Note that only Old, Intermediate and Custom profiles
                            are currently supported, and the maximum available MinTLSVersions
                            is VersionTLS12."
                          properties:
                            custom:
                              description: "custom is a user-defined TLS security
                                profile. Be extremely careful using a custom profile
                                as invalid configurations can be catastrophic. An
                                example custom profile looks like this: \n ciphers:
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256
                                minTLSVersion: TLSv1.1"
                              nullable: true
                              properties:
                                ciphers:
                                  description: "ciphers is used to specify the cipher
                                    algorithms that are negotiated during the TLS
                                    handshake.  Operators may remove entries their
                                    operands do not support.  For example, to use
                                    DES-CBC3-SHA  (yaml): \n ciphers: - DES-CBC3-SHA"
                                  items:
                                    type: string
                                  type: array
                                minTLSVersion:
                                  description: "minTLSVersion is used to specify the
                                    minimal version of the TLS protocol that is negotiated
                                    during the TLS handshake. For example, to use
                                    TLS versions 1.1, 1.2 and 1.3 (yaml): \n minTLSVersion:
                                    TLSv1.1 \n NOTE: currently the highest minTLSVersion
                                    allowed is VersionTLS12"
                                  enum:
                                  - VersionTLS10
                                  - VersionTLS11
                                  - VersionTLS12
                                  - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: "intermediate is a TLS security profile
                                based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                minTLSVersion: TLSv1.2"
                              nullable: true
                              type: object
                            modern:
                              description: "modern is a TLS security profile based
                                on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                              nullable: true
                              type: object
                            old:
                              description: "old is a TLS security profile based on:
                                \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                - DHE-RSA-CHACHA20-POLY1305 - ECDHE-ECDSA-AES128-SHA256
                                - ECDHE-RSA-AES128-SHA256 - ECDHE-ECDSA-AES128-SHA
                                - ECDHE-RSA-AES128-SHA - ECDHE-ECDSA-AES256-SHA384
                                - ECDHE-RSA-AES256-SHA384 - ECDHE-ECDSA-AES256-SHA
                                - ECDHE-RSA-AES256-SHA - DHE-RSA-AES128-SHA256 - DHE-RSA-AES256-SHA256
                                - AES128-GCM-SHA256 - AES256-GCM-SHA384 - AES128-SHA256
                                - AES256-SHA256 - AES128-SHA - AES256-SHA - DES-CBC3-SHA
                                minTLSVersion: TLSv1.0"
                              nullable: true
                              type: object
                            type:
                              description: "type is one of Old, Intermediate, Modern
                                or Custom. Custom provides the ability to specify
                                individual TLS security profile parameters. Old, Intermediate
                                and Modern are TLS security profiles based on: \n
                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                                \n The profiles are intent based, so they may change
                                over time as new ciphers are developed and existing
                                ciphers are found to be insecure.  Depending on precisely
                                which ciphers are available to a process, the list
                                may be reduced. \n Note that the Modern profile is
                                currently not supported because it is not yet well
                                adopted by common software libraries."
                              enum:
                              - Old
                              - Intermediate
                              - Modern
                              - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: Authentication specifies cluster-wide settings
                        for authentication (like OAuth and webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: 'oauthMetadata contains the discovery endpoint
                            data for OAuth 2.0 Authorization Server Metadata for an
                            external OAuth server. This discovery document can be
                            viewed from its served location: oc get --raw ''/.well-known/oauth-authorization-server''
                            For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status. The key
                            "oauthMetadata" is used to locate the data. If specified
                            and the config map or expected key is not found, no metadata
                            is served. If the specified metadata is not valid, no
                            metadata is served. The namespace for this config map
                            is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        serviceAccountIssuer:
                          description: 'serviceAccountIssuer is the identifier of
                            the bound service account token issuer. The default is
                            https://kubernetes.default.svc WARNING: Updating this
                            field will result in the invalidation of all bound tokens
                            with the previous issuer value. Unless the holder of a
                            bound token has explicit support for a change in issuer,
                            they will not request a new bound token until pod restart
                            or until their existing token exceeds 80% of its duration.'
                          type: string
                        type:
                          description: type identifies the cluster managed, user facing
                            authentication mode in use. Specifically, it manages the
                            component that responds to login attempts. The default
                            is IntegratedOAuth.
                          type: string
                        webhookTokenAuthenticator:
                          description: webhookTokenAuthenticator configures a remote
                            token reviewer. These remote authentication webhooks can
                            be used to verify bearer tokens via the tokenreviews.authentication.k8s.io
                            REST API. This is required to honor bearer tokens that
                            are provisioned by an external authentication service.
                          properties:
                            kubeConfig:
                              description: "kubeConfig references a secret that contains
                                kube config file data which describes how to access
                                the remote webhook service. The namespace for the
                                referenced secret is openshift-config. \n For further
                                details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                \n The key \"kubeConfig\" is used to locate the data.
                                If the secret or expected key is not found, the webhook
                                is not honored. If the specified kube config data
                                is not valid, the webhook is not honored."
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting
                            it has no effect.
                          items:
                            description: deprecatedWebhookTokenAuthenticator holds
                              the necessary configuration options for a remote token
                              authenticator. It's the same as WebhookTokenAuthenticator
                              but it's missing the 'required' validation on KubeConfig
                              field.
                            properties:
                              kubeConfig:
                                description: 'kubeConfig contains kube config file
                                  data which describes how to access the remote webhook
                                  service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the
                                  webhook is not honored. If the specified kube config
                                  data is not valid, the webhook is not honored. The
                                  namespace for this secret is determined by the point
                                  of use.'
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                      type: object
                    featureGate:
                      description: FeatureGate holds cluster-wide information about
                        feature gates.
                      properties:
                        customNoUpgrade:
                          description: customNoUpgrade allows the enabling or disabling
                            of any feature. Turning this feature set on IS NOT SUPPORTED,
                            CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its
                            nature, this setting cannot be validated.  If you have
                            any typos or accidentally apply invalid combinations your
                            cluster may fail in an unrecoverable way.  featureSet
                            must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates
                                that you want to force off
                              items:
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates
                                that you want to force on
                              items:
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: featureSet changes the list of features in
                            the cluster.  The default is empty.  Be very careful adjusting
                            this setting. Turning on or off features may cause irreversible
                            changes in your cluster which cannot be undone.
                          type: string
                      type: object
                    image:
                      description: Image governs policies related to imagestream imports
                        and runtime configuration for external registries. It allows
                        cluster admins to configure which registries OpenShift is
                        allowed to import images from, extra CA trust bundles for
                        external registries, and policies to block or allow registry
                        hostnames. When exposing OpenShift's image registry to the
                        public, this also lets cluster admins specify the external
                        hostname.
                      properties:
                        additionalTrustedCA:
                          description: additionalTrustedCA is a reference to a ConfigMap
                            containing additional CAs that should be trusted during
                            imagestream import, pod image pull, build image pull,
                            and imageregistry pullthrough. The namespace for this
                            config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        allowedRegistriesForImport:
                          description: allowedRegistriesForImport limits the container
                            image registries that normal users may import images from.
                            Set this list to the registries that you trust to contain
                            valid Docker images and that you want applications to
                            be able to import from. Users with permission to create
                            Images or ImageStreamMappings via the API are not affected
                            by this policy - typically only administrators or system
                            integrations will have those permissions.
                          items:
                            description: RegistryLocation contains a location of the
                              registry specified by the registry domain name. The
                              domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: domainName specifies a domain name for
                                  the registry In case the registry use non-standard
                                  (80 or 443) port, the port should be included in
                                  the domain name as well.
                                type: string
                              insecure:
                                description: insecure indicates whether the registry
                                  is secure (https) or insecure (http) By default
                                  (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                        externalRegistryHostnames:
                          description: externalRegistryHostnames provides the hostnames
                            for the default external image registry. The external
                            hostname should be set only when the image registry is
                            exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]"
                            format.
                          items:
                            type: string
                          type: array
                        registrySources:
                          description: registrySources contains configuration that
                            determines how the container runtime should treat individual
                            registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not
                            contain configuration for the internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: "allowedRegistries are the only registries
                                permitted for image pull and push actions. All other
                                registries are denied. \n Only one of BlockedRegistries
                                or AllowedRegistries may be set."
                              items:
                                type: string
                              type: array
                            blockedRegistries:
                              description: "blockedRegistries cannot be used for image
                                pull and push actions. All other registries are permitted.
                                \n Only one of BlockedRegistries or AllowedRegistries
                                may be set."
                              items:
                                type: string
                              type: array
                            containerRuntimeSearchRegistries:
                              description: 'containerRuntimeSearchRegistries are registries
                                that will be searched when pulling images that do
                                not have fully qualified domains in their pull specs.
                                Registries will be searched in the order provided
                                in the list. Note: this search list only works with
                                the container runtime, i.e CRI-O. Will NOT work with
                                builds or imagestream imports.'
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which
                                do not have a valid TLS certificates or only support
                                HTTP connections.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    ingress:
                      description: Ingress holds cluster-wide information about ingress,
                        including the default ingress domain used for routes.
                      properties:
                        appsDomain:
                          description: appsDomain is an optional domain to use instead
                            of the one specified in the domain field when a Route
                            is created without specifying an explicit host. If appsDomain
                            is nonempty, this value is used to generate default host
                            values for Route. Unlike domain, appsDomain may be modified
                            after installation. This assumes a new ingresscontroller
                            has been setup with a wildcard certificate.
                          type: string
                        componentRoutes:
                          description: "componentRoutes is an optional list of routes
                            that are managed by OpenShift components that a cluster-admin
                            is able to configure the hostname and serving certificate
                            for. The namespace and name of each route in this list
                            should match an existing entry in the status.componentRoutes
                            list. \n To determine the set of configurable Routes,
                            look at namespace and name of entries in the .status.componentRoutes
                            list, where participating operators write the status of
                            configurable routes."
                          items:
                            description: ComponentRouteSpec allows for configuration
                              of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should
                                  be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: "name is the logical name of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: "namespace is the namespace of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: servingCertKeyPairSecret is a reference
                                  to a secret of type `kubernetes.io/tls` in the openshift-config
                                  namespace. The serving cert/key pair must match
                                  and will be used by the operator to fulfill the
                                  intent of serving with this name. If the custom
                                  hostname uses the default routing suffix of the
                                  cluster, the Secret specification for a serving
                                  certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - hostname
                            - name
                            - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - namespace
                          - name
                          x-kubernetes-list-type: map
                        domain:
                          description: "domain is used to generate a default host
                            name for a route when the route's host name is empty.
                            The generated host name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\".
                            \n It is also used as the default wildcard domain suffix
                            for ingress. The default ingresscontroller domain will
                            follow this pattern: \"*.<domain>\". \n Once set, changing
                            domain is not currently supported."
                          type: string
                        loadbalancer:
                          description: loadBalancer contains the load balancer details
                            in general which are not only specific to the underlying
                            infrastructure provider of the current cluster and are
                            required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: platform holds configuration specific to
                                the underlying infrastructure provider for the ingress
                                load balancers. When omitted, this means the user
                                has no opinion and the platform is left to choose
                                reasonable defaults. These defaults are subject to
                                change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the
                                    Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: "type allows user to set a load
                                        balancer type. When this field is set the
                                        default ingresscontroller will get created
                                        using the specified LBType. If this field
                                        is not set then the default ingress controller
                                        of LBType Classic will be created. Valid values
                                        are: \n * \"Classic\": A Classic Load Balancer
                                        that makes routing decisions at either the
                                        transport layer (TCP/SSL) or the application
                                        layer (HTTP/HTTPS). See the following for
                                        additional details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                        \n * \"NLB\": A Network Load Balancer that
                                        makes routing decisions at the transport layer
                                        (TCP/SSL). See the following for additional
                                        details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                      enum:
                                      - NLB
                                      - Classic
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type:
                                  description: type is the underlying infrastructure
                                    provider for the cluster. Allowed values are "AWS",
                                    "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
                                    "VSphere", "oVirt", "KubeVirt", "EquinixMetal",
                                    "PowerVS", "AlibabaCloud", "Nutanix" and "None".
                                    Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None
                                    if they do not support that platform.
                                  enum:
                                  - ""
                                  - AWS
                                  - Azure
                                  - BareMetal
                                  - GCP
                                  - Libvirt
                                  - OpenStack
                                  - None
                                  - VSphere
                                  - oVirt
                                  - IBMCloud
                                  - KubeVirt
                                  - EquinixMetal
                                  - PowerVS
                                  - AlibabaCloud
                                  - Nutanix
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: "requiredHSTSPolicies specifies HSTS policies
                            that are required to be set on newly created  or updated
                            routes matching the domainPattern/s and namespaceSelector/s
                            that are specified in the policy. Each requiredHSTSPolicy
                            must have at least a domainPattern and a maxAge to validate
                            a route HSTS Policy route annotation, and affect route
                            admission. \n A candidate route is checked for HSTS Policies
                            if it has the HSTS Policy route annotation: \"haproxy.router.openshift.io/hsts_header\"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains
                            \n - For each candidate route, if it matches a requiredHSTSPolicy
                            domainPattern and optional namespaceSelector, then the
                            maxAge, preloadPolicy, and includeSubdomainsPolicy must
                            be valid to be admitted.  Otherwise, the route is rejected.
                            - The first match, by domainPattern and optional namespaceSelector,
                            in the ordering of the RequiredHSTSPolicies determines
                            the route's admission status. - If the candidate route
                            doesn't match any requiredHSTSPolicy domainPattern and
                            optional namespaceSelector, then it may use any HSTS Policy
                            annotation. \n The HSTS policy configuration may be changed
                            after routes have already been created. An update to a
                            previously admitted route may then fail if the updated
                            route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not
                            cause a route that is already admitted to stop working.
                            \n Note that if there are no RequiredHSTSPolicies, any
                            HSTS Policy annotation on the route is valid."
                          items:
                            properties:
                              domainPatterns:
                                description: "domainPatterns is a list of domains
                                  for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created
                                  with a spec.host matching one of the domains, the
                                  route must specify the HSTS Policy components described
                                  in the matching RequiredHSTSPolicy. \n The use of
                                  wildcards is allowed like this: *.foo.com matches
                                  everything under foo.com. foo.com only matches foo.com,
                                  so to cover foo.com and everything under it, you
                                  must specify *both*."
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: 'includeSubDomainsPolicy means the HSTS
                                  Policy should apply to any subdomains of the host''s
                                  domain name.  Thus, for the host bar.foo.com, if
                                  includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS
                                  Policy of bar.foo.com - the host bar.foo.com would
                                  inherit the HSTS Policy of bar.foo.com - the host
                                  foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS
                                  Policy of bar.foo.com'
                                enum:
                                - RequireIncludeSubDomains
                                - RequireNoIncludeSubDomains
                                - NoOpinion
                                type: string
                              maxAge:
                                description: maxAge is the delta time range in seconds
                                  during which hosts are regarded as HSTS hosts. If
                                  set to 0, it negates the effect, and hosts are removed
                                  as HSTS hosts. If set to 0 and includeSubdomains
                                  is specified, all subdomains of the host are also
                                  removed as HSTS hosts. maxAge is a time-to-live
                                  value, and if this policy is not refreshed on a
                                  client, the HSTS policy will eventually expire on
                                  that client.
                                properties:
                                  largestMaxAge:
                                    description: The largest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age This value
                                      can be left unspecified, in which case no upper
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: The smallest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age Setting max-age=0
                                      allows the deletion of an existing HSTS header
                                      from a host.  This is a necessary tool for administrators
                                      to quickly correct mistakes. This value can
                                      be left unspecified, in which case no lower
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: namespaceSelector specifies a label selector
                                  such that the policy applies only to those routes
                                  that are in namespaces with labels that match the
                                  selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches
                                  everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: preloadPolicy directs the client to include
                                  hosts in its host preload list so that it never
                                  needs to do an initial load to get the HSTS header
                                  (note that this is not defined in RFC 6797 and is
                                  therefore client implementation-dependent).
                                enum:
                                - RequirePreload
                                - RequireNoPreload
                                - NoOpinion
                                type: string
                            required:
                            - domainPatterns
                            type: object
                          type: array
                      type: object
                    network:
                      description: 'Network holds cluster-wide information about the
                        network. It is used to configure the desired network configuration,
                        such as: IP address pools for services/pod IPs, network plugin,
                        etc. Please view network.spec for an explanation on what applies
                        when configuring this resource. TODO (csrwng): Add validation
                        here to exclude changes that conflict with networking settings
                        in the HostedCluster.Spec.Networking field.'
                      properties:
                        clusterNetwork:
                          description: IP address pool to use for pod IPs. This field
                            is immutable after installation.
                          items:
                            description: ClusterNetworkEntry is a contiguous block
                              of IP addresses from which pod IPs are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: The size (prefix) of block to allocate
                                  to each node. If this field is not used by the plugin,
                                  it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        externalIP:
                          description: externalIP defines configuration for controllers
                            that affect Service.ExternalIP. If nil, then ExternalIP
                            is not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: autoAssignCIDRs is a list of CIDRs from
                                which to automatically assign Service.ExternalIP.
                                These are assigned when the service is of type LoadBalancer.
                                In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected
                                by any ExternalIPPolicy rules. Currently, only one
                                entry may be provided.
                              items:
                                type: string
                              type: array
                            policy:
                              description: policy is a set of restrictions applied
                                to the ExternalIP field. If nil or empty, then ExternalIP
                                is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed
                                    CIDRs.
                                  items:
                                    type: string
                                  type: array
                                rejectedCIDRs:
                                  description: rejectedCIDRs is the list of disallowed
                                    CIDRs. These take precedence over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        networkType:
                          description: 'NetworkType is the plugin that is to be deployed
                            (e.g. OpenShiftSDN). This should match a value that the
                            cluster-network-operator understands, or else no networking
                            will be installed. Currently supported values are: - OpenShiftSDN
                            This field is immutable after installation.'
                          type: string
                        serviceNetwork:
                          description: IP address pool for services. Currently, we
                            only support a single entry here. This field is immutable
                            after installation.
                          items:
                            type: string
                          type: array
                        serviceNodePortRange:
                          description: The port range allowed for Services of type
                            NodePort. If not specified, the default of 30000-32767
                            will be used. Such Services without a NodePort specified
                            will have one automatically allocated from this range.
                            This parameter can be updated after the cluster is installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                    oauth:
                      description: OAuth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server. This
                        configuration is only honored when the top level Authentication
                        config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: identityProviders is an ordered list of ways
                            for a user to identify themselves. When this list is empty,
                            no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for
                              users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options
                                  for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using
                                  GitHub credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. This can
                                      only be configured when hostname is set to a
                                      non-empty value. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostname:
                                    description: hostname is the optional domain (e.g.
                                      "mycompany.com") for use with a hosted instance
                                      of GitHub Enterprise. It must match the GitHub
                                      Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts
                                      which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which
                                      teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using
                                  GitLab credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using
                                  Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google
                                      App domain (e.g. "mycompany.com") to restrict
                                      logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication
                                  using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: fileData is a required reference
                                      to a secret by name containing the data to use
                                      as the htpasswd file. The key "htpasswd" is
                                      used to locate the data. If the secret or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified htpasswd data is not
                                      valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication
                                  using keystone password credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone
                                      v3
                                    type: string
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using
                                  LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to
                                      identities
                                    properties:
                                      email:
                                        description: email is the list of attributes
                                          whose values should be used as the email
                                          address. Optional. If unspecified, no email
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: id is the list of attributes
                                          whose values should be used as the user
                                          ID. Required. First non-empty attribute
                                          is used. At least one attribute is required.
                                          If none of the listed attribute have a value,
                                          authentication fails. LDAP standard identity
                                          attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: name is the list of attributes
                                          whose values should be used as the display
                                          name. Optional. If unspecified, no display
                                          name is set for the identity LDAP standard
                                          display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of attributes whose values should be used
                                          as the preferred username. LDAP standard
                                          login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind
                                      with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: bindPassword is an optional reference
                                      to a secret by name containing a password to
                                      bind with during the search phase. The key "bindPassword"
                                      is used to locate the data. If specified and
                                      the secret or expected key is not found, the
                                      identity provider is not honored. The namespace
                                      for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  insecure:
                                    description: 'insecure, if true, indicates the
                                      connection should not use TLS WARNING: Should
                                      not be set to `true` with the URL scheme "ldaps://"
                                      as "ldaps://" URLs always attempt to connect
                                      using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely.
                                      When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified
                                      in https://tools.ietf.org/html/rfc2830.'
                                    type: boolean
                                  url:
                                    description: 'url is an RFC 2255 URL which specifies
                                      the LDAP search parameters to use. The syntax
                                      of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                                    type: string
                                type: object
                              mappingMethod:
                                description: mappingMethod determines how identities
                                  from this provider are mapped to users Defaults
                                  to "claim"
                                type: string
                              name:
                                description: 'name is used to qualify the identities
                                  returned by this provider. - It MUST be unique and
                                  not shared by any other identity provider used -
                                  It MUST be a valid path segment: name cannot equal
                                  "." or ".." or contain "/" or "%" or ":" Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                                type: string
                              openID:
                                description: openID enables user authentication using
                                  OpenID credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: email is the list of claims whose
                                          values should be used as the email address.
                                          Optional. If unspecified, no email is set
                                          for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: groups is the list of claims
                                          value of which should be used to synchronize
                                          groups from the OIDC provider to OpenShift
                                          for the user. If multiple claims are specified,
                                          the first one with a non-empty value is
                                          used.
                                        items:
                                          description: OpenIDClaim represents a claim
                                            retrieved from an OpenID provider's tokens
                                            or userInfo responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: name is the list of claims whose
                                          values should be used as the display name.
                                          Optional. If unspecified, no display name
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of claims whose values should be used as
                                          the preferred username. If unspecified,
                                          the preferred username is determined from
                                          the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any
                                      custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request
                                      in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: issuer is the URL that the OpenID
                                      Provider asserts as its Issuer Identifier. It
                                      must use the https scheme with no query or fragment
                                      component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication
                                  using request header credentials
                                properties:
                                  ca:
                                    description: ca is a required reference to a config
                                      map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the
                                      TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming
                                      requests to prevent header spoofing. The key
                                      "ca.crt" is used to locate the data. If the
                                      config map or expected key is not found, the
                                      identity provider is not honored. If the specified
                                      ca data is not valid, the identity provider
                                      is not honored. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  challengeURL:
                                    description: challengeURL is a URL to redirect
                                      unauthenticated /authorize requests to Unauthenticated
                                      requests from OAuth clients which expect WWW-Authenticate
                                      challenges will be redirected here. ${url} is
                                      replaced with the current URL, escaped to be
                                      safe in a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: clientCommonNames is an optional
                                      list of common names to require a match from.
                                      If empty, any client certificate validated against
                                      the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers
                                      to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to
                                      check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: loginURL is a URL to redirect unauthenticated
                                      /authorize requests to Unauthenticated requests
                                      from OAuth clients which expect interactive
                                      logins will be redirected here ${url} is replaced
                                      with the current URL, escaped to be safe in
                                      a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers
                                      to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set
                                      of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider
                                  type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like
                            the login page.
                          properties:
                            error:
                              description: error is the name of a secret that specifies
                                a go template to use to render error pages during
                                the authentication or grant flow. The key "errors.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                error page is used. If the specified template is not
                                valid, the default error page is used. If unspecified,
                                the default error page is used. The namespace for
                                this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            login:
                              description: login is the name of a secret that specifies
                                a go template to use to render the login page. The
                                key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not
                                found, the default login page is used. If the specified
                                template is not valid, the default login page is used.
                                If unspecified, the default login page is used. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            providerSelection:
                              description: providerSelection is the name of a secret
                                that specifies a go template to use to render the
                                provider selection page. The key "providers.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                provider selection page is used. If the specified
                                template is not valid, the default provider selection
                                page is used. If unspecified, the default provider
                                selection page is used. The namespace for this secret
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization
                            and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: "accessTokenInactivityTimeout defines the
                                token inactivity timeout for tokens granted by any
                                client. The value represents the maximum amount of
                                time that can occur between consecutive uses of the
                                token. Tokens become invalid if they are not used
                                within this temporal window. The user will need to
                                acquire a new token to regain access once a token
                                times out. Takes valid time duration string such as
                                \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout
                                is configured per client, then that value takes precedence.
                                If the timeout value is not specified and the client
                                does not override the value, then tokens are valid
                                until their lifetime. \n WARNING: existing tokens'
                                timeout will not be affected (lowered) by changing
                                this value"
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds -
                                DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum
                                age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                    proxy:
                      description: Proxy holds cluster-wide information on how to
                        configure default proxies for the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs and/or IPs for which the proxy should not
                            be used. Empty means unset and will not result in an env
                            var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata: name: user-ca-bundle namespace: openshift-config
                            data: ca-bundle.crt: | -----BEGIN CERTIFICATE----- Custom
                            CA certificate bundle. -----END CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    scheduler:
                      description: Scheduler holds cluster-wide config information
                        to run the Kubernetes Scheduler and influence its placement
                        decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: 'defaultNodeSelector helps set the cluster-wide
                            default node selector to restrict pod placement to specific
                            nodes. This is applied to the pods created in all namespaces
                            and creates an intersection with any existing nodeSelectors
                            already set on a pod, additionally constraining that pod''s
                            selector. For example, defaultNodeSelector: "type=user-node,region=east"
                            would set nodeSelector field in pod spec to "type=user-node,region=east"
                            to all pods created in all namespaces. Namespaces having
                            project-wide node selectors won''t be impacted even if
                            this field is set. This adds an annotation section to
                            the namespace. For example, if a new namespace is created
                            with node-selector=''type=user-node,region=east'', the
                            annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector
                            annotation is set on the project the value is used in
                            preference to the value we are setting for defaultNodeSelector
                            field. For instance, openshift.io/node-selector: "type=user-node,region=west"
                            means that the default of "type=user-node,region=east"
                            set in defaultNodeSelector would not be applied.'
                          type: string
                        mastersSchedulable:
                          description: 'MastersSchedulable allows masters nodes to
                            be schedulable. When this flag is turned on, all the master
                            nodes in the cluster will be made schedulable, so that
                            workload pods can run on them. The default value for this
                            field is false, meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on
                            the master nodes, extreme care must be taken to ensure
                            that cluster-critical control plane components are not
                            impacted. Please turn on this field after doing due diligence.'
                          type: boolean
                        policy:
                          description: 'DEPRECATED: the scheduler Policy API has been
                            deprecated and will be removed in a future release. policy
                            is a reference to a ConfigMap containing scheduler policy
                            which has user specified predicates and priorities. If
                            this ConfigMap is not available scheduler will default
                            to use DefaultAlgorithmProvider. The namespace for this
                            configmap is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        profile:
                          description: "profile sets which scheduling profile should
                            be set in order to configure scheduling decisions for
                            new pods. \n Valid values are \"LowNodeUtilization\",
                            \"HighNodeUtilization\", \"NoScoring\" Defaults to \"LowNodeUtilization\""
                          enum:
                          - ""
                          - LowNodeUtilization
                          - HighNodeUtilization
                          - NoScoring
                          type: string
                      type: object
                  type: object
                controllerAvailabilityPolicy:
                  default: SingleReplica
                  description: ControllerAvailabilityPolicy specifies the availability
                    policy applied to critical control plane components. The default
                    value is SingleReplica.
                  type: string
                dns:
                  description: DNS specifies DNS configuration for the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  default:
                    managed:
                      storage:
                        persistentVolume:
                          size: 4Gi
                        type: PersistentVolume
                    managementType: Managed
                  description: Etcd specifies configuration for the control plane
                    etcd cluster. The default ManagementType is Managed. Once set,
                    the ManagementType cannot be changed.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            restoreSnapshotURL:
                              description: RestoreSnapshotURL allows an optional list
                                of URLs to be provided where an etcd snapshot can
                                be downloaded, for example a pre-signed URL referencing
                                a storage service, one URL per replica. This snapshot
                                will be restored on initial startup, only when the
                                etcd PV is empty.
                              items:
                                type: string
                              type: array
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n https://etcd-client:2379 \n If the
                            URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n etcd-client-ca.crt:
                                Certificate Authority value etcd-client.crt: Client
                                certificate value etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS indicates whether this cluster's nodes will be
                    running in FIPS mode. If set to true, the control plane's ignition
                    server will be configured to expect that nodes joining the cluster
                    will be FIPS-enabled.
                  type: boolean
                imageContentSources:
                  description: ImageContentSources specifies image mirrors that can
                    be used by cluster nodes to pull content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  description: InfraID is a globally unique identifier for the cluster.
                    This identifier will be used to associate various cloud resources
                    with the HostedCluster and its associated NodePools.
                  type: string
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: InfrastructureAvailabilityPolicy specifies the availability
                    policy applied to infrastructure services which run on cluster
                    nodes. The default value is SingleReplica.
                  type: string
                issuerURL:
                  default: https://kubernetes.default.svc
                  description: IssuerURL is an OIDC issuer URL which is used as the
                    issuer in all ServiceAccount tokens generated by the control plane
                    API server. The default value is kubernetes.default.svc, which
                    only works for in-cluster validation.
                  format: uri
                  type: string
                networking:
                  description: Networking specifies network configuration for the
                    cluster.
                  properties:
                    apiServer:
                      description: APIServer contains advanced network settings for
                        the API server that affect how the APIServer is exposed inside
                        a cluster node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress is the address that nodes
                            will use to talk to the API server. This is an address
                            associated with the loopback adapter of each node. If
                            not specified, 172.20.0.1 is used.
                          type: string
                        allowedCIDRBlocks:
                          description: AllowedCIDRBlocks is an allow list of CIDR
                            blocks that can access the APIServer If not specified,
                            traffic is allowed from all addresses. This depends on
                            underlying support by the cloud provider for Service LoadBalancerSourceRanges
                          items:
                            pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                            type: string
                          type: array
                        port:
                          description: Port is the port at which the APIServer is
                            exposed inside a node. Other pods using host networking
                            cannot listen on this port. If not specified, 6443 is
                            used.
                          format: int32
                          type: integer
                      type: object
                    clusterNetwork:
                      description: ClusterNetwork is the list of IP address pools
                        for pods.
                      items:
                        description: ClusterNetworkEntry is a single IP address block
                          for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool.
                            type: string
                          hostPrefix:
                            description: HostPrefix is the prefix size to allocate
                              to each node from the CIDR. For example, 24 would allocate
                              2^8=256 adresses to each node. If this field is not
                              used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                        - cidr
                        type: object
                      type: array
                    machineNetwork:
                      description: MachineNetwork is the list of IP address pools
                        for machines.
                      items:
                        description: MachineNetworkEntry is a single IP address block
                          for node IP blocks.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for machines
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                    networkType:
                      default: OVNKubernetes
                      description: NetworkType specifies the SDN provider used for
                        cluster networking.
                      enum:
                      - OpenShiftSDN
                      - Calico
                      - OVNKubernetes
                      - Other
                      type: string
                    serviceNetwork:
                      description: 'ServiceNetwork is the list of IP address pools
                        for services. NOTE: currently only one entry is supported.'
                      items:
                        description: ServiceNetworkEntry is a single IP address block
                          for the service network.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for services
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                  required:
                  - clusterNetwork
                  - networkType
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector when specified, must be true for the pods
                    managed by the HostedCluster to be scheduled.
                  type: object
                olmCatalogPlacement:
                  default: management
                  description: OLMCatalogPlacement specifies the placement of OLM
                    catalog components. By default, this is set to management and
                    OLM catalog components are deployed onto the management cluster.
                    If set to guest, the OLM catalog components will be deployed onto
                    the guest cluster.
                  enum:
                  - management
                  - guest
                  type: string
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the cluster and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: AdditionalAllowedPrincipals specifies a list
                            of additional allowed principal ARNs to be added to the
                            hosted control plane's VPC Endpoint Service to enable
                            additional VPC Endpoint connection requests to be automatically
                            accepted. See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            type: string
                          type: array
                        cloudProviderConfig:
                          description: 'CloudProviderConfig specifies AWS networking
                            configuration for the control plane. This is mainly used
                            for cloud provider controller config: https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                            TODO(dan): should this be named AWSNetworkConfig?'
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        rolesRef:
                          description: RolesRef contains references to various AWS
                            IAM roles required to enable integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "ControlPlaneOperatorARN  is an ARN value
                                referencing a role appropriate for the Control Plane
                                Operator. \n The following is an example of a valid
                                policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"ec2:CreateVpcEndpoint\", \"ec2:DescribeVpcEndpoints\",
                                \"ec2:ModifyVpcEndpoint\", \"ec2:DeleteVpcEndpoints\",
                                \"ec2:CreateTags\", \"route53:ListHostedZones\", ],
                                \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\":
                                [ \"route53:ChangeResourceRecordSets\", \"route53:ListResourceRecordSets\"
                                ], \"Resource\": \"arn:aws:route53:::%s\" } ] }"
                              type: string
                            imageRegistryARN:
                              description: "ImageRegistryARN is an ARN value referencing
                                a role appropriate for the Image Registry Operator.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"s3:CreateBucket\",
                                \"s3:DeleteBucket\", \"s3:PutBucketTagging\", \"s3:GetBucketTagging\",
                                \"s3:PutBucketPublicAccessBlock\", \"s3:GetBucketPublicAccessBlock\",
                                \"s3:PutEncryptionConfiguration\", \"s3:GetEncryptionConfiguration\",
                                \"s3:PutLifecycleConfiguration\", \"s3:GetLifecycleConfiguration\",
                                \"s3:GetBucketLocation\", \"s3:ListBucket\", \"s3:GetObject\",
                                \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucketMultipartUploads\",
                                \"s3:AbortMultipartUpload\", \"s3:ListMultipartUploadParts\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            ingressARN:
                              description: "The referenced role must have a trust
                                relationship that allows it to be assumed via web
                                identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                }}:sub\": {{ .ServiceAccounts }} } } } ] } \n IngressARN
                                is an ARN value referencing a role appropriate for
                                the Ingress Operator. \n The following is an example
                                of a valid policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"elasticloadbalancing:DescribeLoadBalancers\",
                                \"tag:GetResources\", \"route53:ListHostedZones\"
                                ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\",
                                \"Action\": [ \"route53:ChangeResourceRecordSets\"
                                ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\",
                                \"arn:aws:route53:::PRIVATE_ZONE_ID\" ] } ] }"
                              type: string
                            kubeCloudControllerARN:
                              description: "KubeCloudControllerARN is an ARN value
                                referencing a role appropriate for the KCM/KCC. \n
                                The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeImages\",
                                \"ec2:DescribeRegions\", \"ec2:DescribeRouteTables\",
                                \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                                \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                                \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                                \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                                \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\",
                                \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                                \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                                \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                                \"elasticloadbalancing:CreateLoadBalancerListeners\",
                                \"elasticloadbalancing:ConfigureHealthCheck\", \"elasticloadbalancing:DeleteLoadBalancer\",
                                \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                                \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",
                                \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",
                                \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                                \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                                \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                                \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                                \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DescribeListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                                \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                                \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                                \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                                \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                } ] }"
                              type: string
                            networkARN:
                              description: "NetworkARN is an ARN value referencing
                                a role appropriate for the Network Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\",
                                \"ec2:DescribeInstanceStatus\", \"ec2:DescribeInstanceTypes\",
                                \"ec2:UnassignPrivateIpAddresses\", \"ec2:AssignPrivateIpAddresses\",
                                \"ec2:UnassignIpv6Addresses\", \"ec2:AssignIpv6Addresses\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeNetworkInterfaces\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            nodePoolManagementARN:
                              description: "NodePoolManagementARN is an ARN value
                                referencing a role appropriate for the CAPI Controller.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:AllocateAddress\", \"ec2:AssociateRouteTable\",
                                \"ec2:AttachInternetGateway\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateInternetGateway\", \"ec2:CreateNatGateway\",
                                \"ec2:CreateRoute\", \"ec2:CreateRouteTable\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateSubnet\", \"ec2:CreateTags\", \"ec2:DeleteInternetGateway\",
                                \"ec2:DeleteNatGateway\", \"ec2:DeleteRouteTable\",
                                \"ec2:DeleteSecurityGroup\", \"ec2:DeleteSubnet\",
                                \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\",
                                \"ec2:DescribeAddresses\", \"ec2:DescribeAvailabilityZones\",
                                \"ec2:DescribeImages\", \"ec2:DescribeInstances\",
                                \"ec2:DescribeInternetGateways\", \"ec2:DescribeNatGateways\",
                                \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeNetworkInterfaceAttribute\",
                                \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                                \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\",
                                \"ec2:DisassociateRouteTable\", \"ec2:DisassociateAddress\",
                                \"ec2:ModifyInstanceAttribute\", \"ec2:ModifyNetworkInterfaceAttribute\",
                                \"ec2:ModifySubnetAttribute\", \"ec2:ReleaseAddress\",
                                \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\",
                                \"ec2:TerminateInstances\", \"tag:GetResources\",
                                \"ec2:CreateLaunchTemplate\", \"ec2:CreateLaunchTemplateVersion\",
                                \"ec2:DescribeLaunchTemplates\", \"ec2:DescribeLaunchTemplateVersions\",
                                \"ec2:DeleteLaunchTemplate\", \"ec2:DeleteLaunchTemplateVersions\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                }, { \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\":
                                \"elasticloadbalancing.amazonaws.com\" } }, \"Action\":
                                [ \"iam:CreateServiceLinkedRole\" ], \"Resource\":
                                [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                                ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                                ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\"
                                ], \"Effect\": \"Allow\" } ] }"
                              type: string
                            storageARN:
                              description: "StorageARN is an ARN value referencing
                                a role appropriate for the Storage Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:AttachVolume\",
                                \"ec2:CreateSnapshot\", \"ec2:CreateTags\", \"ec2:CreateVolume\",
                                \"ec2:DeleteSnapshot\", \"ec2:DeleteTags\", \"ec2:DeleteVolume\",
                                \"ec2:DescribeInstances\", \"ec2:DescribeSnapshots\",
                                \"ec2:DescribeTags\", \"ec2:DescribeVolumes\", \"ec2:DescribeVolumesModifications\",
                                \"ec2:DetachVolume\", \"ec2:ModifyVolume\" ], \"Resource\":
                                \"*\" } ] }"
                              type: string
                          required:
                          - controlPlaneOperatorARN
                          - imageRegistryARN
                          - ingressARN
                          - kubeCloudControllerARN
                          - networkARN
                          - nodePoolManagementARN
                          - storageARN
                          type: object
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - region
                      - rolesRef
                      type: object
                    azure:
                      description: Azure defines azure specific settings
                      properties:
                        credentials:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        machineIdentityID:
                          type: string
                        resourceGroup:
                          type: string
                        securityGroupName:
                          type: string
                        subnetName:
                          type: string
                        subscriptionID:
                          type: string
                        vnetID:
                          type: string
                        vnetName:
                          type: string
                      required:
                      - credentials
                      - location
                      - machineIdentityID
                      - resourceGroup
                      - securityGroupName
                      - subnetName
                      - subscriptionID
                      - vnetID
                      - vnetName
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: KubeVirt defines KubeVirt specific settings for
                        cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: "BaseDomainPassthrough toggles whether or not
                            an automatically generated base domain for the guest cluster
                            should be used that is a subdomain of the management cluster's
                            *.apps DNS. \n For the KubeVirt platform, the basedomain
                            can be autogenerated using the *.apps domain of the management/infra
                            hosting cluster This makes the guest cluster's base domain
                            a subdomain of the hypershift infra/mgmt cluster's base
                            domain. \n Example: Infra/Mgmt cluster's DNS Base: example.com
                            Cluster: mgmt-cluster.example.com Apps:    *.apps.mgmt-cluster.example.com
                            KubeVirt Guest cluster's DNS Base: apps.mgmt-cluster.example.com
                            Cluster: guest.apps.mgmt-cluster.example.com Apps: *.apps.guest.apps.mgmt-cluster.example.com
                            \n This is possible using OCP wildcard routes"
                          type: boolean
                      type: object
                    powervs:
                      description: PowerVS specifies configuration for clusters running
                        on IBMCloud Power VS Service. This field is immutable. Once
                        set, It can't be changed.
                      properties:
                        accountID:
                          description: AccountID is the IBMCloud account id. This
                            field is immutable. Once set, It can't be changed.
                          type: string
                        cisInstanceCRN:
                          description: CISInstanceCRN is the IBMCloud CIS Service
                            Instance's Cloud Resource Name This field is immutable.
                            Once set, It can't be changed.
                          pattern: '^crn:'
                          type: string
                        ingressOperatorCloudCreds:
                          description: IngressOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for ingress
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. This field is immutable.
                            Once set, It can't be changed. \n TODO(dan): document
                            the \"cloud controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. This field is
                            immutable. Once set, It can't be changed. \n TODO(dan):
                            document the \"node pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the IBMCloud region in which the
                            cluster resides. This configures the OCP control plane
                            cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release. This field
                            is immutable. Once set, It can't be changed.
                          type: string
                        resourceGroup:
                          description: ResourceGroup is the IBMCloud Resource Group
                            in which the cluster resides. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                        serviceInstanceID:
                          description: "ServiceInstance is the reference to the Power
                            VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances
                            at a specific geographic region. serviceInstance can be
                            created via IBM Cloud catalog or CLI. ServiceInstanceID
                            is the unique identifier that can be obtained from IBM
                            Cloud UI or IBM Cloud cli. \n More detail about Power
                            VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            \n This field is immutable. Once set, It can't be changed."
                          type: string
                        storageOperatorCloudCreds:
                          description: StorageOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for storage
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: Subnet is the subnet to use for control plane
                            cloud resources. This field is immutable. Once set, It
                            can't be changed.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        vpc:
                          description: VPC specifies IBM Cloud PowerVS Load Balancing
                            configuration for the control plane. This field is immutable.
                            Once set, It can't be changed.
                          properties:
                            name:
                              description: Name for VPC to used for all the service
                                load balancer. This field is immutable. Once set,
                                It can't be changed.
                              type: string
                            region:
                              description: Region is the IBMCloud region in which
                                VPC gets created, this VPC used for all the ingress
                                traffic into the OCP cluster. This field is immutable.
                                Once set, It can't be changed.
                              type: string
                            subnet:
                              description: Subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              type: string
                            zone:
                              description: Zone is the availability zone where load
                                balancer cloud resources are created. This field is
                                immutable. Once set, It can't be changed.
                              type: string
                          required:
                          - name
                          - region
                          type: object
                        zone:
                          description: Zone is the availability zone where control
                            plane cloud resources are created. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                      required:
                      - accountID
                      - cisInstanceCRN
                      - ingressOperatorCloudCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - resourceGroup
                      - serviceInstanceID
                      - storageOperatorCloudCreds
                      - subnet
                      - vpc
                      - zone
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                  required:
                  - type
                  type: object
                pullSecret:
                  description: PullSecret references a pull secret to be injected
                    into the container runtime of all cluster nodes. The secret must
                    have a key named ".dockerconfigjson" whose value is the pull secret
                    JSON.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                release:
                  description: "Release specifies the desired OCP release payload
                    for the hosted cluster. \n Updating this field will trigger a
                    rollout of the control plane. The behavior of the rollout will
                    be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy."
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
                secretEncryption:
                  description: SecretEncryption specifies a Kubernetes secret encryption
                    strategy for the control plane.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "The referenced role must have a trust
                                    relationship that allows it to be assumed via
                                    web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                    Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                    \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                    \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                    }}:sub\": {{ .ServiceAccounts }} } } } ] } \n
                                    AWSKMSARN is an ARN value referencing a role appropriate
                                    for managing the auth via the AWS KMS key. \n
                                    The following is an example of a valid policy
                                    document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Action\": [ \"kms:Encrypt\",
                                    \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\",
                                    \"kms:DescribeKey\" ], \"Resource\": %q } ] }"
                                  type: string
                              required:
                              - awsKms
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                serviceAccountSigningKey:
                  description: ServiceAccountSigningKey is a reference to a secret
                    containing the private key used by the service account token issuer.
                    The secret is expected to contain a single key named "key". If
                    not specified, a service account signing key will be generated
                    automatically for the cluster. When specifying a service account
                    signing key, a IssuerURL must also be specified.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                services:
                  description: "Services specifies how individual control plane services
                    are published from the hosting cluster of the control plane. \n
                    If a given service is not present in this list, it will be exposed
                    publicly by default."
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          loadBalancer:
                            description: LoadBalancer configures exposing a service
                              using a LoadBalancer.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the LoadBalancer.
                                type: string
                            type: object
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          route:
                            description: Route configures exposing a service using
                              a Route.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the Route.
                                type: string
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: SSHKey references an SSH key to be injected into all
                    cluster node sshd servers. The secret must have a single key "id_rsa.pub"
                    whose value is the public part of an SSH key.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
              - networking
              - platform
              - pullSecret
              - release
              - services
              - sshKey
              type: object
            status:
              description: Status is the latest observed status of the HostedCluster.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a control plane's current state.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint contains the endpoint information
                    by which external clients can access the control plane. This is
                    populated after the infrastructure is ready.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint is the endpoint injected in the ign
                    config userdata. It exposes the config for instances to become
                    kubernetes nodes.
                  type: string
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret that
                    contains the initial kubeadmin user password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                kubeconfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for the cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                oauthCallbackURLTemplate:
                  description: OAuthCallbackURLTemplate contains a template for the
                    URL to use as a callback for identity providers. The [identity-provider-name]
                    placeholder must be replaced with the name of an identity provider
                    defined on the HostedCluster. This is populated after the infrastructure
                    is ready.
                  type: string
                version:
                  description: Version is the status of the release version applied
                    to the HostedCluster.
                  properties:
                    availableUpdates:
                      description: availableUpdates contains updates recommended for
                        this cluster. Updates which appear in conditionalUpdates but
                        not in availableUpdates may expose this cluster to known issues.
                        This list may be empty if no updates are recommended, if the
                        update service is unavailable, or if an invalid channel has
                        been specified.
                      items:
                        description: Release represents an OpenShift release image
                          and associated metadata.
                        properties:
                          channels:
                            description: channels is the set of Cincinnati channels
                              to which the release currently belongs.
                            items:
                              type: string
                            type: array
                          image:
                            description: image is a container image location that
                              contains the update. When this field is part of spec,
                              image is optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          url:
                            description: url contains information about this release.
                              This URL is set by the 'url' metadata property on a
                              release or the metadata returned by the update API and
                              should be displayed as a link in user interfaces. The
                              URL field may not be set for test or nightly releases.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec,
                              version is optional if image is specified.
                            type: string
                        type: object
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: conditionalUpdates contains the list of updates
                        that may be recommended for this cluster if it meets specific
                        required conditions. Consumers interested in the set of updates
                        that are actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an
                        empty or invalid channel has been specified.
                      items:
                        description: ConditionalUpdate represents an update which
                          is recommended to some clusters on the version the current
                          cluster is reconciling, but which may not be recommended
                          for the current cluster.
                        properties:
                          conditions:
                            description: 'conditions represents the observations of
                              the conditional update''s current status. Known types
                              are: * Evaluating, for whether the cluster-version operator
                              will attempt to evaluate any risks[].matchingRules.
                              * Recommended, for whether the update is recommended
                              for the current cluster.'
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: channels is the set of Cincinnati channels
                                  to which the release currently belongs.
                                items:
                                  type: string
                                type: array
                              image:
                                description: image is a container image location that
                                  contains the update. When this field is part of
                                  spec, image is optional if version is specified
                                  and the availableUpdates field contains a matching
                                  version.
                                type: string
                              url:
                                description: url contains information about this release.
                                  This URL is set by the 'url' metadata property on
                                  a release or the metadata returned by the update
                                  API and should be displayed as a link in user interfaces.
                                  The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: version is a semantic versioning identifying
                                  the update version. When this field is part of spec,
                                  version is optional if image is specified.
                                type: string
                            type: object
                          risks:
                            description: risks represents the range of issues associated
                              with updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend
                              the update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: ConditionalUpdateRisk represents a reason
                                and cluster-state for not recommending a conditional
                                update.
                              properties:
                                matchingRules:
                                  description: matchingRules is a slice of conditions
                                    for deciding which clusters match the risk and
                                    which do not. The slice is ordered by decreasing
                                    precedence. The cluster-version operator will
                                    walk the slice in order, and stop after the first
                                    it can successfully evaluate. If no condition
                                    can be successfully evaluated, the update will
                                    not be recommended.
                                  items:
                                    description: ClusterCondition is a union of typed
                                      cluster conditions.  The 'type' property determines
                                      which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may
                                      match, not match, or fail to evaluate.
                                    properties:
                                      promql:
                                        description: promQL represents a cluster condition
                                          based on PromQL.
                                        properties:
                                          promql:
                                            description: PromQL is a PromQL query
                                              classifying clusters. This query query
                                              should return a 1 in the match case
                                              and a 0 in the does-not-match case.
                                              Queries which return no time series,
                                              or which return values besides 0 or
                                              1, are evaluation failures.
                                            type: string
                                        required:
                                        - promql
                                        type: object
                                      type:
                                        description: type represents the cluster-condition
                                          type. This defines the members and semantics
                                          of any additional properties.
                                        enum:
                                        - Always
                                        - PromQL
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: message provides additional information
                                    about the risk of updating, in the event that
                                    matchingRules match the cluster state. This is
                                    only to be consumed by humans. It may contain
                                    Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name is the CamelCase reason for not
                                    recommending a conditional update, in the event
                                    that matchingRules match the cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this
                                    risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                              - matchingRules
                              - message
                              - name
                              - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - release
                        - risks
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: desired is the version that the cluster is reconciling
                        towards. If the cluster is not yet fully initialized desired
                        will be set with the information available, which may be an
                        image or a tag.
                      properties:
                        channels:
                          description: channels is the set of Cincinnati channels
                            to which the release currently belongs.
                          items:
                            type: string
                          type: array
                        image:
                          description: image is a container image location that contains
                            the update. When this field is part of spec, image is
                            optional if version is specified and the availableUpdates
                            field contains a matching version.
                          type: string
                        url:
                          description: url contains information about this release.
                            This URL is set by the 'url' metadata property on a release
                            or the metadata returned by the update API and should
                            be displayed as a link in user interfaces. The URL field
                            may not be set for test or nightly releases.
                          type: string
                        version:
                          description: version is a semantic versioning identifying
                            the update version. When this field is part of spec, version
                            is optional if image is specified.
                          type: string
                      type: object
                    history:
                      description: history contains a list of the most recent versions
                        applied to the cluster. This value may be empty during cluster
                        startup, and then will be updated when a new update is being
                        applied. The newest update is first in the list and it is
                        ordered by recency. Updates in the history have state Completed
                        if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of
                        update history is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to
                          the cluster.
                        properties:
                          acceptedRisks:
                            description: acceptedRisks records risks which were accepted
                              to initiate the update. For example, it may menition
                              an Upgradeable=False or missing signature that was overriden
                              via desiredUpdate.force, or an update that was initiated
                              despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: completionTime, if set, is when the update
                              was fully applied. The update that is currently being
                              applied will have a null completion time. Completion
                              time will always be set for entries that are not the
                              current update (usually to the started time of the next
                              update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: image is a container image location that
                              contains the update. This value is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update
                              was started.
                            format: date-time
                            type: string
                          state:
                            description: state reflects whether the update was fully
                              applied. The Partial state indicates the update is not
                              fully applied, while the Completed state indicates the
                              update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: verified indicates whether the provided update
                              was properly verified before it was installed. If this
                              is false the cluster may not be trusted. Verified does
                              not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: version is a semantic versioning identifying
                              the update version. If the requested image does not
                              define a version, or if a failure occurs retrieving
                              the image, this value may be empty.
                            type: string
                        required:
                        - completionTime
                        - image
                        - startedTime
                        - state
                        - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: observedGeneration reports which version of the
                        spec is being synced. If this value is not equal to metadata.generation,
                        then the desired and conditions fields may represent a previous
                        version.
                      format: int64
                      type: integer
                  required:
                  - availableUpdates
                  - desired
                  - observedGeneration
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: null
    labels:
      cluster.x-k8s.io/v1beta1: v1beta1
    name: hostedcontrolplanes.hypershift.openshift.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: operator
            namespace: ${NAMESPACE}
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1beta2
        - v1beta1
        - v1alpha1
    group: hypershift.openshift.io
    names:
      categories:
      - cluster-api
      kind: HostedControlPlane
      listKind: HostedControlPlaneList
      plural: hostedcontrolplanes
      shortNames:
      - hcp
      - hcps
      singular: hostedcontrolplane
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HostedControlPlane defines the desired state of HostedControlPlane
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HostedControlPlaneSpec defines the desired state of HostedControlPlane
              properties:
                additionalTrustBundle:
                  description: AdditionalTrustBundle references a ConfigMap containing
                    a PEM-encoded X.509 certificate bundle
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                apiAdvertiseAddress:
                  description: deprecated use networking.apiServer.AdvertiseAddress
                    APIAdvertiseAddress is the address at which the APIServer listens
                    inside a worker.
                  type: string
                apiAllowedCIDRBlocks:
                  description: deprecated use networking.apiServer.APIAllowedCIDRBlocks
                    APIAllowedCIDRBlocks is an allow list of CIDR blocks that can
                    access the APIServer If not specified, traffic is allowed from
                    all addresses. This depends on underlying support by the cloud
                    provider for Service LoadBalancerSourceRanges
                  items:
                    pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                    type: string
                  type: array
                apiPort:
                  description: deprecated use networking.apiServer.APIPort APIPort
                    is the port at which the APIServer listens inside a worker
                  format: int32
                  type: integer
                auditWebhook:
                  description: AuditWebhook contains metadata for configuring an audit
                    webhook endpoint for a cluster to process cluster audit events.
                    It references a secret that contains the webhook information for
                    the audit webhook endpoint. It is a secret because if the endpoint
                    has MTLS the kubeconfig will contain client keys. This is currently
                    only supported in IBM Cloud. The kubeconfig needs to be stored
                    in the secret with a secret key name that corresponds to the constant
                    AuditWebhookKubeconfigKey.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: Autoscaling specifies auto-scaling behavior that applies
                    to all NodePools associated with the control plane.
                  properties:
                    maxNodeProvisionTime:
                      description: MaxNodeProvisionTime is the maximum time to wait
                        for node provisioning before considering the provisioning
                        to be unsuccessful, expressed as a Go duration string. The
                        default is 15 minutes.
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: MaxNodesTotal is the maximum allowable number of
                        nodes across all NodePools for a HostedCluster. The autoscaler
                        will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: MaxPodGracePeriod is the maximum seconds to wait
                        for graceful pod termination before scaling down a NodePool.
                        The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: "PodPriorityThreshold enables users to schedule
                        \"best-effort\" pods, which shouldn't trigger autoscaler actions,
                        but only run when there are spare resources available. The
                        default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption"
                      format: int32
                      type: integer
                  type: object
                channel:
                  description: channel is an identifier for explicitly requesting
                    that a non-default set of updates be applied to this cluster.
                    The default channel will be contain stable updates that are appropriate
                    for production clusters.
                  type: string
                clusterID:
                  description: ClusterID is the unique id that identifies the cluster
                    externally. Making it optional here allows us to keep compatibility
                    with previous versions of the control-plane-operator that have
                    no knowledge of this field.
                  type: string
                configuration:
                  description: 'Configuration embeds resources that correspond to
                    the openshift configuration API: https://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html'
                  properties:
                    apiServer:
                      description: APIServer holds configuration (like serving certificates,
                        client CA and CORS domains) shared by all API servers in the
                        system, among them especially kube-apiserver and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: additionalCORSAllowedOrigins lists additional,
                            user-defined regular expressions describing hosts for
                            which the API server allows access using the CORS headers.
                            This may be needed to access the API and the integrated
                            OAuth server from JavaScript applications. The values
                            are regular expressions that correspond to the Golang
                            regular expression language.
                          items:
                            type: string
                          type: array
                        audit:
                          default:
                            profile: Default
                          description: audit specifies the settings for audit configuration
                            to be applied to all OpenShift-provided API servers in
                            the cluster.
                          properties:
                            customRules:
                              description: customRules specify profiles per group.
                                These profile take precedence over the top-level profile
                                field if they apply. They are evaluation from top
                                to bottom and the first one that matches, applies.
                              items:
                                description: AuditCustomRule describes a custom rule
                                  for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request
                                      user must be member of in order to this profile
                                      to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: "profile specifies the name of the
                                      desired audit policy configuration to be deployed
                                      to all OpenShift-provided API servers in the
                                      cluster. \n The following profiles are provided:
                                      - Default: the existing default policy. - WriteRequestBodies:
                                      like 'Default', but logs request and response
                                      HTTP payloads for write requests (create, update,
                                      patch). - AllRequestBodies: like 'WriteRequestBodies',
                                      but also logs request and response HTTP payloads
                                      for read requests (get, list). - None: no requests
                                      are logged at all, not even oauthaccesstokens
                                      and oauthauthorizetokens. \n If unset, the 'Default'
                                      profile is used as the default."
                                    enum:
                                    - Default
                                    - WriteRequestBodies
                                    - AllRequestBodies
                                    - None
                                    type: string
                                required:
                                - group
                                - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: "profile specifies the name of the desired
                                top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers
                                in the cluster (kube-apiserver, openshift-apiserver
                                and oauth-apiserver), with the exception of those
                                requests that match one or more of the customRules.
                                \n The following profiles are provided: - Default:
                                default policy which means MetaData level logging
                                with the exception of events (not logged at all),
                                oauthaccesstokens and oauthauthorizetokens (both logged
                                at RequestBody level). - WriteRequestBodies: like
                                'Default', but logs request and response HTTP payloads
                                for write requests (create, update, patch). - AllRequestBodies:
                                like 'WriteRequestBodies', but also logs request and
                                response HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens
                                and oauthauthorizetokens. \n Warning: It is not recommended
                                to disable audit logging by using the `None` profile
                                unless you are fully aware of the risks of not logging
                                data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation
                                arises, you might need to enable audit logging and
                                reproduce the issue in order to troubleshoot properly.
                                \n If unset, the 'Default' profile is used as the
                                default."
                              enum:
                              - Default
                              - WriteRequestBodies
                              - AllRequestBodies
                              - None
                              type: string
                          type: object
                        clientCA:
                          description: 'clientCA references a ConfigMap containing
                            a certificate bundle for the signers that will be recognized
                            for incoming client certificates in addition to the operator
                            managed signers. If this is empty, then only operator
                            managed signers are valid. You usually only have to set
                            this if you have your own PKI you wish to honor client
                            certificates from. The ConfigMap must exist in the openshift-config
                            namespace and contain the following required fields: -
                            ConfigMap.Data["ca-bundle.crt"] - CA bundle.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption
                            of resources at the datastore layer.
                          properties:
                            type:
                              description: "type defines what encryption type should
                                be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the
                                empty string), identity is implied. The behavior of
                                unset can and will change over time.  Even if encryption
                                is enabled by default, the meaning of unset may change
                                to a different encryption type based on changes in
                                best practices. \n When encryption is enabled, all
                                sensitive resources shipped with the platform are
                                encrypted. This list of sensitive resources can and
                                will change over time.  The current authoritative
                                list is: \n 1. secrets 2. configmaps 3. routes.route.openshift.io
                                4. oauthaccesstokens.oauth.openshift.io 5. oauthauthorizetokens.oauth.openshift.io"
                              enum:
                              - ""
                              - identity
                              - aescbc
                              type: string
                          type: object
                        servingCerts:
                          description: servingCert is the TLS cert info for serving
                            secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: namedCertificates references secrets containing
                                the TLS cert info for serving secure traffic to specific
                                hostnames. If no named certificates are provided,
                                or no named certificates match the server name as
                                understood by a client, the defaultServingCertificate
                                will be used.
                              items:
                                description: APIServerNamedServingCert maps a server
                                  DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: names is a optional list of explicit
                                      DNS names (leading wildcards allowed) that should
                                      use this certificate to serve secure traffic.
                                      If no names are provided, the implicit names
                                      will be extracted from the certificates. Exact
                                      names trump over wildcard names. Explicit names
                                      defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    type: array
                                  servingCertificate:
                                    description: 'servingCertificate references a
                                      kubernetes.io/tls type secret containing the
                                      TLS cert info for serving secure traffic. The
                                      secret must exist in the openshift-config namespace
                                      and contain the following required fields: -
                                      Secret.Data["tls.key"] - TLS private key. -
                                      Secret.Data["tls.crt"] - TLS certificate.'
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              type: array
                          type: object
                        tlsSecurityProfile:
                          description: "tlsSecurityProfile specifies settings for
                            TLS connections for externally exposed servers. \n If
                            unset, a default (which may change between releases) is
                            chosen. Note that only Old, Intermediate and Custom profiles
                            are currently supported, and the maximum available MinTLSVersions
                            is VersionTLS12."
                          properties:
                            custom:
                              description: "custom is a user-defined TLS security
                                profile. Be extremely careful using a custom profile
                                as invalid configurations can be catastrophic. An
                                example custom profile looks like this: \n ciphers:
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256
                                minTLSVersion: TLSv1.1"
                              nullable: true
                              properties:
                                ciphers:
                                  description: "ciphers is used to specify the cipher
                                    algorithms that are negotiated during the TLS
                                    handshake.  Operators may remove entries their
                                    operands do not support.  For example, to use
                                    DES-CBC3-SHA  (yaml): \n ciphers: - DES-CBC3-SHA"
                                  items:
                                    type: string
                                  type: array
                                minTLSVersion:
                                  description: "minTLSVersion is used to specify the
                                    minimal version of the TLS protocol that is negotiated
                                    during the TLS handshake. For example, to use
                                    TLS versions 1.1, 1.2 and 1.3 (yaml): \n minTLSVersion:
                                    TLSv1.1 \n NOTE: currently the highest minTLSVersion
                                    allowed is VersionTLS12"
                                  enum:
                                  - VersionTLS10
                                  - VersionTLS11
                                  - VersionTLS12
                                  - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: "intermediate is a TLS security profile
                                based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                minTLSVersion: TLSv1.2"
                              nullable: true
                              type: object
                            modern:
                              description: "modern is a TLS security profile based
                                on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                              nullable: true
                              type: object
                            old:
                              description: "old is a TLS security profile based on:
                                \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                - DHE-RSA-CHACHA20-POLY1305 - ECDHE-ECDSA-AES128-SHA256
                                - ECDHE-RSA-AES128-SHA256 - ECDHE-ECDSA-AES128-SHA
                                - ECDHE-RSA-AES128-SHA - ECDHE-ECDSA-AES256-SHA384
                                - ECDHE-RSA-AES256-SHA384 - ECDHE-ECDSA-AES256-SHA
                                - ECDHE-RSA-AES256-SHA - DHE-RSA-AES128-SHA256 - DHE-RSA-AES256-SHA256
                                - AES128-GCM-SHA256 - AES256-GCM-SHA384 - AES128-SHA256
                                - AES256-SHA256 - AES128-SHA - AES256-SHA - DES-CBC3-SHA
                                minTLSVersion: TLSv1.0"
                              nullable: true
                              type: object
                            type:
                              description: "type is one of Old, Intermediate, Modern
                                or Custom. Custom provides the ability to specify
                                individual TLS security profile parameters. Old, Intermediate
                                and Modern are TLS security profiles based on: \n
                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                                \n The profiles are intent based, so they may change
                                over time as new ciphers are developed and existing
                                ciphers are found to be insecure.  Depending on precisely
                                which ciphers are available to a process, the list
                                may be reduced. \n Note that the Modern profile is
                                currently not supported because it is not yet well
                                adopted by common software libraries."
                              enum:
                              - Old
                              - Intermediate
                              - Modern
                              - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: Authentication specifies cluster-wide settings
                        for authentication (like OAuth and webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: 'oauthMetadata contains the discovery endpoint
                            data for OAuth 2.0 Authorization Server Metadata for an
                            external OAuth server. This discovery document can be
                            viewed from its served location: oc get --raw ''/.well-known/oauth-authorization-server''
                            For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status. The key
                            "oauthMetadata" is used to locate the data. If specified
                            and the config map or expected key is not found, no metadata
                            is served. If the specified metadata is not valid, no
                            metadata is served. The namespace for this config map
                            is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        serviceAccountIssuer:
                          description: 'serviceAccountIssuer is the identifier of
                            the bound service account token issuer. The default is
                            https://kubernetes.default.svc WARNING: Updating this
                            field will result in the invalidation of all bound tokens
                            with the previous issuer value. Unless the holder of a
                            bound token has explicit support for a change in issuer,
                            they will not request a new bound token until pod restart
                            or until their existing token exceeds 80% of its duration.'
                          type: string
                        type:
                          description: type identifies the cluster managed, user facing
                            authentication mode in use. Specifically, it manages the
                            component that responds to login attempts. The default
                            is IntegratedOAuth.
                          type: string
                        webhookTokenAuthenticator:
                          description: webhookTokenAuthenticator configures a remote
                            token reviewer. These remote authentication webhooks can
                            be used to verify bearer tokens via the tokenreviews.authentication.k8s.io
                            REST API. This is required to honor bearer tokens that
                            are provisioned by an external authentication service.
                          properties:
                            kubeConfig:
                              description: "kubeConfig references a secret that contains
                                kube config file data which describes how to access
                                the remote webhook service. The namespace for the
                                referenced secret is openshift-config. \n For further
                                details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                \n The key \"kubeConfig\" is used to locate the data.
                                If the secret or expected key is not found, the webhook
                                is not honored. If the specified kube config data
                                is not valid, the webhook is not honored."
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting
                            it has no effect.
                          items:
                            description: deprecatedWebhookTokenAuthenticator holds
                              the necessary configuration options for a remote token
                              authenticator. It's the same as WebhookTokenAuthenticator
                              but it's missing the 'required' validation on KubeConfig
                              field.
                            properties:
                              kubeConfig:
                                description: 'kubeConfig contains kube config file
                                  data which describes how to access the remote webhook
                                  service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the
                                  webhook is not honored. If the specified kube config
                                  data is not valid, the webhook is not honored. The
                                  namespace for this secret is determined by the point
                                  of use.'
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                      type: object
                    configMapRefs:
                      description: "ConfigMapRefs holds references to any configmaps
                        referenced by configuration entries. Entries can reference
                        the configmaps using local object references. \n Deprecated
                        This field is deprecated and will be removed in a future release"
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    featureGate:
                      description: FeatureGate holds cluster-wide information about
                        feature gates.
                      properties:
                        customNoUpgrade:
                          description: customNoUpgrade allows the enabling or disabling
                            of any feature. Turning this feature set on IS NOT SUPPORTED,
                            CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its
                            nature, this setting cannot be validated.  If you have
                            any typos or accidentally apply invalid combinations your
                            cluster may fail in an unrecoverable way.  featureSet
                            must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates
                                that you want to force off
                              items:
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates
                                that you want to force on
                              items:
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: featureSet changes the list of features in
                            the cluster.  The default is empty.  Be very careful adjusting
                            this setting. Turning on or off features may cause irreversible
                            changes in your cluster which cannot be undone.
                          type: string
                      type: object
                    image:
                      description: Image governs policies related to imagestream imports
                        and runtime configuration for external registries. It allows
                        cluster admins to configure which registries OpenShift is
                        allowed to import images from, extra CA trust bundles for
                        external registries, and policies to block or allow registry
                        hostnames. When exposing OpenShift's image registry to the
                        public, this also lets cluster admins specify the external
                        hostname.
                      properties:
                        additionalTrustedCA:
                          description: additionalTrustedCA is a reference to a ConfigMap
                            containing additional CAs that should be trusted during
                            imagestream import, pod image pull, build image pull,
                            and imageregistry pullthrough. The namespace for this
                            config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        allowedRegistriesForImport:
                          description: allowedRegistriesForImport limits the container
                            image registries that normal users may import images from.
                            Set this list to the registries that you trust to contain
                            valid Docker images and that you want applications to
                            be able to import from. Users with permission to create
                            Images or ImageStreamMappings via the API are not affected
                            by this policy - typically only administrators or system
                            integrations will have those permissions.
                          items:
                            description: RegistryLocation contains a location of the
                              registry specified by the registry domain name. The
                              domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: domainName specifies a domain name for
                                  the registry In case the registry use non-standard
                                  (80 or 443) port, the port should be included in
                                  the domain name as well.
                                type: string
                              insecure:
                                description: insecure indicates whether the registry
                                  is secure (https) or insecure (http) By default
                                  (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                        externalRegistryHostnames:
                          description: externalRegistryHostnames provides the hostnames
                            for the default external image registry. The external
                            hostname should be set only when the image registry is
                            exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]"
                            format.
                          items:
                            type: string
                          type: array
                        registrySources:
                          description: registrySources contains configuration that
                            determines how the container runtime should treat individual
                            registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not
                            contain configuration for the internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: "allowedRegistries are the only registries
                                permitted for image pull and push actions. All other
                                registries are denied. \n Only one of BlockedRegistries
                                or AllowedRegistries may be set."
                              items:
                                type: string
                              type: array
                            blockedRegistries:
                              description: "blockedRegistries cannot be used for image
                                pull and push actions. All other registries are permitted.
                                \n Only one of BlockedRegistries or AllowedRegistries
                                may be set."
                              items:
                                type: string
                              type: array
                            containerRuntimeSearchRegistries:
                              description: 'containerRuntimeSearchRegistries are registries
                                that will be searched when pulling images that do
                                not have fully qualified domains in their pull specs.
                                Registries will be searched in the order provided
                                in the list. Note: this search list only works with
                                the container runtime, i.e CRI-O. Will NOT work with
                                builds or imagestream imports.'
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which
                                do not have a valid TLS certificates or only support
                                HTTP connections.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    ingress:
                      description: Ingress holds cluster-wide information about ingress,
                        including the default ingress domain used for routes.
                      properties:
                        appsDomain:
                          description: appsDomain is an optional domain to use instead
                            of the one specified in the domain field when a Route
                            is created without specifying an explicit host. If appsDomain
                            is nonempty, this value is used to generate default host
                            values for Route. Unlike domain, appsDomain may be modified
                            after installation. This assumes a new ingresscontroller
                            has been setup with a wildcard certificate.
                          type: string
                        componentRoutes:
                          description: "componentRoutes is an optional list of routes
                            that are managed by OpenShift components that a cluster-admin
                            is able to configure the hostname and serving certificate
                            for. The namespace and name of each route in this list
                            should match an existing entry in the status.componentRoutes
                            list. \n To determine the set of configurable Routes,
                            look at namespace and name of entries in the .status.componentRoutes
                            list, where participating operators write the status of
                            configurable routes."
                          items:
                            description: ComponentRouteSpec allows for configuration
                              of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should
                                  be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: "name is the logical name of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: "namespace is the namespace of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: servingCertKeyPairSecret is a reference
                                  to a secret of type `kubernetes.io/tls` in the openshift-config
                                  namespace. The serving cert/key pair must match
                                  and will be used by the operator to fulfill the
                                  intent of serving with this name. If the custom
                                  hostname uses the default routing suffix of the
                                  cluster, the Secret specification for a serving
                                  certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - hostname
                            - name
                            - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - namespace
                          - name
                          x-kubernetes-list-type: map
                        domain:
                          description: "domain is used to generate a default host
                            name for a route when the route's host name is empty.
                            The generated host name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\".
                            \n It is also used as the default wildcard domain suffix
                            for ingress. The default ingresscontroller domain will
                            follow this pattern: \"*.<domain>\". \n Once set, changing
                            domain is not currently supported."
                          type: string
                        loadbalancer:
                          description: loadBalancer contains the load balancer details
                            in general which are not only specific to the underlying
                            infrastructure provider of the current cluster and are
                            required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: platform holds configuration specific to
                                the underlying infrastructure provider for the ingress
                                load balancers. When omitted, this means the user
                                has no opinion and the platform is left to choose
                                reasonable defaults. These defaults are subject to
                                change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the
                                    Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: "type allows user to set a load
                                        balancer type. When this field is set the
                                        default ingresscontroller will get created
                                        using the specified LBType. If this field
                                        is not set then the default ingress controller
                                        of LBType Classic will be created. Valid values
                                        are: \n * \"Classic\": A Classic Load Balancer
                                        that makes routing decisions at either the
                                        transport layer (TCP/SSL) or the application
                                        layer (HTTP/HTTPS). See the following for
                                        additional details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                        \n * \"NLB\": A Network Load Balancer that
                                        makes routing decisions at the transport layer
                                        (TCP/SSL). See the following for additional
                                        details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                      enum:
                                      - NLB
                                      - Classic
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type:
                                  description: type is the underlying infrastructure
                                    provider for the cluster. Allowed values are "AWS",
                                    "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
                                    "VSphere", "oVirt", "KubeVirt", "EquinixMetal",
                                    "PowerVS", "AlibabaCloud", "Nutanix" and "None".
                                    Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None
                                    if they do not support that platform.
                                  enum:
                                  - ""
                                  - AWS
                                  - Azure
                                  - BareMetal
                                  - GCP
                                  - Libvirt
                                  - OpenStack
                                  - None
                                  - VSphere
                                  - oVirt
                                  - IBMCloud
                                  - KubeVirt
                                  - EquinixMetal
                                  - PowerVS
                                  - AlibabaCloud
                                  - Nutanix
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: "requiredHSTSPolicies specifies HSTS policies
                            that are required to be set on newly created  or updated
                            routes matching the domainPattern/s and namespaceSelector/s
                            that are specified in the policy. Each requiredHSTSPolicy
                            must have at least a domainPattern and a maxAge to validate
                            a route HSTS Policy route annotation, and affect route
                            admission. \n A candidate route is checked for HSTS Policies
                            if it has the HSTS Policy route annotation: \"haproxy.router.openshift.io/hsts_header\"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains
                            \n - For each candidate route, if it matches a requiredHSTSPolicy
                            domainPattern and optional namespaceSelector, then the
                            maxAge, preloadPolicy, and includeSubdomainsPolicy must
                            be valid to be admitted.  Otherwise, the route is rejected.
                            - The first match, by domainPattern and optional namespaceSelector,
                            in the ordering of the RequiredHSTSPolicies determines
                            the route's admission status. - If the candidate route
                            doesn't match any requiredHSTSPolicy domainPattern and
                            optional namespaceSelector, then it may use any HSTS Policy
                            annotation. \n The HSTS policy configuration may be changed
                            after routes have already been created. An update to a
                            previously admitted route may then fail if the updated
                            route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not
                            cause a route that is already admitted to stop working.
                            \n Note that if there are no RequiredHSTSPolicies, any
                            HSTS Policy annotation on the route is valid."
                          items:
                            properties:
                              domainPatterns:
                                description: "domainPatterns is a list of domains
                                  for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created
                                  with a spec.host matching one of the domains, the
                                  route must specify the HSTS Policy components described
                                  in the matching RequiredHSTSPolicy. \n The use of
                                  wildcards is allowed like this: *.foo.com matches
                                  everything under foo.com. foo.com only matches foo.com,
                                  so to cover foo.com and everything under it, you
                                  must specify *both*."
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: 'includeSubDomainsPolicy means the HSTS
                                  Policy should apply to any subdomains of the host''s
                                  domain name.  Thus, for the host bar.foo.com, if
                                  includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS
                                  Policy of bar.foo.com - the host bar.foo.com would
                                  inherit the HSTS Policy of bar.foo.com - the host
                                  foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS
                                  Policy of bar.foo.com'
                                enum:
                                - RequireIncludeSubDomains
                                - RequireNoIncludeSubDomains
                                - NoOpinion
                                type: string
                              maxAge:
                                description: maxAge is the delta time range in seconds
                                  during which hosts are regarded as HSTS hosts. If
                                  set to 0, it negates the effect, and hosts are removed
                                  as HSTS hosts. If set to 0 and includeSubdomains
                                  is specified, all subdomains of the host are also
                                  removed as HSTS hosts. maxAge is a time-to-live
                                  value, and if this policy is not refreshed on a
                                  client, the HSTS policy will eventually expire on
                                  that client.
                                properties:
                                  largestMaxAge:
                                    description: The largest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age This value
                                      can be left unspecified, in which case no upper
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: The smallest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age Setting max-age=0
                                      allows the deletion of an existing HSTS header
                                      from a host.  This is a necessary tool for administrators
                                      to quickly correct mistakes. This value can
                                      be left unspecified, in which case no lower
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: namespaceSelector specifies a label selector
                                  such that the policy applies only to those routes
                                  that are in namespaces with labels that match the
                                  selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches
                                  everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: preloadPolicy directs the client to include
                                  hosts in its host preload list so that it never
                                  needs to do an initial load to get the HSTS header
                                  (note that this is not defined in RFC 6797 and is
                                  therefore client implementation-dependent).
                                enum:
                                - RequirePreload
                                - RequireNoPreload
                                - NoOpinion
                                type: string
                            required:
                            - domainPatterns
                            type: object
                          type: array
                      type: object
                    items:
                      description: "Items embeds the serialized configuration resources.
                        \n Deprecated This field is deprecated and will be removed
                        in a future release"
                      items:
                        type: object
                      type: array
                      x-kubernetes-preserve-unknown-fields: true
                    network:
                      description: 'Network holds cluster-wide information about the
                        network. It is used to configure the desired network configuration,
                        such as: IP address pools for services/pod IPs, network plugin,
                        etc. Please view network.spec for an explanation on what applies
                        when configuring this resource. TODO (csrwng): Add validation
                        here to exclude changes that conflict with networking settings
                        in the HostedCluster.Spec.Networking field.'
                      properties:
                        clusterNetwork:
                          description: IP address pool to use for pod IPs. This field
                            is immutable after installation.
                          items:
                            description: ClusterNetworkEntry is a contiguous block
                              of IP addresses from which pod IPs are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: The size (prefix) of block to allocate
                                  to each node. If this field is not used by the plugin,
                                  it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        externalIP:
                          description: externalIP defines configuration for controllers
                            that affect Service.ExternalIP. If nil, then ExternalIP
                            is not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: autoAssignCIDRs is a list of CIDRs from
                                which to automatically assign Service.ExternalIP.
                                These are assigned when the service is of type LoadBalancer.
                                In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected
                                by any ExternalIPPolicy rules. Currently, only one
                                entry may be provided.
                              items:
                                type: string
                              type: array
                            policy:
                              description: policy is a set of restrictions applied
                                to the ExternalIP field. If nil or empty, then ExternalIP
                                is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed
                                    CIDRs.
                                  items:
                                    type: string
                                  type: array
                                rejectedCIDRs:
                                  description: rejectedCIDRs is the list of disallowed
                                    CIDRs. These take precedence over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        networkType:
                          description: 'NetworkType is the plugin that is to be deployed
                            (e.g. OpenShiftSDN). This should match a value that the
                            cluster-network-operator understands, or else no networking
                            will be installed. Currently supported values are: - OpenShiftSDN
                            This field is immutable after installation.'
                          type: string
                        serviceNetwork:
                          description: IP address pool for services. Currently, we
                            only support a single entry here. This field is immutable
                            after installation.
                          items:
                            type: string
                          type: array
                        serviceNodePortRange:
                          description: The port range allowed for Services of type
                            NodePort. If not specified, the default of 30000-32767
                            will be used. Such Services without a NodePort specified
                            will have one automatically allocated from this range.
                            This parameter can be updated after the cluster is installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                    oauth:
                      description: OAuth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server. This
                        configuration is only honored when the top level Authentication
                        config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: identityProviders is an ordered list of ways
                            for a user to identify themselves. When this list is empty,
                            no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for
                              users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options
                                  for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using
                                  GitHub credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. This can
                                      only be configured when hostname is set to a
                                      non-empty value. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostname:
                                    description: hostname is the optional domain (e.g.
                                      "mycompany.com") for use with a hosted instance
                                      of GitHub Enterprise. It must match the GitHub
                                      Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts
                                      which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which
                                      teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using
                                  GitLab credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using
                                  Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google
                                      App domain (e.g. "mycompany.com") to restrict
                                      logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication
                                  using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: fileData is a required reference
                                      to a secret by name containing the data to use
                                      as the htpasswd file. The key "htpasswd" is
                                      used to locate the data. If the secret or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified htpasswd data is not
                                      valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication
                                  using keystone password credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone
                                      v3
                                    type: string
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using
                                  LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to
                                      identities
                                    properties:
                                      email:
                                        description: email is the list of attributes
                                          whose values should be used as the email
                                          address. Optional. If unspecified, no email
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: id is the list of attributes
                                          whose values should be used as the user
                                          ID. Required. First non-empty attribute
                                          is used. At least one attribute is required.
                                          If none of the listed attribute have a value,
                                          authentication fails. LDAP standard identity
                                          attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: name is the list of attributes
                                          whose values should be used as the display
                                          name. Optional. If unspecified, no display
                                          name is set for the identity LDAP standard
                                          display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of attributes whose values should be used
                                          as the preferred username. LDAP standard
                                          login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind
                                      with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: bindPassword is an optional reference
                                      to a secret by name containing a password to
                                      bind with during the search phase. The key "bindPassword"
                                      is used to locate the data. If specified and
                                      the secret or expected key is not found, the
                                      identity provider is not honored. The namespace
                                      for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  insecure:
                                    description: 'insecure, if true, indicates the
                                      connection should not use TLS WARNING: Should
                                      not be set to `true` with the URL scheme "ldaps://"
                                      as "ldaps://" URLs always attempt to connect
                                      using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely.
                                      When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified
                                      in https://tools.ietf.org/html/rfc2830.'
                                    type: boolean
                                  url:
                                    description: 'url is an RFC 2255 URL which specifies
                                      the LDAP search parameters to use. The syntax
                                      of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                                    type: string
                                type: object
                              mappingMethod:
                                description: mappingMethod determines how identities
                                  from this provider are mapped to users Defaults
                                  to "claim"
                                type: string
                              name:
                                description: 'name is used to qualify the identities
                                  returned by this provider. - It MUST be unique and
                                  not shared by any other identity provider used -
                                  It MUST be a valid path segment: name cannot equal
                                  "." or ".." or contain "/" or "%" or ":" Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                                type: string
                              openID:
                                description: openID enables user authentication using
                                  OpenID credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: email is the list of claims whose
                                          values should be used as the email address.
                                          Optional. If unspecified, no email is set
                                          for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: groups is the list of claims
                                          value of which should be used to synchronize
                                          groups from the OIDC provider to OpenShift
                                          for the user. If multiple claims are specified,
                                          the first one with a non-empty value is
                                          used.
                                        items:
                                          description: OpenIDClaim represents a claim
                                            retrieved from an OpenID provider's tokens
                                            or userInfo responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: name is the list of claims whose
                                          values should be used as the display name.
                                          Optional. If unspecified, no display name
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of claims whose values should be used as
                                          the preferred username. If unspecified,
                                          the preferred username is determined from
                                          the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any
                                      custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request
                                      in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: issuer is the URL that the OpenID
                                      Provider asserts as its Issuer Identifier. It
                                      must use the https scheme with no query or fragment
                                      component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication
                                  using request header credentials
                                properties:
                                  ca:
                                    description: ca is a required reference to a config
                                      map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the
                                      TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming
                                      requests to prevent header spoofing. The key
                                      "ca.crt" is used to locate the data. If the
                                      config map or expected key is not found, the
                                      identity provider is not honored. If the specified
                                      ca data is not valid, the identity provider
                                      is not honored. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  challengeURL:
                                    description: challengeURL is a URL to redirect
                                      unauthenticated /authorize requests to Unauthenticated
                                      requests from OAuth clients which expect WWW-Authenticate
                                      challenges will be redirected here. ${url} is
                                      replaced with the current URL, escaped to be
                                      safe in a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: clientCommonNames is an optional
                                      list of common names to require a match from.
                                      If empty, any client certificate validated against
                                      the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers
                                      to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to
                                      check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: loginURL is a URL to redirect unauthenticated
                                      /authorize requests to Unauthenticated requests
                                      from OAuth clients which expect interactive
                                      logins will be redirected here ${url} is replaced
                                      with the current URL, escaped to be safe in
                                      a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers
                                      to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set
                                      of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider
                                  type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like
                            the login page.
                          properties:
                            error:
                              description: error is the name of a secret that specifies
                                a go template to use to render error pages during
                                the authentication or grant flow. The key "errors.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                error page is used. If the specified template is not
                                valid, the default error page is used. If unspecified,
                                the default error page is used. The namespace for
                                this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            login:
                              description: login is the name of a secret that specifies
                                a go template to use to render the login page. The
                                key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not
                                found, the default login page is used. If the specified
                                template is not valid, the default login page is used.
                                If unspecified, the default login page is used. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            providerSelection:
                              description: providerSelection is the name of a secret
                                that specifies a go template to use to render the
                                provider selection page. The key "providers.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                provider selection page is used. If the specified
                                template is not valid, the default provider selection
                                page is used. If unspecified, the default provider
                                selection page is used. The namespace for this secret
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization
                            and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: "accessTokenInactivityTimeout defines the
                                token inactivity timeout for tokens granted by any
                                client. The value represents the maximum amount of
                                time that can occur between consecutive uses of the
                                token. Tokens become invalid if they are not used
                                within this temporal window. The user will need to
                                acquire a new token to regain access once a token
                                times out. Takes valid time duration string such as
                                \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout
                                is configured per client, then that value takes precedence.
                                If the timeout value is not specified and the client
                                does not override the value, then tokens are valid
                                until their lifetime. \n WARNING: existing tokens'
                                timeout will not be affected (lowered) by changing
                                this value"
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds -
                                DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum
                                age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                    proxy:
                      description: Proxy holds cluster-wide information on how to
                        configure default proxies for the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs and/or IPs for which the proxy should not
                            be used. Empty means unset and will not result in an env
                            var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata: name: user-ca-bundle namespace: openshift-config
                            data: ca-bundle.crt: | -----BEGIN CERTIFICATE----- Custom
                            CA certificate bundle. -----END CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    scheduler:
                      description: Scheduler holds cluster-wide config information
                        to run the Kubernetes Scheduler and influence its placement
                        decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: 'defaultNodeSelector helps set the cluster-wide
                            default node selector to restrict pod placement to specific
                            nodes. This is applied to the pods created in all namespaces
                            and creates an intersection with any existing nodeSelectors
                            already set on a pod, additionally constraining that pod''s
                            selector. For example, defaultNodeSelector: "type=user-node,region=east"
                            would set nodeSelector field in pod spec to "type=user-node,region=east"
                            to all pods created in all namespaces. Namespaces having
                            project-wide node selectors won''t be impacted even if
                            this field is set. This adds an annotation section to
                            the namespace. For example, if a new namespace is created
                            with node-selector=''type=user-node,region=east'', the
                            annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector
                            annotation is set on the project the value is used in
                            preference to the value we are setting for defaultNodeSelector
                            field. For instance, openshift.io/node-selector: "type=user-node,region=west"
                            means that the default of "type=user-node,region=east"
                            set in defaultNodeSelector would not be applied.'
                          type: string
                        mastersSchedulable:
                          description: 'MastersSchedulable allows masters nodes to
                            be schedulable. When this flag is turned on, all the master
                            nodes in the cluster will be made schedulable, so that
                            workload pods can run on them. The default value for this
                            field is false, meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on
                            the master nodes, extreme care must be taken to ensure
                            that cluster-critical control plane components are not
                            impacted. Please turn on this field after doing due diligence.'
                          type: boolean
                        policy:
                          description: 'DEPRECATED: the scheduler Policy API has been
                            deprecated and will be removed in a future release. policy
                            is a reference to a ConfigMap containing scheduler policy
                            which has user specified predicates and priorities. If
                            this ConfigMap is not available scheduler will default
                            to use DefaultAlgorithmProvider. The namespace for this
                            configmap is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        profile:
                          description: "profile sets which scheduling profile should
                            be set in order to configure scheduling decisions for
                            new pods. \n Valid values are \"LowNodeUtilization\",
                            \"HighNodeUtilization\", \"NoScoring\" Defaults to \"LowNodeUtilization\""
                          enum:
                          - ""
                          - LowNodeUtilization
                          - HighNodeUtilization
                          - NoScoring
                          type: string
                      type: object
                    secretRefs:
                      description: "SecretRefs holds references to any secrets referenced
                        by configuration entries. Entries can reference the secrets
                        using local object references. \n Deprecated This field is
                        deprecated and will be removed in a future release"
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                  type: object
                controllerAvailabilityPolicy:
                  default: SingleReplica
                  description: ControllerAvailabilityPolicy specifies the availability
                    policy applied to critical control plane components. The default
                    value is SingleReplica.
                  type: string
                dns:
                  description: DNSSpec specifies the DNS configuration in the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  description: Etcd contains metadata about the etcd cluster the hypershift
                    managed Openshift control plane components use to store data.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            restoreSnapshotURL:
                              description: RestoreSnapshotURL allows an optional list
                                of URLs to be provided where an etcd snapshot can
                                be downloaded, for example a pre-signed URL referencing
                                a storage service, one URL per replica. This snapshot
                                will be restored on initial startup, only when the
                                etcd PV is empty.
                              items:
                                type: string
                              type: array
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n https://etcd-client:2379 \n If the
                            URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n etcd-client-ca.crt:
                                Certificate Authority value etcd-client.crt: Client
                                certificate value etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS specifies if the nodes for the cluster will be
                    running in FIPS mode
                  type: boolean
                imageContentSources:
                  description: ImageContentSources lists sources/repositories for
                    the release-image content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  type: string
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: InfrastructureAvailabilityPolicy specifies the availability
                    policy applied to infrastructure services which run on cluster
                    nodes. The default value is SingleReplica.
                  type: string
                issuerURL:
                  description: IssuerURL is an OIDC issuer URL which is used as the
                    issuer in all ServiceAccount tokens generated by the control plane
                    API server. The default value is kubernetes.default.svc, which
                    only works for in-cluster validation.
                  type: string
                kubeconfig:
                  description: KubeConfig specifies the name and key for the kubeconfig
                    secret
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                machineCIDR:
                  description: deprecated use networking.MachineNetwork
                  type: string
                networkType:
                  description: deprecated use networking.NetworkType NetworkType specifies
                    the SDN provider used for cluster networking.
                  enum:
                  - OpenShiftSDN
                  - Calico
                  - OVNKubernetes
                  - Other
                  type: string
                networking:
                  description: Networking specifies network configuration for the
                    cluster. Temporarily optional for backward compatibility, required
                    in future releases.
                  properties:
                    apiServer:
                      description: APIServer contains advanced network settings for
                        the API server that affect how the APIServer is exposed inside
                        a cluster node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress is the address that nodes
                            will use to talk to the API server. This is an address
                            associated with the loopback adapter of each node. If
                            not specified, 172.20.0.1 is used.
                          type: string
                        allowedCIDRBlocks:
                          description: AllowedCIDRBlocks is an allow list of CIDR
                            blocks that can access the APIServer If not specified,
                            traffic is allowed from all addresses. This depends on
                            underlying support by the cloud provider for Service LoadBalancerSourceRanges
                          items:
                            pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                            type: string
                          type: array
                        port:
                          description: Port is the port at which the APIServer is
                            exposed inside a node. Other pods using host networking
                            cannot listen on this port. If not specified, 6443 is
                            used.
                          format: int32
                          type: integer
                      type: object
                    clusterNetwork:
                      description: 'ClusterNetwork is the list of IP address pools
                        for pods. TODO: make this required in the next version of
                        the API'
                      items:
                        description: ClusterNetworkEntry is a single IP address block
                          for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool.
                            type: string
                          hostPrefix:
                            description: HostPrefix is the prefix size to allocate
                              to each node from the CIDR. For example, 24 would allocate
                              2^8=256 adresses to each node. If this field is not
                              used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                        - cidr
                        type: object
                      type: array
                    machineCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use MachineNetwork instead
                      format: cidr
                      type: string
                    machineNetwork:
                      description: 'MachineNetwork is the list of IP address pools
                        for machines. TODO: make this required in the next version
                        of the API'
                      items:
                        description: MachineNetworkEntry is a single IP address block
                          for node IP blocks.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for machines
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                    networkType:
                      default: OVNKubernetes
                      description: NetworkType specifies the SDN provider used for
                        cluster networking.
                      enum:
                      - OpenShiftSDN
                      - Calico
                      - OVNKubernetes
                      - Other
                      type: string
                    podCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use ClusterNetwork instead
                      format: cidr
                      type: string
                    serviceCIDR:
                      description: Deprecated This field will be removed in the next
                        API release. Use ServiceNetwork instead
                      format: cidr
                      type: string
                    serviceNetwork:
                      description: 'ServiceNetwork is the list of IP address pools
                        for services. NOTE: currently only one entry is supported.
                        TODO: make this required in the next version of the API'
                      items:
                        description: ServiceNetworkEntry is a single IP address block
                          for the service network.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for services
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                  required:
                  - networkType
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector when specified, must be true for the pods
                    managed by the HostedCluster to be scheduled.
                  type: object
                olmCatalogPlacement:
                  default: management
                  description: OLMCatalogPlacement specifies the placement of OLM
                    catalog components. By default, this is set to management and
                    OLM catalog components are deployed onto the management cluster.
                    If set to guest, the OLM catalog components will be deployed onto
                    the guest cluster.
                  enum:
                  - management
                  - guest
                  type: string
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: PlatformSpec specifies the underlying infrastructure
                    provider for the cluster and is used to configure platform specific
                    behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: AdditionalAllowedPrincipals specifies a list
                            of additional allowed principal ARNs to be added to the
                            hosted control plane's VPC Endpoint Service to enable
                            additional VPC Endpoint connection requests to be automatically
                            accepted. See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            type: string
                          type: array
                        cloudProviderConfig:
                          description: 'CloudProviderConfig specifies AWS networking
                            configuration for the control plane. This is mainly used
                            for cloud provider controller config: https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                            TODO(dan): should this be named AWSNetworkConfig?'
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        controlPlaneOperatorCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        kubeCloudControllerCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                          x-kubernetes-list-map-keys:
                          - key
                          x-kubernetes-list-type: map
                        roles:
                          description: Deprecated This field will be removed in the
                            next API release. Use RolesRef instead.
                          items:
                            properties:
                              arn:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - arn
                            - name
                            - namespace
                            type: object
                          type: array
                        rolesRef:
                          description: RolesRef contains references to various AWS
                            IAM roles required to enable integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "ControlPlaneOperatorARN  is an ARN value
                                referencing a role appropriate for the Control Plane
                                Operator. \n The following is an example of a valid
                                policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"ec2:CreateVpcEndpoint\", \"ec2:DescribeVpcEndpoints\",
                                \"ec2:ModifyVpcEndpoint\", \"ec2:DeleteVpcEndpoints\",
                                \"ec2:CreateTags\", \"route53:ListHostedZones\" ],
                                \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\":
                                [ \"route53:ChangeResourceRecordSets\", \"route53:ListResourceRecordSets\"
                                ], \"Resource\": \"arn:aws:route53:::%s\" } ] }"
                              type: string
                            imageRegistryARN:
                              description: "ImageRegistryARN is an ARN value referencing
                                a role appropriate for the Image Registry Operator.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"s3:CreateBucket\",
                                \"s3:DeleteBucket\", \"s3:PutBucketTagging\", \"s3:GetBucketTagging\",
                                \"s3:PutBucketPublicAccessBlock\", \"s3:GetBucketPublicAccessBlock\",
                                \"s3:PutEncryptionConfiguration\", \"s3:GetEncryptionConfiguration\",
                                \"s3:PutLifecycleConfiguration\", \"s3:GetLifecycleConfiguration\",
                                \"s3:GetBucketLocation\", \"s3:ListBucket\", \"s3:GetObject\",
                                \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucketMultipartUploads\",
                                \"s3:AbortMultipartUpload\", \"s3:ListMultipartUploadParts\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            ingressARN:
                              description: "The referenced role must have a trust
                                relationship that allows it to be assumed via web
                                identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                }}:sub\": {{ .ServiceAccounts }} } } } ] } \n IngressARN
                                is an ARN value referencing a role appropriate for
                                the Ingress Operator. \n The following is an example
                                of a valid policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"elasticloadbalancing:DescribeLoadBalancers\",
                                \"tag:GetResources\", \"route53:ListHostedZones\"
                                ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\",
                                \"Action\": [ \"route53:ChangeResourceRecordSets\"
                                ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\",
                                \"arn:aws:route53:::PRIVATE_ZONE_ID\" ] } ] }"
                              type: string
                            kubeCloudControllerARN:
                              description: "KubeCloudControllerARN is an ARN value
                                referencing a role appropriate for the KCM/KCC. \n
                                The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeImages\",
                                \"ec2:DescribeRegions\", \"ec2:DescribeRouteTables\",
                                \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                                \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                                \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                                \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                                \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\",
                                \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                                \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                                \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                                \"elasticloadbalancing:CreateLoadBalancerListeners\",
                                \"elasticloadbalancing:ConfigureHealthCheck\", \"elasticloadbalancing:DeleteLoadBalancer\",
                                \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                                \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",
                                \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",
                                \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                                \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                                \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                                \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                                \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DescribeListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                                \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                                \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                                \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                                \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                } ] }"
                              type: string
                            networkARN:
                              description: "NetworkARN is an ARN value referencing
                                a role appropriate for the Network Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\",
                                \"ec2:DescribeInstanceStatus\", \"ec2:DescribeInstanceTypes\",
                                \"ec2:UnassignPrivateIpAddresses\", \"ec2:AssignPrivateIpAddresses\",
                                \"ec2:UnassignIpv6Addresses\", \"ec2:AssignIpv6Addresses\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeNetworkInterfaces\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            nodePoolManagementARN:
                              description: "NodePoolManagementARN is an ARN value
                                referencing a role appropriate for the CAPI Controller.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:AllocateAddress\", \"ec2:AssociateRouteTable\",
                                \"ec2:AttachInternetGateway\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateInternetGateway\", \"ec2:CreateNatGateway\",
                                \"ec2:CreateRoute\", \"ec2:CreateRouteTable\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateSubnet\", \"ec2:CreateTags\", \"ec2:DeleteInternetGateway\",
                                \"ec2:DeleteNatGateway\", \"ec2:DeleteRouteTable\",
                                \"ec2:DeleteSecurityGroup\", \"ec2:DeleteSubnet\",
                                \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\",
                                \"ec2:DescribeAddresses\", \"ec2:DescribeAvailabilityZones\",
                                \"ec2:DescribeImages\", \"ec2:DescribeInstances\",
                                \"ec2:DescribeInternetGateways\", \"ec2:DescribeNatGateways\",
                                \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeNetworkInterfaceAttribute\",
                                \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                                \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\",
                                \"ec2:DisassociateRouteTable\", \"ec2:DisassociateAddress\",
                                \"ec2:ModifyInstanceAttribute\", \"ec2:ModifyNetworkInterfaceAttribute\",
                                \"ec2:ModifySubnetAttribute\", \"ec2:ReleaseAddress\",
                                \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\",
                                \"ec2:TerminateInstances\", \"tag:GetResources\",
                                \"ec2:CreateLaunchTemplate\", \"ec2:CreateLaunchTemplateVersion\",
                                \"ec2:DescribeLaunchTemplates\", \"ec2:DescribeLaunchTemplateVersions\",
                                \"ec2:DeleteLaunchTemplate\", \"ec2:DeleteLaunchTemplateVersions\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                }, { \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\":
                                \"elasticloadbalancing.amazonaws.com\" } }, \"Action\":
                                [ \"iam:CreateServiceLinkedRole\" ], \"Resource\":
                                [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                                ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                                ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\"
                                ], \"Effect\": \"Allow\" } ] }"
                              type: string
                            storageARN:
                              description: "StorageARN is an ARN value referencing
                                a role appropriate for the Storage Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:AttachVolume\",
                                \"ec2:CreateSnapshot\", \"ec2:CreateTags\", \"ec2:CreateVolume\",
                                \"ec2:DeleteSnapshot\", \"ec2:DeleteTags\", \"ec2:DeleteVolume\",
                                \"ec2:DescribeInstances\", \"ec2:DescribeSnapshots\",
                                \"ec2:DescribeTags\", \"ec2:DescribeVolumes\", \"ec2:DescribeVolumesModifications\",
                                \"ec2:DetachVolume\", \"ec2:ModifyVolume\" ], \"Resource\":
                                \"*\" } ] }"
                              type: string
                          required:
                          - controlPlaneOperatorARN
                          - imageRegistryARN
                          - ingressARN
                          - kubeCloudControllerARN
                          - networkARN
                          - nodePoolManagementARN
                          - storageARN
                          type: object
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - controlPlaneOperatorCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - rolesRef
                      type: object
                    azure:
                      description: Azure defines azure specific settings
                      properties:
                        credentials:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        machineIdentityID:
                          type: string
                        resourceGroup:
                          type: string
                        securityGroupName:
                          type: string
                        subnetName:
                          type: string
                        subscriptionID:
                          type: string
                        vnetID:
                          type: string
                        vnetName:
                          type: string
                      required:
                      - credentials
                      - location
                      - machineIdentityID
                      - resourceGroup
                      - securityGroupName
                      - subnetName
                      - subscriptionID
                      - vnetID
                      - vnetName
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: KubeVirt defines KubeVirt specific settings for
                        cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: "BaseDomainPassthrough toggles whether or not
                            an automatically generated base domain for the guest cluster
                            should be used that is a subdomain of the management cluster's
                            *.apps DNS. \n For the KubeVirt platform, the basedomain
                            can be autogenerated using the *.apps domain of the management/infra
                            hosting cluster This makes the guest cluster's base domain
                            a subdomain of the hypershift infra/mgmt cluster's base
                            domain. \n Example: Infra/Mgmt cluster's DNS Base: example.com
                            Cluster: mgmt-cluster.example.com Apps:    *.apps.mgmt-cluster.example.com
                            KubeVirt Guest cluster's DNS Base: apps.mgmt-cluster.example.com
                            Cluster: guest.apps.mgmt-cluster.example.com Apps: *.apps.guest.apps.mgmt-cluster.example.com
                            \n This is possible using OCP wildcard routes"
                          type: boolean
                      type: object
                    powervs:
                      description: PowerVS specifies configuration for clusters running
                        on IBMCloud Power VS Service. This field is immutable. Once
                        set, It can't be changed.
                      properties:
                        accountID:
                          description: AccountID is the IBMCloud account id. This
                            field is immutable. Once set, It can't be changed.
                          type: string
                        cisInstanceCRN:
                          description: CISInstanceCRN is the IBMCloud CIS Service
                            Instance's Cloud Resource Name This field is immutable.
                            Once set, It can't be changed.
                          pattern: '^crn:'
                          type: string
                        ingressOperatorCloudCreds:
                          description: IngressOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for ingress
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. This field is immutable.
                            Once set, It can't be changed. \n TODO(dan): document
                            the \"cloud controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. This field is
                            immutable. Once set, It can't be changed. \n TODO(dan):
                            document the \"node pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the IBMCloud region in which the
                            cluster resides. This configures the OCP control plane
                            cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release. This field
                            is immutable. Once set, It can't be changed.
                          type: string
                        resourceGroup:
                          description: ResourceGroup is the IBMCloud Resource Group
                            in which the cluster resides. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                        serviceInstanceID:
                          description: "ServiceInstance is the reference to the Power
                            VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances
                            at a specific geographic region. serviceInstance can be
                            created via IBM Cloud catalog or CLI. ServiceInstanceID
                            is the unique identifier that can be obtained from IBM
                            Cloud UI or IBM Cloud cli. \n More detail about Power
                            VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            \n This field is immutable. Once set, It can't be changed."
                          type: string
                        storageOperatorCloudCreds:
                          description: StorageOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for storage
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: Subnet is the subnet to use for control plane
                            cloud resources. This field is immutable. Once set, It
                            can't be changed.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        vpc:
                          description: VPC specifies IBM Cloud PowerVS Load Balancing
                            configuration for the control plane. This field is immutable.
                            Once set, It can't be changed.
                          properties:
                            name:
                              description: Name for VPC to used for all the service
                                load balancer. This field is immutable. Once set,
                                It can't be changed.
                              type: string
                            region:
                              description: Region is the IBMCloud region in which
                                VPC gets created, this VPC used for all the ingress
                                traffic into the OCP cluster. This field is immutable.
                                Once set, It can't be changed.
                              type: string
                            subnet:
                              description: Subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              type: string
                            zone:
                              description: Zone is the availability zone where load
                                balancer cloud resources are created. This field is
                                immutable. Once set, It can't be changed.
                              type: string
                          required:
                          - name
                          - region
                          type: object
                        zone:
                          description: Zone is the availability zone where control
                            plane cloud resources are created. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                      required:
                      - accountID
                      - cisInstanceCRN
                      - ingressOperatorCloudCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - resourceGroup
                      - serviceInstanceID
                      - storageOperatorCloudCreds
                      - subnet
                      - vpc
                      - zone
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                  required:
                  - type
                  type: object
                podCIDR:
                  description: deprecated use networking.ClusterNetwork
                  type: string
                pullSecret:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                releaseImage:
                  description: ReleaseImage is the release image applied to the hosted
                    control plane.
                  type: string
                secretEncryption:
                  description: SecretEncryption contains metadata about the kubernetes
                    secret encryption strategy being used for the cluster when applicable.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "The referenced role must have a trust
                                    relationship that allows it to be assumed via
                                    web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                    Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                    \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                    \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                    }}:sub\": {{ .ServiceAccounts }} } } } ] } \n
                                    AWSKMSARN is an ARN value referencing a role appropriate
                                    for managing the auth via the AWS KMS key. \n
                                    The following is an example of a valid policy
                                    document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Action\": [ \"kms:Encrypt\",
                                    \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\",
                                    \"kms:DescribeKey\" ], \"Resource\": %q } ] }"
                                  type: string
                                credentials:
                                  description: Deprecated This field is deprecated
                                    and will be removed in a future release. Use AWSKMSRoleARN
                                    instead. Credentials contains the name of the
                                    secret that holds the aws credentials that can
                                    be used to make the necessary KMS calls. It should
                                    at key AWSCredentialsFileSecretKey contain the
                                    aws credentials file that can be used to configure
                                    AWS SDKs
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - awsKms
                              - credentials
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                serviceAccountSigningKey:
                  description: ServiceAccountSigningKey is a reference to a secret
                    containing the private key used by the service account token issuer.
                    The secret is expected to contain a single key named "key". If
                    not specified, a service account signing key will be generated
                    automatically for the cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                serviceCIDR:
                  description: deprecated use networking.ServiceNetwork
                  type: string
                services:
                  description: Services defines metadata about how control plane services
                    are published in the management cluster.
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          loadBalancer:
                            description: LoadBalancer configures exposing a service
                              using a LoadBalancer.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the LoadBalancer.
                                type: string
                            type: object
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          route:
                            description: Route configures exposing a service using
                              a Route.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the Route.
                                type: string
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
              - dns
              - etcd
              - infraID
              - issuerURL
              - platform
              - pullSecret
              - releaseImage
              - services
              - sshKey
              type: object
            status:
              description: HostedControlPlaneStatus defines the observed state of
                HostedControlPlane
              properties:
                conditions:
                  description: 'Condition contains details for one aspect of the current
                    state of the HostedControlPlane. Current condition types are:
                    "Available"'
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint contains the endpoint information
                    by which external clients can access the control plane.  This
                    is populated after the infrastructure is ready.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                externalManagedControlPlane:
                  default: true
                  description: ExternalManagedControlPlane indicates to cluster-api
                    that the control plane is managed by an external service. https://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468
                  type: boolean
                initialized:
                  default: false
                  description: Initialized denotes whether or not the control plane
                    has provided a kubeadm-config. Once this condition is marked true,
                    its value is never changed. See the Ready condition for an indication
                    of the current readiness of the cluster's control plane. This
                    satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252
                  type: boolean
                kubeConfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for this control plane.
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret containing
                    the initial kubeadmin password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                lastReleaseImageTransitionTime:
                  description: "lastReleaseImageTransitionTime is the time of the
                    last update to the current releaseImage property. \n Deprecated:
                    Use versionStatus.history[0].startedTime instead."
                  format: date-time
                  type: string
                oauthCallbackURLTemplate:
                  description: OAuthCallbackURLTemplate contains a template for the
                    URL to use as a callback for identity providers. The [identity-provider-name]
                    placeholder must be replaced with the name of an identity provider
                    defined on the HostedCluster. This is populated after the infrastructure
                    is ready.
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the HostedControlPlane API Server
                    is ready to receive requests This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230
                  type: boolean
                releaseImage:
                  description: "ReleaseImage is the release image applied to the hosted
                    control plane. \n Deprecated: Use versionStatus.desired.image
                    instead."
                  type: string
                version:
                  description: "Version is the semantic version of the release applied
                    by the hosted control plane operator \n Deprecated: Use versionStatus.desired.version
                    instead."
                  type: string
                versionStatus:
                  description: versionStatus is the status of the release version
                    applied by the hosted control plane operator.
                  properties:
                    availableUpdates:
                      description: availableUpdates contains updates recommended for
                        this cluster. Updates which appear in conditionalUpdates but
                        not in availableUpdates may expose this cluster to known issues.
                        This list may be empty if no updates are recommended, if the
                        update service is unavailable, or if an invalid channel has
                        been specified.
                      items:
                        description: Release represents an OpenShift release image
                          and associated metadata.
                        properties:
                          channels:
                            description: channels is the set of Cincinnati channels
                              to which the release currently belongs.
                            items:
                              type: string
                            type: array
                          image:
                            description: image is a container image location that
                              contains the update. When this field is part of spec,
                              image is optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          url:
                            description: url contains information about this release.
                              This URL is set by the 'url' metadata property on a
                              release or the metadata returned by the update API and
                              should be displayed as a link in user interfaces. The
                              URL field may not be set for test or nightly releases.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec,
                              version is optional if image is specified.
                            type: string
                        type: object
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: conditionalUpdates contains the list of updates
                        that may be recommended for this cluster if it meets specific
                        required conditions. Consumers interested in the set of updates
                        that are actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an
                        empty or invalid channel has been specified.
                      items:
                        description: ConditionalUpdate represents an update which
                          is recommended to some clusters on the version the current
                          cluster is reconciling, but which may not be recommended
                          for the current cluster.
                        properties:
                          conditions:
                            description: 'conditions represents the observations of
                              the conditional update''s current status. Known types
                              are: * Evaluating, for whether the cluster-version operator
                              will attempt to evaluate any risks[].matchingRules.
                              * Recommended, for whether the update is recommended
                              for the current cluster.'
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: channels is the set of Cincinnati channels
                                  to which the release currently belongs.
                                items:
                                  type: string
                                type: array
                              image:
                                description: image is a container image location that
                                  contains the update. When this field is part of
                                  spec, image is optional if version is specified
                                  and the availableUpdates field contains a matching
                                  version.
                                type: string
                              url:
                                description: url contains information about this release.
                                  This URL is set by the 'url' metadata property on
                                  a release or the metadata returned by the update
                                  API and should be displayed as a link in user interfaces.
                                  The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: version is a semantic versioning identifying
                                  the update version. When this field is part of spec,
                                  version is optional if image is specified.
                                type: string
                            type: object
                          risks:
                            description: risks represents the range of issues associated
                              with updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend
                              the update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: ConditionalUpdateRisk represents a reason
                                and cluster-state for not recommending a conditional
                                update.
                              properties:
                                matchingRules:
                                  description: matchingRules is a slice of conditions
                                    for deciding which clusters match the risk and
                                    which do not. The slice is ordered by decreasing
                                    precedence. The cluster-version operator will
                                    walk the slice in order, and stop after the first
                                    it can successfully evaluate. If no condition
                                    can be successfully evaluated, the update will
                                    not be recommended.
                                  items:
                                    description: ClusterCondition is a union of typed
                                      cluster conditions.  The 'type' property determines
                                      which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may
                                      match, not match, or fail to evaluate.
                                    properties:
                                      promql:
                                        description: promQL represents a cluster condition
                                          based on PromQL.
                                        properties:
                                          promql:
                                            description: PromQL is a PromQL query
                                              classifying clusters. This query query
                                              should return a 1 in the match case
                                              and a 0 in the does-not-match case.
                                              Queries which return no time series,
                                              or which return values besides 0 or
                                              1, are evaluation failures.
                                            type: string
                                        required:
                                        - promql
                                        type: object
                                      type:
                                        description: type represents the cluster-condition
                                          type. This defines the members and semantics
                                          of any additional properties.
                                        enum:
                                        - Always
                                        - PromQL
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: message provides additional information
                                    about the risk of updating, in the event that
                                    matchingRules match the cluster state. This is
                                    only to be consumed by humans. It may contain
                                    Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name is the CamelCase reason for not
                                    recommending a conditional update, in the event
                                    that matchingRules match the cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this
                                    risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                              - matchingRules
                              - message
                              - name
                              - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - release
                        - risks
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: desired is the version that the cluster is reconciling
                        towards. If the cluster is not yet fully initialized desired
                        will be set with the information available, which may be an
                        image or a tag.
                      properties:
                        channels:
                          description: channels is the set of Cincinnati channels
                            to which the release currently belongs.
                          items:
                            type: string
                          type: array
                        image:
                          description: image is a container image location that contains
                            the update. When this field is part of spec, image is
                            optional if version is specified and the availableUpdates
                            field contains a matching version.
                          type: string
                        url:
                          description: url contains information about this release.
                            This URL is set by the 'url' metadata property on a release
                            or the metadata returned by the update API and should
                            be displayed as a link in user interfaces. The URL field
                            may not be set for test or nightly releases.
                          type: string
                        version:
                          description: version is a semantic versioning identifying
                            the update version. When this field is part of spec, version
                            is optional if image is specified.
                          type: string
                      type: object
                    history:
                      description: history contains a list of the most recent versions
                        applied to the cluster. This value may be empty during cluster
                        startup, and then will be updated when a new update is being
                        applied. The newest update is first in the list and it is
                        ordered by recency. Updates in the history have state Completed
                        if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of
                        update history is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to
                          the cluster.
                        properties:
                          acceptedRisks:
                            description: acceptedRisks records risks which were accepted
                              to initiate the update. For example, it may menition
                              an Upgradeable=False or missing signature that was overriden
                              via desiredUpdate.force, or an update that was initiated
                              despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: completionTime, if set, is when the update
                              was fully applied. The update that is currently being
                              applied will have a null completion time. Completion
                              time will always be set for entries that are not the
                              current update (usually to the started time of the next
                              update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: image is a container image location that
                              contains the update. This value is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update
                              was started.
                            format: date-time
                            type: string
                          state:
                            description: state reflects whether the update was fully
                              applied. The Partial state indicates the update is not
                              fully applied, while the Completed state indicates the
                              update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: verified indicates whether the provided update
                              was properly verified before it was installed. If this
                              is false the cluster may not be trusted. Verified does
                              not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: version is a semantic versioning identifying
                              the update version. If the requested image does not
                              define a version, or if a failure occurs retrieving
                              the image, this value may be empty.
                            type: string
                        required:
                        - completionTime
                        - image
                        - startedTime
                        - state
                        - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: observedGeneration reports which version of the
                        spec is being synced. If this value is not equal to metadata.generation,
                        then the desired and conditions fields may represent a previous
                        version.
                      format: int64
                      type: integer
                  required:
                  - availableUpdates
                  - desired
                  - observedGeneration
                  type: object
              required:
              - initialized
              - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: HostedControlPlane defines the desired state of HostedControlPlane
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HostedControlPlaneSpec defines the desired state of HostedControlPlane
              properties:
                additionalTrustBundle:
                  description: AdditionalTrustBundle references a ConfigMap containing
                    a PEM-encoded X.509 certificate bundle
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                auditWebhook:
                  description: AuditWebhook contains metadata for configuring an audit
                    webhook endpoint for a cluster to process cluster audit events.
                    It references a secret that contains the webhook information for
                    the audit webhook endpoint. It is a secret because if the endpoint
                    has MTLS the kubeconfig will contain client keys. This is currently
                    only supported in IBM Cloud. The kubeconfig needs to be stored
                    in the secret with a secret key name that corresponds to the constant
                    AuditWebhookKubeconfigKey.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: Autoscaling specifies auto-scaling behavior that applies
                    to all NodePools associated with the control plane.
                  properties:
                    maxNodeProvisionTime:
                      description: MaxNodeProvisionTime is the maximum time to wait
                        for node provisioning before considering the provisioning
                        to be unsuccessful, expressed as a Go duration string. The
                        default is 15 minutes.
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: MaxNodesTotal is the maximum allowable number of
                        nodes across all NodePools for a HostedCluster. The autoscaler
                        will not grow the cluster beyond this number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: MaxPodGracePeriod is the maximum seconds to wait
                        for graceful pod termination before scaling down a NodePool.
                        The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: "PodPriorityThreshold enables users to schedule
                        \"best-effort\" pods, which shouldn't trigger autoscaler actions,
                        but only run when there are spare resources available. The
                        default is -10. \n See the following for more details: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption"
                      format: int32
                      type: integer
                  type: object
                channel:
                  description: channel is an identifier for explicitly requesting
                    that a non-default set of updates be applied to this cluster.
                    The default channel will be contain stable updates that are appropriate
                    for production clusters.
                  type: string
                clusterID:
                  description: ClusterID is the unique id that identifies the cluster
                    externally. Making it optional here allows us to keep compatibility
                    with previous versions of the control-plane-operator that have
                    no knowledge of this field.
                  type: string
                configuration:
                  description: 'Configuration embeds resources that correspond to
                    the openshift configuration API: https://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html'
                  properties:
                    apiServer:
                      description: APIServer holds configuration (like serving certificates,
                        client CA and CORS domains) shared by all API servers in the
                        system, among them especially kube-apiserver and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: additionalCORSAllowedOrigins lists additional,
                            user-defined regular expressions describing hosts for
                            which the API server allows access using the CORS headers.
                            This may be needed to access the API and the integrated
                            OAuth server from JavaScript applications. The values
                            are regular expressions that correspond to the Golang
                            regular expression language.
                          items:
                            type: string
                          type: array
                        audit:
                          default:
                            profile: Default
                          description: audit specifies the settings for audit configuration
                            to be applied to all OpenShift-provided API servers in
                            the cluster.
                          properties:
                            customRules:
                              description: customRules specify profiles per group.
                                These profile take precedence over the top-level profile
                                field if they apply. They are evaluation from top
                                to bottom and the first one that matches, applies.
                              items:
                                description: AuditCustomRule describes a custom rule
                                  for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request
                                      user must be member of in order to this profile
                                      to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: "profile specifies the name of the
                                      desired audit policy configuration to be deployed
                                      to all OpenShift-provided API servers in the
                                      cluster. \n The following profiles are provided:
                                      - Default: the existing default policy. - WriteRequestBodies:
                                      like 'Default', but logs request and response
                                      HTTP payloads for write requests (create, update,
                                      patch). - AllRequestBodies: like 'WriteRequestBodies',
                                      but also logs request and response HTTP payloads
                                      for read requests (get, list). - None: no requests
                                      are logged at all, not even oauthaccesstokens
                                      and oauthauthorizetokens. \n If unset, the 'Default'
                                      profile is used as the default."
                                    enum:
                                    - Default
                                    - WriteRequestBodies
                                    - AllRequestBodies
                                    - None
                                    type: string
                                required:
                                - group
                                - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: "profile specifies the name of the desired
                                top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers
                                in the cluster (kube-apiserver, openshift-apiserver
                                and oauth-apiserver), with the exception of those
                                requests that match one or more of the customRules.
                                \n The following profiles are provided: - Default:
                                default policy which means MetaData level logging
                                with the exception of events (not logged at all),
                                oauthaccesstokens and oauthauthorizetokens (both logged
                                at RequestBody level). - WriteRequestBodies: like
                                'Default', but logs request and response HTTP payloads
                                for write requests (create, update, patch). - AllRequestBodies:
                                like 'WriteRequestBodies', but also logs request and
                                response HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens
                                and oauthauthorizetokens. \n Warning: It is not recommended
                                to disable audit logging by using the `None` profile
                                unless you are fully aware of the risks of not logging
                                data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation
                                arises, you might need to enable audit logging and
                                reproduce the issue in order to troubleshoot properly.
                                \n If unset, the 'Default' profile is used as the
                                default."
                              enum:
                              - Default
                              - WriteRequestBodies
                              - AllRequestBodies
                              - None
                              type: string
                          type: object
                        clientCA:
                          description: 'clientCA references a ConfigMap containing
                            a certificate bundle for the signers that will be recognized
                            for incoming client certificates in addition to the operator
                            managed signers. If this is empty, then only operator
                            managed signers are valid. You usually only have to set
                            this if you have your own PKI you wish to honor client
                            certificates from. The ConfigMap must exist in the openshift-config
                            namespace and contain the following required fields: -
                            ConfigMap.Data["ca-bundle.crt"] - CA bundle.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption
                            of resources at the datastore layer.
                          properties:
                            type:
                              description: "type defines what encryption type should
                                be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the
                                empty string), identity is implied. The behavior of
                                unset can and will change over time.  Even if encryption
                                is enabled by default, the meaning of unset may change
                                to a different encryption type based on changes in
                                best practices. \n When encryption is enabled, all
                                sensitive resources shipped with the platform are
                                encrypted. This list of sensitive resources can and
                                will change over time.  The current authoritative
                                list is: \n 1. secrets 2. configmaps 3. routes.route.openshift.io
                                4. oauthaccesstokens.oauth.openshift.io 5. oauthauthorizetokens.oauth.openshift.io"
                              enum:
                              - ""
                              - identity
                              - aescbc
                              type: string
                          type: object
                        servingCerts:
                          description: servingCert is the TLS cert info for serving
                            secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: namedCertificates references secrets containing
                                the TLS cert info for serving secure traffic to specific
                                hostnames. If no named certificates are provided,
                                or no named certificates match the server name as
                                understood by a client, the defaultServingCertificate
                                will be used.
                              items:
                                description: APIServerNamedServingCert maps a server
                                  DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: names is a optional list of explicit
                                      DNS names (leading wildcards allowed) that should
                                      use this certificate to serve secure traffic.
                                      If no names are provided, the implicit names
                                      will be extracted from the certificates. Exact
                                      names trump over wildcard names. Explicit names
                                      defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    type: array
                                  servingCertificate:
                                    description: 'servingCertificate references a
                                      kubernetes.io/tls type secret containing the
                                      TLS cert info for serving secure traffic. The
                                      secret must exist in the openshift-config namespace
                                      and contain the following required fields: -
                                      Secret.Data["tls.key"] - TLS private key. -
                                      Secret.Data["tls.crt"] - TLS certificate.'
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              type: array
                          type: object
                        tlsSecurityProfile:
                          description: "tlsSecurityProfile specifies settings for
                            TLS connections for externally exposed servers. \n If
                            unset, a default (which may change between releases) is
                            chosen. Note that only Old, Intermediate and Custom profiles
                            are currently supported, and the maximum available MinTLSVersions
                            is VersionTLS12."
                          properties:
                            custom:
                              description: "custom is a user-defined TLS security
                                profile. Be extremely careful using a custom profile
                                as invalid configurations can be catastrophic. An
                                example custom profile looks like this: \n ciphers:
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256
                                minTLSVersion: TLSv1.1"
                              nullable: true
                              properties:
                                ciphers:
                                  description: "ciphers is used to specify the cipher
                                    algorithms that are negotiated during the TLS
                                    handshake.  Operators may remove entries their
                                    operands do not support.  For example, to use
                                    DES-CBC3-SHA  (yaml): \n ciphers: - DES-CBC3-SHA"
                                  items:
                                    type: string
                                  type: array
                                minTLSVersion:
                                  description: "minTLSVersion is used to specify the
                                    minimal version of the TLS protocol that is negotiated
                                    during the TLS handshake. For example, to use
                                    TLS versions 1.1, 1.2 and 1.3 (yaml): \n minTLSVersion:
                                    TLSv1.1 \n NOTE: currently the highest minTLSVersion
                                    allowed is VersionTLS12"
                                  enum:
                                  - VersionTLS10
                                  - VersionTLS11
                                  - VersionTLS12
                                  - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: "intermediate is a TLS security profile
                                based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                minTLSVersion: TLSv1.2"
                              nullable: true
                              type: object
                            modern:
                              description: "modern is a TLS security profile based
                                on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                minTLSVersion: TLSv1.3 \n NOTE: Currently unsupported."
                              nullable: true
                              type: object
                            old:
                              description: "old is a TLS security profile based on:
                                \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                - DHE-RSA-CHACHA20-POLY1305 - ECDHE-ECDSA-AES128-SHA256
                                - ECDHE-RSA-AES128-SHA256 - ECDHE-ECDSA-AES128-SHA
                                - ECDHE-RSA-AES128-SHA - ECDHE-ECDSA-AES256-SHA384
                                - ECDHE-RSA-AES256-SHA384 - ECDHE-ECDSA-AES256-SHA
                                - ECDHE-RSA-AES256-SHA - DHE-RSA-AES128-SHA256 - DHE-RSA-AES256-SHA256
                                - AES128-GCM-SHA256 - AES256-GCM-SHA384 - AES128-SHA256
                                - AES256-SHA256 - AES128-SHA - AES256-SHA - DES-CBC3-SHA
                                minTLSVersion: TLSv1.0"
                              nullable: true
                              type: object
                            type:
                              description: "type is one of Old, Intermediate, Modern
                                or Custom. Custom provides the ability to specify
                                individual TLS security profile parameters. Old, Intermediate
                                and Modern are TLS security profiles based on: \n
                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                                \n The profiles are intent based, so they may change
                                over time as new ciphers are developed and existing
                                ciphers are found to be insecure.  Depending on precisely
                                which ciphers are available to a process, the list
                                may be reduced. \n Note that the Modern profile is
                                currently not supported because it is not yet well
                                adopted by common software libraries."
                              enum:
                              - Old
                              - Intermediate
                              - Modern
                              - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: Authentication specifies cluster-wide settings
                        for authentication (like OAuth and webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: 'oauthMetadata contains the discovery endpoint
                            data for OAuth 2.0 Authorization Server Metadata for an
                            external OAuth server. This discovery document can be
                            viewed from its served location: oc get --raw ''/.well-known/oauth-authorization-server''
                            For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status. The key
                            "oauthMetadata" is used to locate the data. If specified
                            and the config map or expected key is not found, no metadata
                            is served. If the specified metadata is not valid, no
                            metadata is served. The namespace for this config map
                            is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        serviceAccountIssuer:
                          description: 'serviceAccountIssuer is the identifier of
                            the bound service account token issuer. The default is
                            https://kubernetes.default.svc WARNING: Updating this
                            field will result in the invalidation of all bound tokens
                            with the previous issuer value. Unless the holder of a
                            bound token has explicit support for a change in issuer,
                            they will not request a new bound token until pod restart
                            or until their existing token exceeds 80% of its duration.'
                          type: string
                        type:
                          description: type identifies the cluster managed, user facing
                            authentication mode in use. Specifically, it manages the
                            component that responds to login attempts. The default
                            is IntegratedOAuth.
                          type: string
                        webhookTokenAuthenticator:
                          description: webhookTokenAuthenticator configures a remote
                            token reviewer. These remote authentication webhooks can
                            be used to verify bearer tokens via the tokenreviews.authentication.k8s.io
                            REST API. This is required to honor bearer tokens that
                            are provisioned by an external authentication service.
                          properties:
                            kubeConfig:
                              description: "kubeConfig references a secret that contains
                                kube config file data which describes how to access
                                the remote webhook service. The namespace for the
                                referenced secret is openshift-config. \n For further
                                details, see: \n https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                \n The key \"kubeConfig\" is used to locate the data.
                                If the secret or expected key is not found, the webhook
                                is not honored. If the specified kube config data
                                is not valid, the webhook is not honored."
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting
                            it has no effect.
                          items:
                            description: deprecatedWebhookTokenAuthenticator holds
                              the necessary configuration options for a remote token
                              authenticator. It's the same as WebhookTokenAuthenticator
                              but it's missing the 'required' validation on KubeConfig
                              field.
                            properties:
                              kubeConfig:
                                description: 'kubeConfig contains kube config file
                                  data which describes how to access the remote webhook
                                  service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the
                                  webhook is not honored. If the specified kube config
                                  data is not valid, the webhook is not honored. The
                                  namespace for this secret is determined by the point
                                  of use.'
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                      type: object
                    featureGate:
                      description: FeatureGate holds cluster-wide information about
                        feature gates.
                      properties:
                        customNoUpgrade:
                          description: customNoUpgrade allows the enabling or disabling
                            of any feature. Turning this feature set on IS NOT SUPPORTED,
                            CANNOT BE UNDONE, and PREVENTS UPGRADES. Because of its
                            nature, this setting cannot be validated.  If you have
                            any typos or accidentally apply invalid combinations your
                            cluster may fail in an unrecoverable way.  featureSet
                            must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates
                                that you want to force off
                              items:
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates
                                that you want to force on
                              items:
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: featureSet changes the list of features in
                            the cluster.  The default is empty.  Be very careful adjusting
                            this setting. Turning on or off features may cause irreversible
                            changes in your cluster which cannot be undone.
                          type: string
                      type: object
                    image:
                      description: Image governs policies related to imagestream imports
                        and runtime configuration for external registries. It allows
                        cluster admins to configure which registries OpenShift is
                        allowed to import images from, extra CA trust bundles for
                        external registries, and policies to block or allow registry
                        hostnames. When exposing OpenShift's image registry to the
                        public, this also lets cluster admins specify the external
                        hostname.
                      properties:
                        additionalTrustedCA:
                          description: additionalTrustedCA is a reference to a ConfigMap
                            containing additional CAs that should be trusted during
                            imagestream import, pod image pull, build image pull,
                            and imageregistry pullthrough. The namespace for this
                            config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        allowedRegistriesForImport:
                          description: allowedRegistriesForImport limits the container
                            image registries that normal users may import images from.
                            Set this list to the registries that you trust to contain
                            valid Docker images and that you want applications to
                            be able to import from. Users with permission to create
                            Images or ImageStreamMappings via the API are not affected
                            by this policy - typically only administrators or system
                            integrations will have those permissions.
                          items:
                            description: RegistryLocation contains a location of the
                              registry specified by the registry domain name. The
                              domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: domainName specifies a domain name for
                                  the registry In case the registry use non-standard
                                  (80 or 443) port, the port should be included in
                                  the domain name as well.
                                type: string
                              insecure:
                                description: insecure indicates whether the registry
                                  is secure (https) or insecure (http) By default
                                  (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                        externalRegistryHostnames:
                          description: externalRegistryHostnames provides the hostnames
                            for the default external image registry. The external
                            hostname should be set only when the image registry is
                            exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]"
                            format.
                          items:
                            type: string
                          type: array
                        registrySources:
                          description: registrySources contains configuration that
                            determines how the container runtime should treat individual
                            registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not
                            contain configuration for the internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: "allowedRegistries are the only registries
                                permitted for image pull and push actions. All other
                                registries are denied. \n Only one of BlockedRegistries
                                or AllowedRegistries may be set."
                              items:
                                type: string
                              type: array
                            blockedRegistries:
                              description: "blockedRegistries cannot be used for image
                                pull and push actions. All other registries are permitted.
                                \n Only one of BlockedRegistries or AllowedRegistries
                                may be set."
                              items:
                                type: string
                              type: array
                            containerRuntimeSearchRegistries:
                              description: 'containerRuntimeSearchRegistries are registries
                                that will be searched when pulling images that do
                                not have fully qualified domains in their pull specs.
                                Registries will be searched in the order provided
                                in the list. Note: this search list only works with
                                the container runtime, i.e CRI-O. Will NOT work with
                                builds or imagestream imports.'
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which
                                do not have a valid TLS certificates or only support
                                HTTP connections.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    ingress:
                      description: Ingress holds cluster-wide information about ingress,
                        including the default ingress domain used for routes.
                      properties:
                        appsDomain:
                          description: appsDomain is an optional domain to use instead
                            of the one specified in the domain field when a Route
                            is created without specifying an explicit host. If appsDomain
                            is nonempty, this value is used to generate default host
                            values for Route. Unlike domain, appsDomain may be modified
                            after installation. This assumes a new ingresscontroller
                            has been setup with a wildcard certificate.
                          type: string
                        componentRoutes:
                          description: "componentRoutes is an optional list of routes
                            that are managed by OpenShift components that a cluster-admin
                            is able to configure the hostname and serving certificate
                            for. The namespace and name of each route in this list
                            should match an existing entry in the status.componentRoutes
                            list. \n To determine the set of configurable Routes,
                            look at namespace and name of entries in the .status.componentRoutes
                            list, where participating operators write the status of
                            configurable routes."
                          items:
                            description: ComponentRouteSpec allows for configuration
                              of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should
                                  be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: "name is the logical name of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: "namespace is the namespace of the route
                                  to customize. \n The namespace and name of this
                                  componentRoute must match a corresponding entry
                                  in the list of status.componentRoutes if the route
                                  is to be customized."
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: servingCertKeyPairSecret is a reference
                                  to a secret of type `kubernetes.io/tls` in the openshift-config
                                  namespace. The serving cert/key pair must match
                                  and will be used by the operator to fulfill the
                                  intent of serving with this name. If the custom
                                  hostname uses the default routing suffix of the
                                  cluster, the Secret specification for a serving
                                  certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the
                                      referenced secret
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - hostname
                            - name
                            - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - namespace
                          - name
                          x-kubernetes-list-type: map
                        domain:
                          description: "domain is used to generate a default host
                            name for a route when the route's host name is empty.
                            The generated host name will follow this pattern: \"<route-name>.<route-namespace>.<domain>\".
                            \n It is also used as the default wildcard domain suffix
                            for ingress. The default ingresscontroller domain will
                            follow this pattern: \"*.<domain>\". \n Once set, changing
                            domain is not currently supported."
                          type: string
                        loadbalancer:
                          description: loadBalancer contains the load balancer details
                            in general which are not only specific to the underlying
                            infrastructure provider of the current cluster and are
                            required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: platform holds configuration specific to
                                the underlying infrastructure provider for the ingress
                                load balancers. When omitted, this means the user
                                has no opinion and the platform is left to choose
                                reasonable defaults. These defaults are subject to
                                change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the
                                    Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: "type allows user to set a load
                                        balancer type. When this field is set the
                                        default ingresscontroller will get created
                                        using the specified LBType. If this field
                                        is not set then the default ingress controller
                                        of LBType Classic will be created. Valid values
                                        are: \n * \"Classic\": A Classic Load Balancer
                                        that makes routing decisions at either the
                                        transport layer (TCP/SSL) or the application
                                        layer (HTTP/HTTPS). See the following for
                                        additional details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                                        \n * \"NLB\": A Network Load Balancer that
                                        makes routing decisions at the transport layer
                                        (TCP/SSL). See the following for additional
                                        details: \n https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb"
                                      enum:
                                      - NLB
                                      - Classic
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type:
                                  description: type is the underlying infrastructure
                                    provider for the cluster. Allowed values are "AWS",
                                    "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
                                    "VSphere", "oVirt", "KubeVirt", "EquinixMetal",
                                    "PowerVS", "AlibabaCloud", "Nutanix" and "None".
                                    Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None
                                    if they do not support that platform.
                                  enum:
                                  - ""
                                  - AWS
                                  - Azure
                                  - BareMetal
                                  - GCP
                                  - Libvirt
                                  - OpenStack
                                  - None
                                  - VSphere
                                  - oVirt
                                  - IBMCloud
                                  - KubeVirt
                                  - EquinixMetal
                                  - PowerVS
                                  - AlibabaCloud
                                  - Nutanix
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: "requiredHSTSPolicies specifies HSTS policies
                            that are required to be set on newly created  or updated
                            routes matching the domainPattern/s and namespaceSelector/s
                            that are specified in the policy. Each requiredHSTSPolicy
                            must have at least a domainPattern and a maxAge to validate
                            a route HSTS Policy route annotation, and affect route
                            admission. \n A candidate route is checked for HSTS Policies
                            if it has the HSTS Policy route annotation: \"haproxy.router.openshift.io/hsts_header\"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains
                            \n - For each candidate route, if it matches a requiredHSTSPolicy
                            domainPattern and optional namespaceSelector, then the
                            maxAge, preloadPolicy, and includeSubdomainsPolicy must
                            be valid to be admitted.  Otherwise, the route is rejected.
                            - The first match, by domainPattern and optional namespaceSelector,
                            in the ordering of the RequiredHSTSPolicies determines
                            the route's admission status. - If the candidate route
                            doesn't match any requiredHSTSPolicy domainPattern and
                            optional namespaceSelector, then it may use any HSTS Policy
                            annotation. \n The HSTS policy configuration may be changed
                            after routes have already been created. An update to a
                            previously admitted route may then fail if the updated
                            route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not
                            cause a route that is already admitted to stop working.
                            \n Note that if there are no RequiredHSTSPolicies, any
                            HSTS Policy annotation on the route is valid."
                          items:
                            properties:
                              domainPatterns:
                                description: "domainPatterns is a list of domains
                                  for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created
                                  with a spec.host matching one of the domains, the
                                  route must specify the HSTS Policy components described
                                  in the matching RequiredHSTSPolicy. \n The use of
                                  wildcards is allowed like this: *.foo.com matches
                                  everything under foo.com. foo.com only matches foo.com,
                                  so to cover foo.com and everything under it, you
                                  must specify *both*."
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: 'includeSubDomainsPolicy means the HSTS
                                  Policy should apply to any subdomains of the host''s
                                  domain name.  Thus, for the host bar.foo.com, if
                                  includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS
                                  Policy of bar.foo.com - the host bar.foo.com would
                                  inherit the HSTS Policy of bar.foo.com - the host
                                  foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS
                                  Policy of bar.foo.com'
                                enum:
                                - RequireIncludeSubDomains
                                - RequireNoIncludeSubDomains
                                - NoOpinion
                                type: string
                              maxAge:
                                description: maxAge is the delta time range in seconds
                                  during which hosts are regarded as HSTS hosts. If
                                  set to 0, it negates the effect, and hosts are removed
                                  as HSTS hosts. If set to 0 and includeSubdomains
                                  is specified, all subdomains of the host are also
                                  removed as HSTS hosts. maxAge is a time-to-live
                                  value, and if this policy is not refreshed on a
                                  client, the HSTS policy will eventually expire on
                                  that client.
                                properties:
                                  largestMaxAge:
                                    description: The largest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age This value
                                      can be left unspecified, in which case no upper
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: The smallest allowed value (in seconds)
                                      of the RequiredHSTSPolicy max-age Setting max-age=0
                                      allows the deletion of an existing HSTS header
                                      from a host.  This is a necessary tool for administrators
                                      to quickly correct mistakes. This value can
                                      be left unspecified, in which case no lower
                                      limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: namespaceSelector specifies a label selector
                                  such that the policy applies only to those routes
                                  that are in namespaces with labels that match the
                                  selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches
                                  everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: preloadPolicy directs the client to include
                                  hosts in its host preload list so that it never
                                  needs to do an initial load to get the HSTS header
                                  (note that this is not defined in RFC 6797 and is
                                  therefore client implementation-dependent).
                                enum:
                                - RequirePreload
                                - RequireNoPreload
                                - NoOpinion
                                type: string
                            required:
                            - domainPatterns
                            type: object
                          type: array
                      type: object
                    network:
                      description: 'Network holds cluster-wide information about the
                        network. It is used to configure the desired network configuration,
                        such as: IP address pools for services/pod IPs, network plugin,
                        etc. Please view network.spec for an explanation on what applies
                        when configuring this resource. TODO (csrwng): Add validation
                        here to exclude changes that conflict with networking settings
                        in the HostedCluster.Spec.Networking field.'
                      properties:
                        clusterNetwork:
                          description: IP address pool to use for pod IPs. This field
                            is immutable after installation.
                          items:
                            description: ClusterNetworkEntry is a contiguous block
                              of IP addresses from which pod IPs are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: The size (prefix) of block to allocate
                                  to each node. If this field is not used by the plugin,
                                  it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        externalIP:
                          description: externalIP defines configuration for controllers
                            that affect Service.ExternalIP. If nil, then ExternalIP
                            is not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: autoAssignCIDRs is a list of CIDRs from
                                which to automatically assign Service.ExternalIP.
                                These are assigned when the service is of type LoadBalancer.
                                In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected
                                by any ExternalIPPolicy rules. Currently, only one
                                entry may be provided.
                              items:
                                type: string
                              type: array
                            policy:
                              description: policy is a set of restrictions applied
                                to the ExternalIP field. If nil or empty, then ExternalIP
                                is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed
                                    CIDRs.
                                  items:
                                    type: string
                                  type: array
                                rejectedCIDRs:
                                  description: rejectedCIDRs is the list of disallowed
                                    CIDRs. These take precedence over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        networkType:
                          description: 'NetworkType is the plugin that is to be deployed
                            (e.g. OpenShiftSDN). This should match a value that the
                            cluster-network-operator understands, or else no networking
                            will be installed. Currently supported values are: - OpenShiftSDN
                            This field is immutable after installation.'
                          type: string
                        serviceNetwork:
                          description: IP address pool for services. Currently, we
                            only support a single entry here. This field is immutable
                            after installation.
                          items:
                            type: string
                          type: array
                        serviceNodePortRange:
                          description: The port range allowed for Services of type
                            NodePort. If not specified, the default of 30000-32767
                            will be used. Such Services without a NodePort specified
                            will have one automatically allocated from this range.
                            This parameter can be updated after the cluster is installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                    oauth:
                      description: OAuth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server. This
                        configuration is only honored when the top level Authentication
                        config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: identityProviders is an ordered list of ways
                            for a user to identify themselves. When this list is empty,
                            no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for
                              users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options
                                  for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using
                                  GitHub credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. This can
                                      only be configured when hostname is set to a
                                      non-empty value. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostname:
                                    description: hostname is the optional domain (e.g.
                                      "mycompany.com") for use with a hosted instance
                                      of GitHub Enterprise. It must match the GitHub
                                      Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts
                                      which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which
                                      teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using
                                  GitLab credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using
                                  Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google
                                      App domain (e.g. "mycompany.com") to restrict
                                      logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication
                                  using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: fileData is a required reference
                                      to a secret by name containing the data to use
                                      as the htpasswd file. The key "htpasswd" is
                                      used to locate the data. If the secret or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified htpasswd data is not
                                      valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication
                                  using keystone password credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone
                                      v3
                                    type: string
                                  tlsClientCert:
                                    description: tlsClientCert is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS client certificate to present when connecting
                                      to the server. The key "tls.crt" is used to
                                      locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  tlsClientKey:
                                    description: tlsClientKey is an optional reference
                                      to a secret by name that contains the PEM-encoded
                                      TLS private key for the client certificate referenced
                                      in tlsClientCert. The key "tls.key" is used
                                      to locate the data. If specified and the secret
                                      or expected key is not found, the identity provider
                                      is not honored. If the specified certificate
                                      data is not valid, the identity provider is
                                      not honored. The namespace for this secret is
                                      openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect
                                      to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using
                                  LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to
                                      identities
                                    properties:
                                      email:
                                        description: email is the list of attributes
                                          whose values should be used as the email
                                          address. Optional. If unspecified, no email
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: id is the list of attributes
                                          whose values should be used as the user
                                          ID. Required. First non-empty attribute
                                          is used. At least one attribute is required.
                                          If none of the listed attribute have a value,
                                          authentication fails. LDAP standard identity
                                          attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: name is the list of attributes
                                          whose values should be used as the display
                                          name. Optional. If unspecified, no display
                                          name is set for the identity LDAP standard
                                          display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of attributes whose values should be used
                                          as the preferred username. LDAP standard
                                          login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind
                                      with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: bindPassword is an optional reference
                                      to a secret by name containing a password to
                                      bind with during the search phase. The key "bindPassword"
                                      is used to locate the data. If specified and
                                      the secret or expected key is not found, the
                                      identity provider is not honored. The namespace
                                      for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  insecure:
                                    description: 'insecure, if true, indicates the
                                      connection should not use TLS WARNING: Should
                                      not be set to `true` with the URL scheme "ldaps://"
                                      as "ldaps://" URLs always attempt to connect
                                      using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely.
                                      When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified
                                      in https://tools.ietf.org/html/rfc2830.'
                                    type: boolean
                                  url:
                                    description: 'url is an RFC 2255 URL which specifies
                                      the LDAP search parameters to use. The syntax
                                      of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                                    type: string
                                type: object
                              mappingMethod:
                                description: mappingMethod determines how identities
                                  from this provider are mapped to users Defaults
                                  to "claim"
                                type: string
                              name:
                                description: 'name is used to qualify the identities
                                  returned by this provider. - It MUST be unique and
                                  not shared by any other identity provider used -
                                  It MUST be a valid path segment: name cannot equal
                                  "." or ".." or contain "/" or "%" or ":" Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                                type: string
                              openID:
                                description: openID enables user authentication using
                                  OpenID credentials
                                properties:
                                  ca:
                                    description: ca is an optional reference to a
                                      config map by name containing the PEM-encoded
                                      CA bundle. It is used as a trust anchor to validate
                                      the TLS certificate presented by the remote
                                      server. The key "ca.crt" is used to locate the
                                      data. If specified and the config map or expected
                                      key is not found, the identity provider is not
                                      honored. If the specified ca data is not valid,
                                      the identity provider is not honored. If empty,
                                      the default system roots are used. The namespace
                                      for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: email is the list of claims whose
                                          values should be used as the email address.
                                          Optional. If unspecified, no email is set
                                          for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: groups is the list of claims
                                          value of which should be used to synchronize
                                          groups from the OIDC provider to OpenShift
                                          for the user. If multiple claims are specified,
                                          the first one with a non-empty value is
                                          used.
                                        items:
                                          description: OpenIDClaim represents a claim
                                            retrieved from an OpenID provider's tokens
                                            or userInfo responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: name is the list of claims whose
                                          values should be used as the display name.
                                          Optional. If unspecified, no display name
                                          is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: preferredUsername is the list
                                          of claims whose values should be used as
                                          the preferred username. If unspecified,
                                          the preferred username is determined from
                                          the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: clientSecret is a required reference
                                      to the secret by name containing the oauth client
                                      secret. The key "clientSecret" is used to locate
                                      the data. If the secret or expected key is not
                                      found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced secret
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any
                                      custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request
                                      in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: issuer is the URL that the OpenID
                                      Provider asserts as its Issuer Identifier. It
                                      must use the https scheme with no query or fragment
                                      component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication
                                  using request header credentials
                                properties:
                                  ca:
                                    description: ca is a required reference to a config
                                      map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the
                                      TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming
                                      requests to prevent header spoofing. The key
                                      "ca.crt" is used to locate the data. If the
                                      config map or expected key is not found, the
                                      identity provider is not honored. If the specified
                                      ca data is not valid, the identity provider
                                      is not honored. The namespace for this config
                                      map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of
                                          the referenced config map
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  challengeURL:
                                    description: challengeURL is a URL to redirect
                                      unauthenticated /authorize requests to Unauthenticated
                                      requests from OAuth clients which expect WWW-Authenticate
                                      challenges will be redirected here. ${url} is
                                      replaced with the current URL, escaped to be
                                      safe in a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: clientCommonNames is an optional
                                      list of common names to require a match from.
                                      If empty, any client certificate validated against
                                      the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers
                                      to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to
                                      check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: loginURL is a URL to redirect unauthenticated
                                      /authorize requests to Unauthenticated requests
                                      from OAuth clients which expect interactive
                                      logins will be redirected here ${url} is replaced
                                      with the current URL, escaped to be safe in
                                      a query parameter https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query
                                      string https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers
                                      to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set
                                      of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider
                                  type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like
                            the login page.
                          properties:
                            error:
                              description: error is the name of a secret that specifies
                                a go template to use to render error pages during
                                the authentication or grant flow. The key "errors.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                error page is used. If the specified template is not
                                valid, the default error page is used. If unspecified,
                                the default error page is used. The namespace for
                                this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            login:
                              description: login is the name of a secret that specifies
                                a go template to use to render the login page. The
                                key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not
                                found, the default login page is used. If the specified
                                template is not valid, the default login page is used.
                                If unspecified, the default login page is used. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            providerSelection:
                              description: providerSelection is the name of a secret
                                that specifies a go template to use to render the
                                provider selection page. The key "providers.html"
                                is used to locate the template data. If specified
                                and the secret or expected key is not found, the default
                                provider selection page is used. If the specified
                                template is not valid, the default provider selection
                                page is used. If unspecified, the default provider
                                selection page is used. The namespace for this secret
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization
                            and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: "accessTokenInactivityTimeout defines the
                                token inactivity timeout for tokens granted by any
                                client. The value represents the maximum amount of
                                time that can occur between consecutive uses of the
                                token. Tokens become invalid if they are not used
                                within this temporal window. The user will need to
                                acquire a new token to regain access once a token
                                times out. Takes valid time duration string such as
                                \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout
                                is configured per client, then that value takes precedence.
                                If the timeout value is not specified and the client
                                does not override the value, then tokens are valid
                                until their lifetime. \n WARNING: existing tokens'
                                timeout will not be affected (lowered) by changing
                                this value"
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds -
                                DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum
                                age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                    proxy:
                      description: Proxy holds cluster-wide information on how to
                        configure default proxies for the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS
                            requests.  Empty means unset and will not result in an
                            env var.
                          type: string
                        noProxy:
                          description: noProxy is a comma-separated list of hostnames
                            and/or CIDRs and/or IPs for which the proxy should not
                            be used. Empty means unset and will not result in an env
                            var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used
                            to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: "trustedCA is a reference to a ConfigMap containing
                            a CA certificate bundle. The trustedCA field should only
                            be consumed by a proxy validator. The validator is responsible
                            for reading the certificate bundle from the required key
                            \"ca-bundle.crt\", merging it with the system default
                            trust bundle, and writing the merged trust bundle to a
                            ConfigMap named \"trusted-ca-bundle\" in the \"openshift-config-managed\"
                            namespace. Clients that expect to make proxy connections
                            must use the trusted-ca-bundle for all HTTPS requests
                            to the proxy, and may use the trusted-ca-bundle for non-proxy
                            HTTPS requests as well. \n The namespace for the ConfigMap
                            referenced by trustedCA is \"openshift-config\". Here
                            is an example ConfigMap (in yaml): \n apiVersion: v1 kind:
                            ConfigMap metadata: name: user-ca-bundle namespace: openshift-config
                            data: ca-bundle.crt: | -----BEGIN CERTIFICATE----- Custom
                            CA certificate bundle. -----END CERTIFICATE-----"
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    scheduler:
                      description: Scheduler holds cluster-wide config information
                        to run the Kubernetes Scheduler and influence its placement
                        decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: 'defaultNodeSelector helps set the cluster-wide
                            default node selector to restrict pod placement to specific
                            nodes. This is applied to the pods created in all namespaces
                            and creates an intersection with any existing nodeSelectors
                            already set on a pod, additionally constraining that pod''s
                            selector. For example, defaultNodeSelector: "type=user-node,region=east"
                            would set nodeSelector field in pod spec to "type=user-node,region=east"
                            to all pods created in all namespaces. Namespaces having
                            project-wide node selectors won''t be impacted even if
                            this field is set. This adds an annotation section to
                            the namespace. For example, if a new namespace is created
                            with node-selector=''type=user-node,region=east'', the
                            annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector
                            annotation is set on the project the value is used in
                            preference to the value we are setting for defaultNodeSelector
                            field. For instance, openshift.io/node-selector: "type=user-node,region=west"
                            means that the default of "type=user-node,region=east"
                            set in defaultNodeSelector would not be applied.'
                          type: string
                        mastersSchedulable:
                          description: 'MastersSchedulable allows masters nodes to
                            be schedulable. When this flag is turned on, all the master
                            nodes in the cluster will be made schedulable, so that
                            workload pods can run on them. The default value for this
                            field is false, meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on
                            the master nodes, extreme care must be taken to ensure
                            that cluster-critical control plane components are not
                            impacted. Please turn on this field after doing due diligence.'
                          type: boolean
                        policy:
                          description: 'DEPRECATED: the scheduler Policy API has been
                            deprecated and will be removed in a future release. policy
                            is a reference to a ConfigMap containing scheduler policy
                            which has user specified predicates and priorities. If
                            this ConfigMap is not available scheduler will default
                            to use DefaultAlgorithmProvider. The namespace for this
                            configmap is openshift-config.'
                          properties:
                            name:
                              description: name is the metadata.name of the referenced
                                config map
                              type: string
                          required:
                          - name
                          type: object
                        profile:
                          description: "profile sets which scheduling profile should
                            be set in order to configure scheduling decisions for
                            new pods. \n Valid values are \"LowNodeUtilization\",
                            \"HighNodeUtilization\", \"NoScoring\" Defaults to \"LowNodeUtilization\""
                          enum:
                          - ""
                          - LowNodeUtilization
                          - HighNodeUtilization
                          - NoScoring
                          type: string
                      type: object
                  type: object
                controllerAvailabilityPolicy:
                  default: SingleReplica
                  description: ControllerAvailabilityPolicy specifies the availability
                    policy applied to critical control plane components. The default
                    value is SingleReplica.
                  type: string
                dns:
                  description: DNSSpec specifies the DNS configuration in the cluster.
                  properties:
                    baseDomain:
                      description: BaseDomain is the base domain of the cluster.
                      type: string
                    privateZoneID:
                      description: PrivateZoneID is the Hosted Zone ID where all the
                        DNS records that are only available internally to the cluster
                        exist.
                      type: string
                    publicZoneID:
                      description: PublicZoneID is the Hosted Zone ID where all the
                        DNS records that are publicly accessible to the internet exist.
                      type: string
                  required:
                  - baseDomain
                  type: object
                etcd:
                  description: Etcd contains metadata about the etcd cluster the hypershift
                    managed Openshift control plane components use to store data.
                  properties:
                    managed:
                      description: Managed specifies the behavior of an etcd cluster
                        managed by HyperShift.
                      properties:
                        storage:
                          description: Storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: PersistentVolume is the configuration for
                                PersistentVolume etcd storage. With this implementation,
                                a PersistentVolume will be allocated for every etcd
                                member (either 1 or 3 depending on the HostedCluster
                                control plane availability configuration).
                              properties:
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 4Gi
                                  description: Size is the minimum size of the data
                                    volume for each etcd member.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClassName:
                                  description: "StorageClassName is the StorageClass
                                    of the data volume for each etcd member. \n See
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                  type: string
                              type: object
                            restoreSnapshotURL:
                              description: RestoreSnapshotURL allows an optional list
                                of URLs to be provided where an etcd snapshot can
                                be downloaded, for example a pre-signed URL referencing
                                a storage service, one URL per replica. This snapshot
                                will be restored on initial startup, only when the
                                etcd PV is empty.
                              items:
                                type: string
                              type: array
                            type:
                              description: Type is the kind of persistent storage
                                implementation to use for etcd.
                              enum:
                              - PersistentVolume
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - storage
                      type: object
                    managementType:
                      description: ManagementType defines how the etcd cluster is
                        managed.
                      enum:
                      - Managed
                      - Unmanaged
                      type: string
                    unmanaged:
                      description: Unmanaged specifies configuration which enables
                        the control plane to integrate with an eternally managed etcd
                        cluster.
                      properties:
                        endpoint:
                          description: "Endpoint is the full etcd cluster client endpoint
                            URL. For example: \n https://etcd-client:2379 \n If the
                            URL uses an HTTPS scheme, the TLS field is required."
                          pattern: ^https://
                          type: string
                        tls:
                          description: TLS specifies TLS configuration for HTTPS etcd
                            client endpoints.
                          properties:
                            clientSecret:
                              description: "ClientSecret refers to a secret for client
                                mTLS authentication with the etcd cluster. It may
                                have the following key/value pairs: \n etcd-client-ca.crt:
                                Certificate Authority value etcd-client.crt: Client
                                certificate value etcd-client.key: Client certificate
                                key value"
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - clientSecret
                          type: object
                      required:
                      - endpoint
                      - tls
                      type: object
                  required:
                  - managementType
                  type: object
                fips:
                  description: FIPS specifies if the nodes for the cluster will be
                    running in FIPS mode
                  type: boolean
                imageContentSources:
                  description: ImageContentSources lists sources/repositories for
                    the release-image content.
                  items:
                    description: ImageContentSource specifies image mirrors that can
                      be used by cluster nodes to pull content. For cluster workloads,
                      if a container image registry host of the pullspec matches Source
                      then one of the Mirrors are substituted as hosts in the pullspec
                      and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: Mirrors are one or more repositories that may
                          also contain the same images.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that users refer to,
                          e.g. in image pull specifications.
                        type: string
                    required:
                    - source
                    type: object
                  type: array
                infraID:
                  type: string
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: InfrastructureAvailabilityPolicy specifies the availability
                    policy applied to infrastructure services which run on cluster
                    nodes. The default value is SingleReplica.
                  type: string
                issuerURL:
                  description: IssuerURL is an OIDC issuer URL which is used as the
                    issuer in all ServiceAccount tokens generated by the control plane
                    API server. The default value is kubernetes.default.svc, which
                    only works for in-cluster validation.
                  type: string
                kubeconfig:
                  description: KubeConfig specifies the name and key for the kubeconfig
                    secret
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                networking:
                  description: Networking specifies network configuration for the
                    cluster. Temporarily optional for backward compatibility, required
                    in future releases.
                  properties:
                    apiServer:
                      description: APIServer contains advanced network settings for
                        the API server that affect how the APIServer is exposed inside
                        a cluster node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress is the address that nodes
                            will use to talk to the API server. This is an address
                            associated with the loopback adapter of each node. If
                            not specified, 172.20.0.1 is used.
                          type: string
                        allowedCIDRBlocks:
                          description: AllowedCIDRBlocks is an allow list of CIDR
                            blocks that can access the APIServer If not specified,
                            traffic is allowed from all addresses. This depends on
                            underlying support by the cloud provider for Service LoadBalancerSourceRanges
                          items:
                            pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
                            type: string
                          type: array
                        port:
                          description: Port is the port at which the APIServer is
                            exposed inside a node. Other pods using host networking
                            cannot listen on this port. If not specified, 6443 is
                            used.
                          format: int32
                          type: integer
                      type: object
                    clusterNetwork:
                      description: ClusterNetwork is the list of IP address pools
                        for pods.
                      items:
                        description: ClusterNetworkEntry is a single IP address block
                          for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool.
                            type: string
                          hostPrefix:
                            description: HostPrefix is the prefix size to allocate
                              to each node from the CIDR. For example, 24 would allocate
                              2^8=256 adresses to each node. If this field is not
                              used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                        - cidr
                        type: object
                      type: array
                    machineNetwork:
                      description: MachineNetwork is the list of IP address pools
                        for machines.
                      items:
                        description: MachineNetworkEntry is a single IP address block
                          for node IP blocks.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for machines
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                    networkType:
                      default: OVNKubernetes
                      description: NetworkType specifies the SDN provider used for
                        cluster networking.
                      enum:
                      - OpenShiftSDN
                      - Calico
                      - OVNKubernetes
                      - Other
                      type: string
                    serviceNetwork:
                      description: 'ServiceNetwork is the list of IP address pools
                        for services. NOTE: currently only one entry is supported.'
                      items:
                        description: ServiceNetworkEntry is a single IP address block
                          for the service network.
                        properties:
                          cidr:
                            description: CIDR is the IP block address pool for services
                              within the cluster.
                            type: string
                        required:
                        - cidr
                        type: object
                      type: array
                  required:
                  - clusterNetwork
                  - networkType
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector when specified, must be true for the pods
                    managed by the HostedCluster to be scheduled.
                  type: object
                olmCatalogPlacement:
                  default: management
                  description: OLMCatalogPlacement specifies the placement of OLM
                    catalog components. By default, this is set to management and
                    OLM catalog components are deployed onto the management cluster.
                    If set to guest, the OLM catalog components will be deployed onto
                    the guest cluster.
                  enum:
                  - management
                  - guest
                  type: string
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: PlatformSpec specifies the underlying infrastructure
                    provider for the cluster and is used to configure platform specific
                    behavior.
                  properties:
                    agent:
                      description: Agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: AgentNamespace is the namespace where to search
                            for Agents for this cluster
                          type: string
                      required:
                      - agentNamespace
                      type: object
                    aws:
                      description: AWS specifies configuration for clusters running
                        on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: AdditionalAllowedPrincipals specifies a list
                            of additional allowed principal ARNs to be added to the
                            hosted control plane's VPC Endpoint Service to enable
                            additional VPC Endpoint connection requests to be automatically
                            accepted. See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            type: string
                          type: array
                        cloudProviderConfig:
                          description: 'CloudProviderConfig specifies AWS networking
                            configuration for the control plane. This is mainly used
                            for cloud provider controller config: https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                            TODO(dan): should this be named AWSNetworkConfig?'
                          properties:
                            subnet:
                              description: Subnet is the subnet to use for control
                                plane cloud resources.
                              properties:
                                filters:
                                  description: 'Filters is a set of key/value pairs
                                    used to identify a resource They are applied according
                                    to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                  items:
                                    description: Filter is a filter used to identify
                                      an AWS resource
                                    properties:
                                      name:
                                        description: Name of the filter. Filter names
                                          are case-sensitive.
                                        type: string
                                      values:
                                        description: Values includes one or more filter
                                          values. Filter values are case-sensitive.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - name
                                    - values
                                    type: object
                                  type: array
                                id:
                                  description: ID of resource
                                  type: string
                              type: object
                            vpc:
                              description: VPC is the VPC to use for control plane
                                cloud resources.
                              type: string
                            zone:
                              description: Zone is the availability zone where control
                                plane cloud resources are created.
                              type: string
                          required:
                          - vpc
                          type: object
                        endpointAccess:
                          default: Public
                          description: EndpointAccess specifies the publishing scope
                            of cluster endpoints. The default is Public.
                          enum:
                          - Public
                          - PublicAndPrivate
                          - Private
                          type: string
                        region:
                          description: Region is the AWS region in which the cluster
                            resides. This configures the OCP control plane cloud integrations,
                            and is used by NodePool to resolve the correct boot AMI
                            for a given release.
                          type: string
                        resourceTags:
                          description: ResourceTags is a list of additional tags to
                            apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        rolesRef:
                          description: RolesRef contains references to various AWS
                            IAM roles required to enable integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "ControlPlaneOperatorARN  is an ARN value
                                referencing a role appropriate for the Control Plane
                                Operator. \n The following is an example of a valid
                                policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"ec2:CreateVpcEndpoint\", \"ec2:DescribeVpcEndpoints\",
                                \"ec2:ModifyVpcEndpoint\", \"ec2:DeleteVpcEndpoints\",
                                \"ec2:CreateTags\", \"route53:ListHostedZones\", ],
                                \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\":
                                [ \"route53:ChangeResourceRecordSets\", \"route53:ListResourceRecordSets\"
                                ], \"Resource\": \"arn:aws:route53:::%s\" } ] }"
                              type: string
                            imageRegistryARN:
                              description: "ImageRegistryARN is an ARN value referencing
                                a role appropriate for the Image Registry Operator.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"s3:CreateBucket\",
                                \"s3:DeleteBucket\", \"s3:PutBucketTagging\", \"s3:GetBucketTagging\",
                                \"s3:PutBucketPublicAccessBlock\", \"s3:GetBucketPublicAccessBlock\",
                                \"s3:PutEncryptionConfiguration\", \"s3:GetEncryptionConfiguration\",
                                \"s3:PutLifecycleConfiguration\", \"s3:GetLifecycleConfiguration\",
                                \"s3:GetBucketLocation\", \"s3:ListBucket\", \"s3:GetObject\",
                                \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucketMultipartUploads\",
                                \"s3:AbortMultipartUpload\", \"s3:ListMultipartUploadParts\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            ingressARN:
                              description: "The referenced role must have a trust
                                relationship that allows it to be assumed via web
                                identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                }}:sub\": {{ .ServiceAccounts }} } } } ] } \n IngressARN
                                is an ARN value referencing a role appropriate for
                                the Ingress Operator. \n The following is an example
                                of a valid policy document: \n { \"Version\": \"2012-10-17\",
                                \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                                [ \"elasticloadbalancing:DescribeLoadBalancers\",
                                \"tag:GetResources\", \"route53:ListHostedZones\"
                                ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\",
                                \"Action\": [ \"route53:ChangeResourceRecordSets\"
                                ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\",
                                \"arn:aws:route53:::PRIVATE_ZONE_ID\" ] } ] }"
                              type: string
                            kubeCloudControllerARN:
                              description: "KubeCloudControllerARN is an ARN value
                                referencing a role appropriate for the KCM/KCC. \n
                                The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:DescribeInstances\", \"ec2:DescribeImages\",
                                \"ec2:DescribeRegions\", \"ec2:DescribeRouteTables\",
                                \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\",
                                \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                                \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                                \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                                \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\",
                                \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                                \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                                \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                                \"elasticloadbalancing:CreateLoadBalancerListeners\",
                                \"elasticloadbalancing:ConfigureHealthCheck\", \"elasticloadbalancing:DeleteLoadBalancer\",
                                \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                                \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",
                                \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",
                                \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                                \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                                \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                                \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                                \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DescribeListeners\",
                                \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                                \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                                \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                                \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                                \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                } ] }"
                              type: string
                            networkARN:
                              description: "NetworkARN is an ARN value referencing
                                a role appropriate for the Network Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\",
                                \"ec2:DescribeInstanceStatus\", \"ec2:DescribeInstanceTypes\",
                                \"ec2:UnassignPrivateIpAddresses\", \"ec2:AssignPrivateIpAddresses\",
                                \"ec2:UnassignIpv6Addresses\", \"ec2:AssignIpv6Addresses\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeNetworkInterfaces\"
                                ], \"Resource\": \"*\" } ] }"
                              type: string
                            nodePoolManagementARN:
                              description: "NodePoolManagementARN is an ARN value
                                referencing a role appropriate for the CAPI Controller.
                                \n The following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Action\": [ \"ec2:AllocateAddress\", \"ec2:AssociateRouteTable\",
                                \"ec2:AttachInternetGateway\", \"ec2:AuthorizeSecurityGroupIngress\",
                                \"ec2:CreateInternetGateway\", \"ec2:CreateNatGateway\",
                                \"ec2:CreateRoute\", \"ec2:CreateRouteTable\", \"ec2:CreateSecurityGroup\",
                                \"ec2:CreateSubnet\", \"ec2:CreateTags\", \"ec2:DeleteInternetGateway\",
                                \"ec2:DeleteNatGateway\", \"ec2:DeleteRouteTable\",
                                \"ec2:DeleteSecurityGroup\", \"ec2:DeleteSubnet\",
                                \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\",
                                \"ec2:DescribeAddresses\", \"ec2:DescribeAvailabilityZones\",
                                \"ec2:DescribeImages\", \"ec2:DescribeInstances\",
                                \"ec2:DescribeInternetGateways\", \"ec2:DescribeNatGateways\",
                                \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeNetworkInterfaceAttribute\",
                                \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                                \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                                \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\",
                                \"ec2:DisassociateRouteTable\", \"ec2:DisassociateAddress\",
                                \"ec2:ModifyInstanceAttribute\", \"ec2:ModifyNetworkInterfaceAttribute\",
                                \"ec2:ModifySubnetAttribute\", \"ec2:ReleaseAddress\",
                                \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\",
                                \"ec2:TerminateInstances\", \"tag:GetResources\",
                                \"ec2:CreateLaunchTemplate\", \"ec2:CreateLaunchTemplateVersion\",
                                \"ec2:DescribeLaunchTemplates\", \"ec2:DescribeLaunchTemplateVersions\",
                                \"ec2:DeleteLaunchTemplate\", \"ec2:DeleteLaunchTemplateVersions\"
                                ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\"
                                }, { \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\":
                                \"elasticloadbalancing.amazonaws.com\" } }, \"Action\":
                                [ \"iam:CreateServiceLinkedRole\" ], \"Resource\":
                                [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                                ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                                ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\"
                                ], \"Effect\": \"Allow\" } ] }"
                              type: string
                            storageARN:
                              description: "StorageARN is an ARN value referencing
                                a role appropriate for the Storage Operator. \n The
                                following is an example of a valid policy document:
                                \n { \"Version\": \"2012-10-17\", \"Statement\": [
                                { \"Effect\": \"Allow\", \"Action\": [ \"ec2:AttachVolume\",
                                \"ec2:CreateSnapshot\", \"ec2:CreateTags\", \"ec2:CreateVolume\",
                                \"ec2:DeleteSnapshot\", \"ec2:DeleteTags\", \"ec2:DeleteVolume\",
                                \"ec2:DescribeInstances\", \"ec2:DescribeSnapshots\",
                                \"ec2:DescribeTags\", \"ec2:DescribeVolumes\", \"ec2:DescribeVolumesModifications\",
                                \"ec2:DetachVolume\", \"ec2:ModifyVolume\" ], \"Resource\":
                                \"*\" } ] }"
                              type: string
                          required:
                          - controlPlaneOperatorARN
                          - imageRegistryARN
                          - ingressARN
                          - kubeCloudControllerARN
                          - networkARN
                          - nodePoolManagementARN
                          - storageARN
                          type: object
                        serviceEndpoints:
                          description: "ServiceEndpoints specifies optional custom
                            endpoints which will override the default service endpoint
                            of specific AWS Services. \n There must be only one ServiceEndpoint
                            for a given service name."
                          items:
                            description: AWSServiceEndpoint stores the configuration
                              for services to override existing defaults of AWS Services.
                            properties:
                              name:
                                description: Name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                type: string
                              url:
                                description: URL is fully qualified URI with scheme
                                  https, that overrides the default generated endpoint
                                  for a client. This must be provided and cannot be
                                  empty.
                                pattern: ^https://
                                type: string
                            required:
                            - name
                            - url
                            type: object
                          type: array
                      required:
                      - region
                      - rolesRef
                      type: object
                    azure:
                      description: Azure defines azure specific settings
                      properties:
                        credentials:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        machineIdentityID:
                          type: string
                        resourceGroup:
                          type: string
                        securityGroupName:
                          type: string
                        subnetName:
                          type: string
                        subscriptionID:
                          type: string
                        vnetID:
                          type: string
                        vnetName:
                          type: string
                      required:
                      - credentials
                      - location
                      - machineIdentityID
                      - resourceGroup
                      - securityGroupName
                      - subnetName
                      - subscriptionID
                      - vnetID
                      - vnetName
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: KubeVirt defines KubeVirt specific settings for
                        cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: "BaseDomainPassthrough toggles whether or not
                            an automatically generated base domain for the guest cluster
                            should be used that is a subdomain of the management cluster's
                            *.apps DNS. \n For the KubeVirt platform, the basedomain
                            can be autogenerated using the *.apps domain of the management/infra
                            hosting cluster This makes the guest cluster's base domain
                            a subdomain of the hypershift infra/mgmt cluster's base
                            domain. \n Example: Infra/Mgmt cluster's DNS Base: example.com
                            Cluster: mgmt-cluster.example.com Apps:    *.apps.mgmt-cluster.example.com
                            KubeVirt Guest cluster's DNS Base: apps.mgmt-cluster.example.com
                            Cluster: guest.apps.mgmt-cluster.example.com Apps: *.apps.guest.apps.mgmt-cluster.example.com
                            \n This is possible using OCP wildcard routes"
                          type: boolean
                      type: object
                    powervs:
                      description: PowerVS specifies configuration for clusters running
                        on IBMCloud Power VS Service. This field is immutable. Once
                        set, It can't be changed.
                      properties:
                        accountID:
                          description: AccountID is the IBMCloud account id. This
                            field is immutable. Once set, It can't be changed.
                          type: string
                        cisInstanceCRN:
                          description: CISInstanceCRN is the IBMCloud CIS Service
                            Instance's Cloud Resource Name This field is immutable.
                            Once set, It can't be changed.
                          pattern: '^crn:'
                          type: string
                        ingressOperatorCloudCreds:
                          description: IngressOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for ingress
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: "KubeCloudControllerCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the cloud controller policy. This field is immutable.
                            Once set, It can't be changed. \n TODO(dan): document
                            the \"cloud controller policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: "NodePoolManagementCreds is a reference to
                            a secret containing cloud credentials with permissions
                            matching the node pool management policy. This field is
                            immutable. Once set, It can't be changed. \n TODO(dan):
                            document the \"node pool management policy\""
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: Region is the IBMCloud region in which the
                            cluster resides. This configures the OCP control plane
                            cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release. This field
                            is immutable. Once set, It can't be changed.
                          type: string
                        resourceGroup:
                          description: ResourceGroup is the IBMCloud Resource Group
                            in which the cluster resides. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                        serviceInstanceID:
                          description: "ServiceInstance is the reference to the Power
                            VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances
                            at a specific geographic region. serviceInstance can be
                            created via IBM Cloud catalog or CLI. ServiceInstanceID
                            is the unique identifier that can be obtained from IBM
                            Cloud UI or IBM Cloud cli. \n More detail about Power
                            VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            \n This field is immutable. Once set, It can't be changed."
                          type: string
                        storageOperatorCloudCreds:
                          description: StorageOperatorCloudCreds is a reference to
                            a secret containing ibm cloud credentials for storage
                            operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: Subnet is the subnet to use for control plane
                            cloud resources. This field is immutable. Once set, It
                            can't be changed.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        vpc:
                          description: VPC specifies IBM Cloud PowerVS Load Balancing
                            configuration for the control plane. This field is immutable.
                            Once set, It can't be changed.
                          properties:
                            name:
                              description: Name for VPC to used for all the service
                                load balancer. This field is immutable. Once set,
                                It can't be changed.
                              type: string
                            region:
                              description: Region is the IBMCloud region in which
                                VPC gets created, this VPC used for all the ingress
                                traffic into the OCP cluster. This field is immutable.
                                Once set, It can't be changed.
                              type: string
                            subnet:
                              description: Subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              type: string
                            zone:
                              description: Zone is the availability zone where load
                                balancer cloud resources are created. This field is
                                immutable. Once set, It can't be changed.
                              type: string
                          required:
                          - name
                          - region
                          type: object
                        zone:
                          description: Zone is the availability zone where control
                            plane cloud resources are created. This field is immutable.
                            Once set, It can't be changed.
                          type: string
                      required:
                      - accountID
                      - cisInstanceCRN
                      - ingressOperatorCloudCreds
                      - kubeCloudControllerCreds
                      - nodePoolManagementCreds
                      - region
                      - resourceGroup
                      - serviceInstanceID
                      - storageOperatorCloudCreds
                      - subnet
                      - vpc
                      - zone
                      type: object
                    type:
                      description: Type is the type of infrastructure provider for
                        the cluster.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                  required:
                  - type
                  type: object
                pullSecret:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                releaseImage:
                  description: ReleaseImage is the release image applied to the hosted
                    control plane.
                  type: string
                secretEncryption:
                  description: SecretEncryption contains metadata about the kubernetes
                    secret encryption strategy being used for the cluster when applicable.
                  properties:
                    aescbc:
                      description: AESCBC defines metadata about the AESCBC secret
                        encryption strategy
                      properties:
                        activeKey:
                          description: ActiveKey defines the active key used to encrypt
                            new secrets
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: BackupKey defines the old key during the rotation
                            process so previously created secrets can continue to
                            be decrypted until they are all re-encrypted with the
                            active key.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - activeKey
                      type: object
                    kms:
                      description: KMS defines metadata about the kms secret encryption
                        strategy
                      properties:
                        aws:
                          description: AWS defines metadata about the configuration
                            of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: ActiveKey defines the active key used to
                                encrypt new secrets
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            auth:
                              description: Auth defines metadata about the management
                                of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "The referenced role must have a trust
                                    relationship that allows it to be assumed via
                                    web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                                    Example: { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Principal\": { \"Federated\":
                                    \"{{ .ProviderARN }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\",
                                    \"Condition\": { \"StringEquals\": { \"{{ .ProviderName
                                    }}:sub\": {{ .ServiceAccounts }} } } } ] } \n
                                    AWSKMSARN is an ARN value referencing a role appropriate
                                    for managing the auth via the AWS KMS key. \n
                                    The following is an example of a valid policy
                                    document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                                    [ { \"Effect\": \"Allow\", \"Action\": [ \"kms:Encrypt\",
                                    \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\",
                                    \"kms:DescribeKey\" ], \"Resource\": %q } ] }"
                                  type: string
                              required:
                              - awsKms
                              type: object
                            backupKey:
                              description: BackupKey defines the old key during the
                                rotation process so previously created secrets can
                                continue to be decrypted until they are all re-encrypted
                                with the active key.
                              properties:
                                arn:
                                  description: ARN is the Amazon Resource Name for
                                    the encryption key
                                  pattern: '^arn:'
                                  type: string
                              required:
                              - arn
                              type: object
                            region:
                              description: Region contains the AWS region
                              type: string
                          required:
                          - activeKey
                          - auth
                          - region
                          type: object
                        ibmcloud:
                          description: IBMCloud defines metadata for the IBM Cloud
                            KMS encryption strategy
                          properties:
                            auth:
                              description: Auth defines metadata for how authentication
                                is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: Managed defines metadata around the
                                    service to service authentication strategy for
                                    the IBM Cloud KMS system (all provider managed).
                                  type: object
                                type:
                                  description: Type defines the IBM Cloud KMS authentication
                                    strategy
                                  enum:
                                  - Managed
                                  - Unmanaged
                                  type: string
                                unmanaged:
                                  description: Unmanaged defines the auth metadata
                                    the customer provides to interact with IBM Cloud
                                    KMS
                                  properties:
                                    credentials:
                                      description: Credentials should reference a
                                        secret with a key field of IBMCloudIAMAPIKeySecretKey
                                        that contains a apikey to call IBM Cloud KMS
                                        APIs
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - credentials
                                  type: object
                              required:
                              - type
                              type: object
                            keyList:
                              description: KeyList defines the list of keys used for
                                data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata
                                  for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: CorrelationID is an identifier used
                                      to track all api call usage from hypershift
                                    type: string
                                  crkID:
                                    description: CRKID is the customer rook key id
                                    type: string
                                  instanceID:
                                    description: InstanceID is the id for the key
                                      protect instance
                                    type: string
                                  keyVersion:
                                    description: KeyVersion is a unique number associated
                                      with the key. The number increments whenever
                                      a new key is enabled for data encryption.
                                    type: integer
                                  url:
                                    description: URL is the url to call key protect
                                      apis over
                                    pattern: ^https://
                                    type: string
                                required:
                                - correlationID
                                - crkID
                                - instanceID
                                - keyVersion
                                - url
                                type: object
                              type: array
                            region:
                              description: Region is the IBM Cloud region
                              type: string
                          required:
                          - auth
                          - keyList
                          - region
                          type: object
                        provider:
                          description: Provider defines the KMS provider
                          enum:
                          - IBMCloud
                          - AWS
                          type: string
                      required:
                      - provider
                      type: object
                    type:
                      description: Type defines the type of kube secret encryption
                        being used
                      enum:
                      - kms
                      - aescbc
                      type: string
                  required:
                  - type
                  type: object
                serviceAccountSigningKey:
                  description: ServiceAccountSigningKey is a reference to a secret
                    containing the private key used by the service account token issuer.
                    The secret is expected to contain a single key named "key". If
                    not specified, a service account signing key will be generated
                    automatically for the cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                services:
                  description: Services defines metadata about how control plane services
                    are published in the management cluster.
                  items:
                    description: ServicePublishingStrategyMapping specifies how individual
                      control plane services are published from the hosting cluster
                      of a control plane.
                    properties:
                      service:
                        description: Service identifies the type of service being
                          published.
                        enum:
                        - APIServer
                        - OAuthServer
                        - OIDC
                        - Konnectivity
                        - Ignition
                        - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: ServicePublishingStrategy specifies how to publish
                          Service.
                        properties:
                          loadBalancer:
                            description: LoadBalancer configures exposing a service
                              using a LoadBalancer.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the LoadBalancer.
                                type: string
                            type: object
                          nodePort:
                            description: NodePort configures exposing a service using
                              a NodePort.
                            properties:
                              address:
                                description: Address is the host/ip that the NodePort
                                  service is exposed over.
                                type: string
                              port:
                                description: Port is the port of the NodePort service.
                                  If <=0, the port is dynamically assigned when the
                                  service is created.
                                format: int32
                                type: integer
                            required:
                            - address
                            type: object
                          route:
                            description: Route configures exposing a service using
                              a Route.
                            properties:
                              hostname:
                                description: Hostname is the name of the DNS record
                                  that will be created pointing to the Route.
                                type: string
                            type: object
                          type:
                            description: Type is the publishing strategy used for
                              the service.
                            enum:
                            - LoadBalancer
                            - NodePort
                            - Route
                            - None
                            - S3
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - service
                    - servicePublishingStrategy
                    type: object
                  type: array
                sshKey:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
              - dns
              - etcd
              - infraID
              - issuerURL
              - platform
              - pullSecret
              - releaseImage
              - services
              - sshKey
              type: object
            status:
              description: HostedControlPlaneStatus defines the observed state of
                HostedControlPlane
              properties:
                conditions:
                  description: 'Condition contains details for one aspect of the current
                    state of the HostedControlPlane. Current condition types are:
                    "Available"'
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint contains the endpoint information
                    by which external clients can access the control plane.  This
                    is populated after the infrastructure is ready.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is
                        serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                externalManagedControlPlane:
                  default: true
                  description: ExternalManagedControlPlane indicates to cluster-api
                    that the control plane is managed by an external service. https://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468
                  type: boolean
                initialized:
                  default: false
                  description: Initialized denotes whether or not the control plane
                    has provided a kubeadm-config. Once this condition is marked true,
                    its value is never changed. See the Ready condition for an indication
                    of the current readiness of the cluster's control plane. This
                    satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252
                  type: boolean
                kubeConfig:
                  description: KubeConfig is a reference to the secret containing
                    the default kubeconfig for this control plane.
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                  required:
                  - key
                  - name
                  type: object
                kubeadminPassword:
                  description: KubeadminPassword is a reference to the secret containing
                    the initial kubeadmin password for the guest cluster.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                lastReleaseImageTransitionTime:
                  description: "lastReleaseImageTransitionTime is the time of the
                    last update to the current releaseImage property. \n Deprecated:
                    Use versionStatus.history[0].startedTime instead."
                  format: date-time
                  type: string
                oauthCallbackURLTemplate:
                  description: OAuthCallbackURLTemplate contains a template for the
                    URL to use as a callback for identity providers. The [identity-provider-name]
                    placeholder must be replaced with the name of an identity provider
                    defined on the HostedCluster. This is populated after the infrastructure
                    is ready.
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the HostedControlPlane API Server
                    is ready to receive requests This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230
                  type: boolean
                releaseImage:
                  description: "ReleaseImage is the release image applied to the hosted
                    control plane. \n Deprecated: Use versionStatus.desired.image
                    instead."
                  type: string
                version:
                  description: "Version is the semantic version of the release applied
                    by the hosted control plane operator \n Deprecated: Use versionStatus.desired.version
                    instead."
                  type: string
                versionStatus:
                  description: versionStatus is the status of the release version
                    applied by the hosted control plane operator.
                  properties:
                    availableUpdates:
                      description: availableUpdates contains updates recommended for
                        this cluster. Updates which appear in conditionalUpdates but
                        not in availableUpdates may expose this cluster to known issues.
                        This list may be empty if no updates are recommended, if the
                        update service is unavailable, or if an invalid channel has
                        been specified.
                      items:
                        description: Release represents an OpenShift release image
                          and associated metadata.
                        properties:
                          channels:
                            description: channels is the set of Cincinnati channels
                              to which the release currently belongs.
                            items:
                              type: string
                            type: array
                          image:
                            description: image is a container image location that
                              contains the update. When this field is part of spec,
                              image is optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          url:
                            description: url contains information about this release.
                              This URL is set by the 'url' metadata property on a
                              release or the metadata returned by the update API and
                              should be displayed as a link in user interfaces. The
                              URL field may not be set for test or nightly releases.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec,
                              version is optional if image is specified.
                            type: string
                        type: object
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: conditionalUpdates contains the list of updates
                        that may be recommended for this cluster if it meets specific
                        required conditions. Consumers interested in the set of updates
                        that are actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an
                        empty or invalid channel has been specified.
                      items:
                        description: ConditionalUpdate represents an update which
                          is recommended to some clusters on the version the current
                          cluster is reconciling, but which may not be recommended
                          for the current cluster.
                        properties:
                          conditions:
                            description: 'conditions represents the observations of
                              the conditional update''s current status. Known types
                              are: * Evaluating, for whether the cluster-version operator
                              will attempt to evaluate any risks[].matchingRules.
                              * Recommended, for whether the update is recommended
                              for the current cluster.'
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, \n type
                                FooStatus struct{ // Represents the observations of
                                a foo's current state. // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                // +patchMergeKey=type // +patchStrategy=merge //
                                +listType=map // +listMapKey=type Conditions []metav1.Condition
                                `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: channels is the set of Cincinnati channels
                                  to which the release currently belongs.
                                items:
                                  type: string
                                type: array
                              image:
                                description: image is a container image location that
                                  contains the update. When this field is part of
                                  spec, image is optional if version is specified
                                  and the availableUpdates field contains a matching
                                  version.
                                type: string
                              url:
                                description: url contains information about this release.
                                  This URL is set by the 'url' metadata property on
                                  a release or the metadata returned by the update
                                  API and should be displayed as a link in user interfaces.
                                  The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: version is a semantic versioning identifying
                                  the update version. When this field is part of spec,
                                  version is optional if image is specified.
                                type: string
                            type: object
                          risks:
                            description: risks represents the range of issues associated
                              with updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend
                              the update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: ConditionalUpdateRisk represents a reason
                                and cluster-state for not recommending a conditional
                                update.
                              properties:
                                matchingRules:
                                  description: matchingRules is a slice of conditions
                                    for deciding which clusters match the risk and
                                    which do not. The slice is ordered by decreasing
                                    precedence. The cluster-version operator will
                                    walk the slice in order, and stop after the first
                                    it can successfully evaluate. If no condition
                                    can be successfully evaluated, the update will
                                    not be recommended.
                                  items:
                                    description: ClusterCondition is a union of typed
                                      cluster conditions.  The 'type' property determines
                                      which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may
                                      match, not match, or fail to evaluate.
                                    properties:
                                      promql:
                                        description: promQL represents a cluster condition
                                          based on PromQL.
                                        properties:
                                          promql:
                                            description: PromQL is a PromQL query
                                              classifying clusters. This query query
                                              should return a 1 in the match case
                                              and a 0 in the does-not-match case.
                                              Queries which return no time series,
                                              or which return values besides 0 or
                                              1, are evaluation failures.
                                            type: string
                                        required:
                                        - promql
                                        type: object
                                      type:
                                        description: type represents the cluster-condition
                                          type. This defines the members and semantics
                                          of any additional properties.
                                        enum:
                                        - Always
                                        - PromQL
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: message provides additional information
                                    about the risk of updating, in the event that
                                    matchingRules match the cluster state. This is
                                    only to be consumed by humans. It may contain
                                    Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name is the CamelCase reason for not
                                    recommending a conditional update, in the event
                                    that matchingRules match the cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this
                                    risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                              - matchingRules
                              - message
                              - name
                              - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - release
                        - risks
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: desired is the version that the cluster is reconciling
                        towards. If the cluster is not yet fully initialized desired
                        will be set with the information available, which may be an
                        image or a tag.
                      properties:
                        channels:
                          description: channels is the set of Cincinnati channels
                            to which the release currently belongs.
                          items:
                            type: string
                          type: array
                        image:
                          description: image is a container image location that contains
                            the update. When this field is part of spec, image is
                            optional if version is specified and the availableUpdates
                            field contains a matching version.
                          type: string
                        url:
                          description: url contains information about this release.
                            This URL is set by the 'url' metadata property on a release
                            or the metadata returned by the update API and should
                            be displayed as a link in user interfaces. The URL field
                            may not be set for test or nightly releases.
                          type: string
                        version:
                          description: version is a semantic versioning identifying
                            the update version. When this field is part of spec, version
                            is optional if image is specified.
                          type: string
                      type: object
                    history:
                      description: history contains a list of the most recent versions
                        applied to the cluster. This value may be empty during cluster
                        startup, and then will be updated when a new update is being
                        applied. The newest update is first in the list and it is
                        ordered by recency. Updates in the history have state Completed
                        if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of
                        update history is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to
                          the cluster.
                        properties:
                          acceptedRisks:
                            description: acceptedRisks records risks which were accepted
                              to initiate the update. For example, it may menition
                              an Upgradeable=False or missing signature that was overriden
                              via desiredUpdate.force, or an update that was initiated
                              despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: completionTime, if set, is when the update
                              was fully applied. The update that is currently being
                              applied will have a null completion time. Completion
                              time will always be set for entries that are not the
                              current update (usually to the started time of the next
                              update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: image is a container image location that
                              contains the update. This value is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update
                              was started.
                            format: date-time
                            type: string
                          state:
                            description: state reflects whether the update was fully
                              applied. The Partial state indicates the update is not
                              fully applied, while the Completed state indicates the
                              update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: verified indicates whether the provided update
                              was properly verified before it was installed. If this
                              is false the cluster may not be trusted. Verified does
                              not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: version is a semantic versioning identifying
                              the update version. If the requested image does not
                              define a version, or if a failure occurs retrieving
                              the image, this value may be empty.
                            type: string
                        required:
                        - completionTime
                        - image
                        - startedTime
                        - state
                        - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: observedGeneration reports which version of the
                        spec is being synced. If this value is not equal to metadata.generation,
                        then the desired and conditions fields may represent a previous
                        version.
                      format: int64
                      type: integer
                  required:
                  - availableUpdates
                  - desired
                  - observedGeneration
                  type: object
              required:
              - initialized
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: null
    name: nodepools.hypershift.openshift.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          service:
            name: operator
            namespace: ${NAMESPACE}
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1beta2
        - v1beta1
        - v1alpha1
    group: hypershift.openshift.io
    names:
      kind: NodePool
      listKind: NodePoolList
      plural: nodepools
      shortNames:
      - np
      - nps
      singular: nodepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Desired Nodes
        jsonPath: .spec.replicas
        name: Desired Nodes
        type: integer
      - description: Available Nodes
        jsonPath: .status.replicas
        name: Current Nodes
        type: integer
      - description: Autoscaling Enabled
        jsonPath: .status.conditions[?(@.type=="AutoscalingEnabled")].status
        name: Autoscaling
        type: string
      - description: Node Autorepair Enabled
        jsonPath: .status.conditions[?(@.type=="AutorepairEnabled")].status
        name: Autorepair
        type: string
      - description: Current version
        jsonPath: .status.version
        name: Version
        type: string
      - description: UpdatingVersion in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingVersion")].status
        name: UpdatingVersion
        type: string
      - description: UpdatingConfig in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingConfig")].status
        name: UpdatingConfig
        type: string
      - description: Message
        jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Message
        type: string
      deprecated: true
      deprecationWarning: v1alpha1 is a deprecated version for NodePool
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: NodePool is a scalable set of worker nodes attached to a HostedCluster.
            NodePool machine architectures are uniform within a given pool, and are
            independent of the control plane’s underlying machine architecture.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the NodePool.
              properties:
                autoScaling:
                  description: Autoscaling specifies auto-scaling behavior for the
                    NodePool.
                  properties:
                    max:
                      description: Max is the maximum number of nodes allowed in the
                        pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                    min:
                      description: Min is the minimum number of nodes to maintain
                        in the pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - max
                  - min
                  type: object
                clusterName:
                  description: "ClusterName is the name of the HostedCluster this
                    NodePool belongs to. \n TODO(dan): Should this be a LocalObjectReference?"
                  type: string
                  x-kubernetes-validations:
                  - message: ClusterName is immutable
                    rule: self == oldSelf
                config:
                  description: "Config is a list of references to ConfigMaps containing
                    serialized MachineConfig resources to be injected into the ignition
                    configurations of nodes in the NodePool. The MachineConfig API
                    schema is defined here: \n https://github.com/openshift/machine-config-operator/blob/18963e4f8fe66e8c513ca4b131620760a414997f/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L185
                    \n Each ConfigMap must have a single key named \"config\" whose
                    value is the JSON or YAML of a serialized MachineConfig."
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                management:
                  description: Management specifies behavior for managing nodes in
                    the pool, such as upgrade strategies and auto-repair behaviors.
                  properties:
                    autoRepair:
                      description: AutoRepair specifies whether health checks should
                        be enabled for machines in the NodePool. The default is false.
                      type: boolean
                    inPlace:
                      description: InPlace is the configuration for in-place upgrades.
                      properties:
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "MaxUnavailable is the maximum number of nodes
                            that can be unavailable during the update. \n Value can
                            be an absolute number (ex: 5) or a percentage of desired
                            nodes (ex: 10%). \n Absolute number is calculated from
                            percentage by rounding down. \n Defaults to 1. \n Example:
                            when this is set to 30%, a max of 30% of the nodes can
                            be made unschedulable/unavailable immediately when the
                            update starts. Once a set of nodes is updated, more nodes
                            can be made unschedulable for update, ensuring that the
                            total number of nodes schedulable at all times during
                            the update is at least 70% of desired nodes."
                          x-kubernetes-int-or-string: true
                      type: object
                    replace:
                      default:
                        rollingUpdate:
                          maxSurge: 1
                          maxUnavailable: 0
                        strategy: RollingUpdate
                      description: Replace is the configuration for rolling upgrades.
                      properties:
                        rollingUpdate:
                          description: RollingUpdate specifies a rolling update strategy
                            which upgrades nodes by creating new nodes and deleting
                            the old ones.
                          properties:
                            maxSurge:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxSurge is the maximum number of nodes
                                that can be provisioned above the desired number of
                                nodes. \n Value can be an absolute number (ex: 5)
                                or a percentage of desired nodes (ex: 10%). \n Absolute
                                number is calculated from percentage by rounding up.
                                \n This can not be 0 if MaxUnavailable is 0. \n Defaults
                                to 1. \n Example: when this is set to 30%, new nodes
                                can be provisioned immediately when the rolling update
                                starts, such that the total number of old and new
                                nodes do not exceed 130% of desired nodes. Once old
                                nodes have been deleted, new nodes can be provisioned,
                                ensuring that total number of nodes running at any
                                time during the update is at most 130% of desired
                                nodes."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxUnavailable is the maximum number of
                                nodes that can be unavailable during the update. \n
                                Value can be an absolute number (ex: 5) or a percentage
                                of desired nodes (ex: 10%). \n Absolute number is
                                calculated from percentage by rounding down. \n This
                                can not be 0 if MaxSurge is 0. \n Defaults to 0. \n
                                Example: when this is set to 30%, old nodes can be
                                deleted down to 70% of desired nodes immediately when
                                the rolling update starts. Once new nodes are ready,
                                more old nodes be deleted, followed by provisioning
                                new nodes, ensuring that the total number of nodes
                                available at all times during the update is at least
                                70% of desired nodes."
                              x-kubernetes-int-or-string: true
                          type: object
                        strategy:
                          description: Strategy is the node replacement strategy for
                            nodes in the pool.
                          enum:
                          - RollingUpdate
                          - OnDelete
                          type: string
                      type: object
                    upgradeType:
                      description: UpgradeType specifies the type of strategy for
                        handling upgrades.
                      enum:
                      - Replace
                      - InPlace
                      type: string
                      x-kubernetes-validations:
                      - message: UpgradeType is immutable
                        rule: self == oldSelf
                  required:
                  - upgradeType
                  type: object
                nodeCount:
                  description: 'Deprecated: Use Replicas instead. NodeCount will be
                    dropped in the next api release.'
                  format: int32
                  type: integer
                nodeDrainTimeout:
                  description: 'NodeDrainTimeout is the total amount of time that
                    the controller will spend on draining a node. The default value
                    is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                    TODO (alberto): Today changing this field will trigger a recreate
                    rolling update, which kind of defeats the purpose of the change.
                    In future we plan to propagate this field in-place. https://github.com/kubernetes-sigs/cluster-api/issues/5880'
                  type: string
                nodeLabels:
                  additionalProperties:
                    type: string
                  description: NodeLabels propagates a list of labels to Nodes, only
                    once on creation. Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
                  type: object
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the NodePool and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies the configuration used when using
                        Agent platform.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains labels that must
                            be set on an Agent in order to be selected for a Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    aws:
                      description: AWS specifies the configuration used when operating
                        on AWS.
                      properties:
                        ami:
                          description: AMI is the image id to use for node instances.
                            If unspecified, the default is chosen based on the NodePool
                            release payload image.
                          type: string
                        instanceProfile:
                          description: InstanceProfile is the AWS EC2 instance profile,
                            which is a container for an IAM role that the EC2 instance
                            uses.
                          type: string
                        instanceType:
                          description: InstanceType is an ec2 instance type for node
                            instances (e.g. m5.large).
                          type: string
                        resourceTags:
                          description: "ResourceTags is an optional list of additional
                            tags to apply to AWS node instances. \n These will be
                            merged with HostedCluster scoped tags, and HostedCluster
                            tags take precedence in case of conflicts. \n See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user."
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                          x-kubernetes-list-map-keys:
                          - key
                          x-kubernetes-list-type: map
                        rootVolume:
                          description: RootVolume specifies configuration for the
                            root volume of node instances.
                          properties:
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. This is only valid for type io1.
                              format: int64
                              type: integer
                            size:
                              description: "Size specifies size (in Gi) of the storage
                                device. \n Must be greater than the image snapshot
                                size or 8 (whichever is greater)."
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                        securityGroups:
                          description: SecurityGroups is an optional set of security
                            groups to associate with node instances.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID or filters. Only one of
                              ID or Filters may be specified. Specifying more than
                              one will result in a validation error.
                            properties:
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        subnet:
                          description: Subnet is the subnet to use for node instances.
                          properties:
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                      required:
                      - instanceType
                      type: object
                    azure:
                      properties:
                        availabilityZone:
                          description: AvailabilityZone of the nodepool. Must not
                            be specified for clusters in a location that does not
                            support AvailabilityZone.
                          type: string
                        diskSizeGB:
                          default: 120
                          format: int32
                          minimum: 16
                          type: integer
                        diskStorageAccountType:
                          default: Premium_LRS
                          description: "DiskStorageAccountType is the disk storage
                            account type to use. Valid values are: * Standard_LRS:
                            HDD * StandardSSD_LRS: Standard SSD * Premium_LRS: Premium
                            SDD * UltraSSD_LRS: Ultra SDD \n Defaults to Premium_LRS.
                            For more details, visit the Azure documentation: https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types#disk-type-comparison"
                          enum:
                          - Standard_LRS
                          - StandardSSD_LRS
                          - Premium_LRS
                          - UltraSSD_LRS
                          type: string
                        imageID:
                          description: 'ImageID is the id of the image to boot from.
                            If unset, the default image at the location below will
                            be used: subscription/$subscriptionID/resourceGroups/$resourceGroupName/providers/Microsoft.Compute/images/rhcos.x86_64.vhd'
                          type: string
                        vmsize:
                          type: string
                      required:
                      - vmsize
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: Kubevirt specifies the configuration used when
                        operating on KubeVirt platform.
                      properties:
                        compute:
                          default:
                            cores: 2
                            memory: 4Gi
                          description: Compute contains values representing the virtual
                            hardware requested for the VM
                          properties:
                            cores:
                              default: 2
                              description: Cores represents how many cores the guest
                                VM should have
                              format: int32
                              type: integer
                            memory:
                              anyOf:
                              - type: integer
                              - type: string
                              default: 4Gi
                              description: Memory represents how much guest memory
                                the VM should have
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        rootVolume:
                          description: RootVolume represents values associated with
                            the VM volume that will host rhcos
                          properties:
                            diskImage:
                              description: Image represents what rhcos image to use
                                for the node pool
                              properties:
                                containerDiskImage:
                                  description: ContainerDiskImage is a string representing
                                    the container image that holds the root disk
                                  type: string
                              type: object
                            persistent:
                              description: Persistent volume type means the VM's storage
                                is backed by a PVC VMs that use persistent volumes
                                can survive disruption events like restart and eviction
                                This is the default type used when no storage type
                                is defined.
                              properties:
                                accessModes:
                                  description: 'AccessModes is an array that contains
                                    the desired Access Modes the root volume should
                                    have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes'
                                  items:
                                    enum:
                                    - ReadWriteOnce
                                    - ReadWriteMany
                                    - ReadOnly
                                    - ReadWriteOncePod
                                    type: string
                                  type: array
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 16Gi
                                  description: Size is the size of the persistent
                                    storage volume
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClass:
                                  description: StorageClass is the storageClass used
                                    for the underlying PVC that hosts the volume
                                  type: string
                              type: object
                            type:
                              default: Persistent
                              description: Type represents the type of storage to
                                associate with the kubevirt VMs.
                              enum:
                              - Persistent
                              type: string
                          type: object
                      required:
                      - rootVolume
                      type: object
                    powervs:
                      description: PowerVS specifies the configuration used when using
                        IBMCloud PowerVS platform.
                      properties:
                        image:
                          description: Image used for deploying the nodes. If unspecified,
                            the default is chosen based on the NodePool release payload
                            image.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        imageDeletePolicy:
                          default: delete
                          description: "ImageDeletePolicy is policy for the image
                            deletion. \n delete: delete the image from the infrastructure.
                            retain: delete the image from the openshift but retain
                            in the infrastructure. \n The default is delete"
                          enum:
                          - delete
                          - retain
                          type: string
                        memoryGiB:
                          default: 32
                          description: "MemoryGiB is the size of a virtual machine's
                            memory, in GiB. maximum value for the MemoryGiB depends
                            on the selected SystemType. when SystemType is set to
                            e880 maximum MemoryGiB value is 7463 GiB. when SystemType
                            is set to e980 maximum MemoryGiB value is 15307 GiB. when
                            SystemType is set to s922 maximum MemoryGiB value is 942
                            GiB. The minimum memory is 32 GiB. \n When omitted, this
                            means the user has no opinion and the platform is left
                            to choose a reasonable default. The current default is
                            32."
                          format: int32
                          type: integer
                        processorType:
                          default: shared
                          description: "ProcessorType is the VM instance processor
                            type. It must be set to one of the following values: Dedicated,
                            Capped or Shared. \n Dedicated: resources are allocated
                            for a specific client, The hypervisor makes a 1:1 binding
                            of a partition’s processor to a physical processor core.
                            Shared: Shared among other clients. Capped: Shared, but
                            resources do not expand beyond those that are requested,
                            the amount of CPU time is Capped to the value specified
                            for the entitlement. \n if the processorType is selected
                            as Dedicated, then Processors value cannot be fractional.
                            When omitted, this means that the user has no opinion
                            and the platform is left to choose a reasonable default.
                            The current default is Shared."
                          enum:
                          - dedicated
                          - shared
                          - capped
                          type: string
                        processors:
                          anyOf:
                          - type: integer
                          - type: string
                          default: "0.5"
                          description: Processors is the number of virtual processors
                            in a virtual machine. when the processorType is selected
                            as Dedicated the processors value cannot be fractional.
                            maximum value for the Processors depends on the selected
                            SystemType. when SystemType is set to e880 or e980 maximum
                            Processors value is 143. when SystemType is set to s922
                            maximum Processors value is 15. minimum value for Processors
                            depends on the selected ProcessorType. when ProcessorType
                            is set as Shared or Capped, The minimum processors is
                            0.5. when ProcessorType is set as Dedicated, The minimum
                            processors is 1. When omitted, this means that the user
                            has no opinion and the platform is left to choose a reasonable
                            default. The default is set based on the selected ProcessorType.
                            when ProcessorType selected as Dedicated, the default
                            is set to 1. when ProcessorType selected as Shared or
                            Capped, the default is set to 0.5.
                          x-kubernetes-int-or-string: true
                        storageType:
                          default: tier1
                          description: "StorageType for the image and nodes, this
                            will be ignored if Image is specified. The storage tiers
                            in PowerVS are based on I/O operations per second (IOPS).
                            It means that the performance of your storage volumes
                            is limited to the maximum number of IOPS based on volume
                            size and storage tier. Although, the exact numbers might
                            change over time, the Tier 3 storage is currently set
                            to 3 IOPS/GB, and the Tier 1 storage is currently set
                            to 10 IOPS/GB. \n The default is tier1"
                          enum:
                          - tier1
                          - tier3
                          type: string
                        systemType:
                          default: s922
                          description: SystemType is the System type used to host
                            the instance. systemType determines the number of cores
                            and memory that is available. Few of the supported SystemTypes
                            are s922,e880,e980. e880 systemType available only in
                            Dallas Datacenters. e980 systemType available in Datacenters
                            except Dallas and Washington. When omitted, this means
                            that the user has no opinion and the platform is left
                            to choose a reasonable default. The current default is
                            s922 which is generally available.
                          type: string
                      type: object
                    type:
                      description: Type specifies the platform name.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                      x-kubernetes-validations:
                      - message: Type is immutable
                        rule: self == oldSelf
                  required:
                  - type
                  type: object
                  x-kubernetes-validations:
                  - message: Platform is immutable
                    rule: self == oldSelf
                release:
                  description: Release specifies the OCP release used for the NodePool.
                    This informs the ignition configuration for machines, as well
                    as other platform specific machine properties (e.g. an AMI on
                    the AWS platform).
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
                replicas:
                  description: Replicas is the desired number of nodes the pool should
                    maintain. If unset, the default value is 0.
                  format: int32
                  type: integer
                taints:
                  description: Taints if specified, propagates a list of taints to
                    Nodes, only once on creation.
                  items:
                    description: Taint is as v1 Core but without TimeAdded. https://github.com/kubernetes/kubernetes/blob/ed8cad1e80d096257921908a52ac69cf1f41a098/staging/src/k8s.io/api/core/v1/types.go#L3037-L3053
                    properties:
                      effect:
                        description: Required. The effect of the taint on pods that
                          do not tolerate the taint. Valid effects are NoSchedule,
                          PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Required. The taint key to be applied to a node.
                        type: string
                      value:
                        description: The taint value corresponding to the taint key.
                        type: string
                    required:
                    - effect
                    - key
                    type: object
                  type: array
                tuningConfig:
                  description: "TuningConfig is a list of references to ConfigMaps
                    containing serialized Tuned resources to define the tuning configuration
                    to be applied to nodes in the NodePool. The Tuned API is defined
                    here: \n https://github.com/openshift/cluster-node-tuning-operator/blob/2c76314fb3cc8f12aef4a0dcd67ddc3677d5b54f/pkg/apis/tuned/v1/tuned_types.go
                    \n Each ConfigMap must have a single key named \"tuned\" whose
                    value is the JSON or YAML of a serialized Tuned."
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
              required:
              - clusterName
              - management
              - platform
              - release
              type: object
            status:
              description: Status is the latest observed status of the NodePool.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of the node pool's current state.
                  items:
                    description: We define our own condition type since metav1.Condition
                      has validation for Reason that might be broken by what we bubble
                      up from CAPI. NodePoolCondition defines an observation of NodePool
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      observedGeneration:
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                replicas:
                  description: Replicas is the latest observed number of nodes in
                    the pool.
                  format: int32
                  type: integer
                version:
                  description: Version is the semantic version of the latest applied
                    release specified by the NodePool.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
    - additionalPrinterColumns:
      - description: Cluster
        jsonPath: .spec.clusterName
        name: Cluster
        type: string
      - description: Desired Nodes
        jsonPath: .spec.replicas
        name: Desired Nodes
        type: integer
      - description: Available Nodes
        jsonPath: .status.replicas
        name: Current Nodes
        type: integer
      - description: Autoscaling Enabled
        jsonPath: .status.conditions[?(@.type=="AutoscalingEnabled")].status
        name: Autoscaling
        type: string
      - description: Node Autorepair Enabled
        jsonPath: .status.conditions[?(@.type=="AutorepairEnabled")].status
        name: Autorepair
        type: string
      - description: Current version
        jsonPath: .status.version
        name: Version
        type: string
      - description: UpdatingVersion in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingVersion")].status
        name: UpdatingVersion
        type: string
      - description: UpdatingConfig in progress
        jsonPath: .status.conditions[?(@.type=="UpdatingConfig")].status
        name: UpdatingConfig
        type: string
      - description: Message
        jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Message
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: NodePool is a scalable set of worker nodes attached to a HostedCluster.
            NodePool machine architectures are uniform within a given pool, and are
            independent of the control plane’s underlying machine architecture.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the NodePool.
              properties:
                autoScaling:
                  description: Autoscaling specifies auto-scaling behavior for the
                    NodePool.
                  properties:
                    max:
                      description: Max is the maximum number of nodes allowed in the
                        pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                    min:
                      description: Min is the minimum number of nodes to maintain
                        in the pool. Must be >= 1.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - max
                  - min
                  type: object
                clusterName:
                  description: "ClusterName is the name of the HostedCluster this
                    NodePool belongs to. \n TODO(dan): Should this be a LocalObjectReference?"
                  type: string
                config:
                  description: "Config is a list of references to ConfigMaps containing
                    serialized MachineConfig resources to be injected into the ignition
                    configurations of nodes in the NodePool. The MachineConfig API
                    schema is defined here: \n https://github.com/openshift/machine-config-operator/blob/18963e4f8fe66e8c513ca4b131620760a414997f/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L185
                    \n Each ConfigMap must have a single key named \"config\" whose
                    value is the JSON or YAML of a serialized MachineConfig."
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                management:
                  description: Management specifies behavior for managing nodes in
                    the pool, such as upgrade strategies and auto-repair behaviors.
                  properties:
                    autoRepair:
                      description: AutoRepair specifies whether health checks should
                        be enabled for machines in the NodePool. The default is false.
                      type: boolean
                    inPlace:
                      description: InPlace is the configuration for in-place upgrades.
                      properties:
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "MaxUnavailable is the maximum number of nodes
                            that can be unavailable during the update. \n Value can
                            be an absolute number (ex: 5) or a percentage of desired
                            nodes (ex: 10%). \n Absolute number is calculated from
                            percentage by rounding down. \n Defaults to 1. \n Example:
                            when this is set to 30%, a max of 30% of the nodes can
                            be made unschedulable/unavailable immediately when the
                            update starts. Once a set of nodes is updated, more nodes
                            can be made unschedulable for update, ensuring that the
                            total number of nodes schedulable at all times during
                            the update is at least 70% of desired nodes."
                          x-kubernetes-int-or-string: true
                      type: object
                    replace:
                      default:
                        rollingUpdate:
                          maxSurge: 1
                          maxUnavailable: 0
                        strategy: RollingUpdate
                      description: Replace is the configuration for rolling upgrades.
                      properties:
                        rollingUpdate:
                          description: RollingUpdate specifies a rolling update strategy
                            which upgrades nodes by creating new nodes and deleting
                            the old ones.
                          properties:
                            maxSurge:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxSurge is the maximum number of nodes
                                that can be provisioned above the desired number of
                                nodes. \n Value can be an absolute number (ex: 5)
                                or a percentage of desired nodes (ex: 10%). \n Absolute
                                number is calculated from percentage by rounding up.
                                \n This can not be 0 if MaxUnavailable is 0. \n Defaults
                                to 1. \n Example: when this is set to 30%, new nodes
                                can be provisioned immediately when the rolling update
                                starts, such that the total number of old and new
                                nodes do not exceed 130% of desired nodes. Once old
                                nodes have been deleted, new nodes can be provisioned,
                                ensuring that total number of nodes running at any
                                time during the update is at most 130% of desired
                                nodes."
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                              - type: integer
                              - type: string
                              description: "MaxUnavailable is the maximum number of
                                nodes that can be unavailable during the update. \n
                                Value can be an absolute number (ex: 5) or a percentage
                                of desired nodes (ex: 10%). \n Absolute number is
                                calculated from percentage by rounding down. \n This
                                can not be 0 if MaxSurge is 0. \n Defaults to 0. \n
                                Example: when this is set to 30%, old nodes can be
                                deleted down to 70% of desired nodes immediately when
                                the rolling update starts. Once new nodes are ready,
                                more old nodes be deleted, followed by provisioning
                                new nodes, ensuring that the total number of nodes
                                available at all times during the update is at least
                                70% of desired nodes."
                              x-kubernetes-int-or-string: true
                          type: object
                        strategy:
                          description: Strategy is the node replacement strategy for
                            nodes in the pool.
                          enum:
                          - RollingUpdate
                          - OnDelete
                          type: string
                      type: object
                    upgradeType:
                      description: UpgradeType specifies the type of strategy for
                        handling upgrades.
                      enum:
                      - Replace
                      - InPlace
                      type: string
                  required:
                  - upgradeType
                  type: object
                nodeDrainTimeout:
                  description: 'NodeDrainTimeout is the total amount of time that
                    the controller will spend on draining a node. The default value
                    is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                    TODO (alberto): Today changing this field will trigger a recreate
                    rolling update, which kind of defeats the purpose of the change.
                    In future we plan to propagate this field in-place. https://github.com/kubernetes-sigs/cluster-api/issues/5880'
                  type: string
                nodeLabels:
                  additionalProperties:
                    type: string
                  description: NodeLabels propagates a list of labels to Nodes, only
                    once on creation. Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
                  type: object
                pausedUntil:
                  description: 'PausedUntil is a field that can be used to pause reconciliation
                    on a resource. Either a date can be provided in RFC3339 format
                    or a boolean. If a date is provided: reconciliation is paused
                    on the resource until that date. If the boolean true is provided:
                    reconciliation is paused on the resource until the field is removed.'
                  type: string
                platform:
                  description: Platform specifies the underlying infrastructure provider
                    for the NodePool and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: Agent specifies the configuration used when using
                        Agent platform.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains labels that must
                            be set on an Agent in order to be selected for a Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    aws:
                      description: AWS specifies the configuration used when operating
                        on AWS.
                      properties:
                        ami:
                          description: AMI is the image id to use for node instances.
                            If unspecified, the default is chosen based on the NodePool
                            release payload image.
                          type: string
                        instanceProfile:
                          description: InstanceProfile is the AWS EC2 instance profile,
                            which is a container for an IAM role that the EC2 instance
                            uses.
                          type: string
                        instanceType:
                          description: InstanceType is an ec2 instance type for node
                            instances (e.g. m5.large).
                          type: string
                        resourceTags:
                          description: "ResourceTags is an optional list of additional
                            tags to apply to AWS node instances. \n These will be
                            merged with HostedCluster scoped tags, and HostedCluster
                            tags take precedence in case of conflicts. \n See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                            for information on tagging AWS resources. AWS supports
                            a maximum of 50 tags per resource. OpenShift reserves
                            25 tags for its use, leaving 25 tags available for the
                            user."
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources
                              created for the cluster.
                            properties:
                              key:
                                description: Key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: "Value is the value of the tag. \n Some
                                  AWS service do not support empty values. Since tags
                                  are added to resources in many services, the length
                                  of the tag value must meet the requirements of all
                                  services."
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          maxItems: 25
                          type: array
                        rootVolume:
                          description: RootVolume specifies configuration for the
                            root volume of node instances.
                          properties:
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. This is only valid for type io1.
                              format: int64
                              type: integer
                            size:
                              description: "Size specifies size (in Gi) of the storage
                                device. \n Must be greater than the image snapshot
                                size or 8 (whichever is greater)."
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                        securityGroups:
                          description: SecurityGroups is an optional set of security
                            groups to associate with node instances.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID or filters. Only one of
                              ID or Filters may be specified. Specifying more than
                              one will result in a validation error.
                            properties:
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        subnet:
                          description: Subnet is the subnet to use for node instances.
                          properties:
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                      required:
                      - instanceType
                      type: object
                    azure:
                      properties:
                        availabilityZone:
                          description: AvailabilityZone of the nodepool. Must not
                            be specified for clusters in a location that does not
                            support AvailabilityZone.
                          type: string
                        diskSizeGB:
                          default: 120
                          format: int32
                          minimum: 16
                          type: integer
                        diskStorageAccountType:
                          default: Premium_LRS
                          description: "DiskStorageAccountType is the disk storage
                            account type to use. Valid values are: * Standard_LRS:
                            HDD * StandardSSD_LRS: Standard SSD * Premium_LRS: Premium
                            SDD * UltraSSD_LRS: Ultra SDD \n Defaults to Premium_LRS.
                            For more details, visit the Azure documentation: https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types#disk-type-comparison"
                          enum:
                          - Standard_LRS
                          - StandardSSD_LRS
                          - Premium_LRS
                          - UltraSSD_LRS
                          type: string
                        imageID:
                          description: 'ImageID is the id of the image to boot from.
                            If unset, the default image at the location below will
                            be used: subscription/$subscriptionID/resourceGroups/$resourceGroupName/providers/Microsoft.Compute/images/rhcos.x86_64.vhd'
                          type: string
                        vmsize:
                          type: string
                      required:
                      - vmsize
                      type: object
                    ibmcloud:
                      description: IBMCloud defines IBMCloud specific settings for
                        components
                      properties:
                        providerType:
                          description: ProviderType is a specific supported infrastructure
                            provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: Kubevirt specifies the configuration used when
                        operating on KubeVirt platform.
                      properties:
                        compute:
                          default:
                            cores: 2
                            memory: 4Gi
                          description: Compute contains values representing the virtual
                            hardware requested for the VM
                          properties:
                            cores:
                              default: 2
                              description: Cores represents how many cores the guest
                                VM should have
                              format: int32
                              type: integer
                            memory:
                              anyOf:
                              - type: integer
                              - type: string
                              default: 4Gi
                              description: Memory represents how much guest memory
                                the VM should have
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        rootVolume:
                          description: RootVolume represents values associated with
                            the VM volume that will host rhcos
                          properties:
                            diskImage:
                              description: Image represents what rhcos image to use
                                for the node pool
                              properties:
                                containerDiskImage:
                                  description: ContainerDiskImage is a string representing
                                    the container image that holds the root disk
                                  type: string
                              type: object
                            persistent:
                              description: Persistent volume type means the VM's storage
                                is backed by a PVC VMs that use persistent volumes
                                can survive disruption events like restart and eviction
                                This is the default type used when no storage type
                                is defined.
                              properties:
                                accessModes:
                                  description: 'AccessModes is an array that contains
                                    the desired Access Modes the root volume should
                                    have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes'
                                  items:
                                    enum:
                                    - ReadWriteOnce
                                    - ReadWriteMany
                                    - ReadOnly
                                    - ReadWriteOncePod
                                    type: string
                                  type: array
                                size:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  default: 16Gi
                                  description: Size is the size of the persistent
                                    storage volume
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClass:
                                  description: StorageClass is the storageClass used
                                    for the underlying PVC that hosts the volume
                                  type: string
                              type: object
                            type:
                              default: Persistent
                              description: Type represents the type of storage to
                                associate with the kubevirt VMs.
                              enum:
                              - Persistent
                              type: string
                          type: object
                      required:
                      - rootVolume
                      type: object
                    powervs:
                      description: PowerVS specifies the configuration used when using
                        IBMCloud PowerVS platform.
                      properties:
                        image:
                          description: Image used for deploying the nodes. If unspecified,
                            the default is chosen based on the NodePool release payload
                            image.
                          properties:
                            id:
                              description: ID of resource
                              type: string
                            name:
                              description: Name of resource
                              type: string
                          type: object
                        imageDeletePolicy:
                          default: delete
                          description: "ImageDeletePolicy is policy for the image
                            deletion. \n delete: delete the image from the infrastructure.
                            retain: delete the image from the openshift but retain
                            in the infrastructure. \n The default is delete"
                          enum:
                          - delete
                          - retain
                          type: string
                        memoryGiB:
                          default: 32
                          description: "MemoryGiB is the size of a virtual machine's
                            memory, in GiB. maximum value for the MemoryGiB depends
                            on the selected SystemType. when SystemType is set to
                            e880 maximum MemoryGiB value is 7463 GiB. when SystemType
                            is set to e980 maximum MemoryGiB value is 15307 GiB. when
                            SystemType is set to s922 maximum MemoryGiB value is 942
                            GiB. The minimum memory is 32 GiB. \n When omitted, this
                            means the user has no opinion and the platform is left
                            to choose a reasonable default. The current default is
                            32."
                          format: int32
                          type: integer
                        processorType:
                          default: shared
                          description: "ProcessorType is the VM instance processor
                            type. It must be set to one of the following values: Dedicated,
                            Capped or Shared. \n Dedicated: resources are allocated
                            for a specific client, The hypervisor makes a 1:1 binding
                            of a partition’s processor to a physical processor core.
                            Shared: Shared among other clients. Capped: Shared, but
                            resources do not expand beyond those that are requested,
                            the amount of CPU time is Capped to the value specified
                            for the entitlement. \n if the processorType is selected
                            as Dedicated, then Processors value cannot be fractional.
                            When omitted, this means that the user has no opinion
                            and the platform is left to choose a reasonable default.
                            The current default is Shared."
                          enum:
                          - dedicated
                          - shared
                          - capped
                          type: string
                        processors:
                          anyOf:
                          - type: integer
                          - type: string
                          default: "0.5"
                          description: Processors is the number of virtual processors
                            in a virtual machine. when the processorType is selected
                            as Dedicated the processors value cannot be fractional.
                            maximum value for the Processors depends on the selected
                            SystemType. when SystemType is set to e880 or e980 maximum
                            Processors value is 143. when SystemType is set to s922
                            maximum Processors value is 15. minimum value for Processors
                            depends on the selected ProcessorType. when ProcessorType
                            is set as Shared or Capped, The minimum processors is
                            0.5. when ProcessorType is set as Dedicated, The minimum
                            processors is 1. When omitted, this means that the user
                            has no opinion and the platform is left to choose a reasonable
                            default. The default is set based on the selected ProcessorType.
                            when ProcessorType selected as Dedicated, the default
                            is set to 1. when ProcessorType selected as Shared or
                            Capped, the default is set to 0.5.
                          x-kubernetes-int-or-string: true
                        storageType:
                          default: tier1
                          description: "StorageType for the image and nodes, this
                            will be ignored if Image is specified. The storage tiers
                            in PowerVS are based on I/O operations per second (IOPS).
                            It means that the performance of your storage volumes
                            is limited to the maximum number of IOPS based on volume
                            size and storage tier. Although, the exact numbers might
                            change over time, the Tier 3 storage is currently set
                            to 3 IOPS/GB, and the Tier 1 storage is currently set
                            to 10 IOPS/GB. \n The default is tier1"
                          enum:
                          - tier1
                          - tier3
                          type: string
                        systemType:
                          default: s922
                          description: SystemType is the System type used to host
                            the instance. systemType determines the number of cores
                            and memory that is available. Few of the supported SystemTypes
                            are s922,e880,e980. e880 systemType available only in
                            Dallas Datacenters. e980 systemType available in Datacenters
                            except Dallas and Washington. When omitted, this means
                            that the user has no opinion and the platform is left
                            to choose a reasonable default. The current default is
                            s922 which is generally available.
                          type: string
                      type: object
                    type:
                      description: Type specifies the platform name.
                      enum:
                      - AWS
                      - None
                      - IBMCloud
                      - Agent
                      - KubeVirt
                      - Azure
                      - PowerVS
                      type: string
                  required:
                  - type
                  type: object
                release:
                  description: Release specifies the OCP release used for the NodePool.
                    This informs the ignition configuration for machines, as well
                    as other platform specific machine properties (e.g. an AMI on
                    the AWS platform).
                  properties:
                    image:
                      description: Image is the image pullspec of an OCP release payload
                        image.
                      pattern: ^(\w+\S+)$
                      type: string
                  required:
                  - image
                  type: object
                replicas:
                  description: Replicas is the desired number of nodes the pool should
                    maintain. If unset, the default value is 0.
                  format: int32
                  type: integer
                taints:
                  description: Taints if specified, propagates a list of taints to
                    Nodes, only once on creation.
                  items:
                    description: Taint is as v1 Core but without TimeAdded. https://github.com/kubernetes/kubernetes/blob/ed8cad1e80d096257921908a52ac69cf1f41a098/staging/src/k8s.io/api/core/v1/types.go#L3037-L3053
                    properties:
                      effect:
                        description: Required. The effect of the taint on pods that
                          do not tolerate the taint. Valid effects are NoSchedule,
                          PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Required. The taint key to be applied to a node.
                        type: string
                      value:
                        description: The taint value corresponding to the taint key.
                        type: string
                    required:
                    - effect
                    - key
                    type: object
                  type: array
                tuningConfig:
                  description: "TuningConfig is a list of references to ConfigMaps
                    containing serialized Tuned resources to define the tuning configuration
                    to be applied to nodes in the NodePool. The Tuned API is defined
                    here: \n https://github.com/openshift/cluster-node-tuning-operator/blob/2c76314fb3cc8f12aef4a0dcd67ddc3677d5b54f/pkg/apis/tuned/v1/tuned_types.go
                    \n Each ConfigMap must have a single key named \"tuned\" whose
                    value is the JSON or YAML of a serialized Tuned."
                  items:
                    description: LocalObjectReference contains enough information
                      to let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
              required:
              - clusterName
              - management
              - platform
              - release
              type: object
            status:
              description: Status is the latest observed status of the NodePool.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of the node pool's current state.
                  items:
                    description: We define our own condition type since metav1.Condition
                      has validation for Reason that might be broken by what we bubble
                      up from CAPI. NodePoolCondition defines an observation of NodePool
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      observedGeneration:
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                replicas:
                  description: Replicas is the latest observed number of nodes in
                    the pool.
                  format: int32
                  type: integer
                version:
                  description: Version is the semantic version of the latest applied
                    release specified by the NodePool.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: null
    storedVersions: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: hypershift-client
  rules:
  - apiGroups:
    - hypershift.openshift.io
    resources:
    - hostedclusters
    - nodepools
    verbs:
    - '*'
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    name: hypershift-client
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-client
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: hypershift-client
  subjects:
  - kind: ServiceAccount
    name: hypershift-client
    namespace: ${NAMESPACE}
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: hypershift-client
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: hypershift-readers
  rules:
  - apiGroups:
    - hypershift.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - config.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - bootstrap.cluster.x-k8s.io
    - controlplane.cluster.x-k8s.io
    - infrastructure.cluster.x-k8s.io
    - machines.cluster.x-k8s.io
    - exp.infrastructure.cluster.x-k8s.io
    - addons.cluster.x-k8s.io
    - exp.cluster.x-k8s.io
    - cluster.x-k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - operator.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - route.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - get
    - list
    - watch
    - use
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    - configmaps
    - pods
    - pods/log
    - nodes
    - namespaces
    - serviceaccounts
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - etcd.database.coreos.com
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - machine.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - monitoring.coreos.com
    - monitoring.rhobs
    resources:
    - podmonitors
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - capi-provider.agent-install.openshift.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: hypershift-readers
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: hypershift-readers
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: hypershift-readers
- apiVersion: v1
  data:
    name: ${OIDC_S3_NAME}
    region: ${OIDC_S3_REGION}
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: oidc-storage-provider-s3-config
    namespace: kube-public
parameters:
- name: OPERATOR_IMG
  value: quay.io/hypershift/hypershift-operator
- name: IMAGE_TAG
  value: latest
- name: NAMESPACE
  value: hypershift
- name: OIDC_S3_NAME
- name: OIDC_S3_REGION
- name: OIDC_S3_CREDS_SECRET
  value: oidc-s3-creds
- name: OIDC_S3_CREDS_SECRET_KEY
  value: credentials
- name: AWS_PRIVATE_REGION
  value: eu-east-1
- name: AWS_PRIVATE_CREDS_SECRET
  value: aws-credentials
- name: AWS_PRIVATE_CREDS_SECRET_KEY
  value: credentials
- name: EXTERNAL_DNS_DOMAIN_FILTER
  value: service.hypershift.example.org
- name: EXTERNAL_DNS_CREDS_SECRET
  value: dns-credentials
- name: EXTERNAL_DNS_TXT_OWNER_ID
  value: txt-owner-id
- name: OPERATOR_REPLICAS
  value: "1"
