apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    feature-gate.release.openshift.io/: "true"
  name: nodepools.hypershift.openshift.io
spec:
  group: hypershift.openshift.io
  names:
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    shortNames:
    - np
    - nps
    singular: nodepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .spec.clusterName
      name: Cluster
      type: string
    - description: Desired Nodes
      jsonPath: .spec.replicas
      name: Desired Nodes
      type: integer
    - description: Available Nodes
      jsonPath: .status.replicas
      name: Current Nodes
      type: integer
    - description: Autoscaling Enabled
      jsonPath: .status.conditions[?(@.type=="AutoscalingEnabled")].status
      name: Autoscaling
      type: string
    - description: Node Autorepair Enabled
      jsonPath: .status.conditions[?(@.type=="AutorepairEnabled")].status
      name: Autorepair
      type: string
    - description: Current version
      jsonPath: .status.version
      name: Version
      type: string
    - description: UpdatingVersion in progress
      jsonPath: .status.conditions[?(@.type=="UpdatingVersion")].status
      name: UpdatingVersion
      type: string
    - description: UpdatingConfig in progress
      jsonPath: .status.conditions[?(@.type=="UpdatingConfig")].status
      name: UpdatingConfig
      type: string
    - description: Message
      jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          NodePool is a scalable set of worker nodes attached to a HostedCluster.
          NodePool machine architectures are uniform within a given pool, and are
          independent of the control plane's underlying machine architecture.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired behavior of the NodePool.
            properties:
              arch:
                default: amd64
                description: "arch is the preferred processor architecture for the
                  NodePool. Different platforms might have different supported architectures.\n\thttps://github.com/kubernetes/kubernetes/issues/108768#issuecomment-1253912215"
                enum:
                - arm64
                - amd64
                - ppc64le
                type: string
                x-kubernetes-validations:
                - message: Arch is immutable
                  rule: self == oldSelf
              autoScaling:
                description: |-
                  autoScaling specifies auto-scaling behavior for the NodePool.
                  autoScaling is mutually exclusive with replicas. If replicas is set, this field must be omitted.
                properties:
                  max:
                    description: max is the maximum number of nodes allowed in the
                      pool. Must be >= 1 and >= Min.
                    format: int32
                    minimum: 1
                    type: integer
                  min:
                    description: min is the minimum number of nodes to maintain in
                      the pool. Must be >= 1 and <= .Max.
                    format: int32
                    minimum: 1
                    type: integer
                required:
                - max
                - min
                type: object
                x-kubernetes-validations:
                - message: max must be equal or greater than min
                  rule: self.max >= self.min
              clusterName:
                description: |-
                  clusterName is the name of the HostedCluster this NodePool belongs to.
                  If a HostedCluster with this name doesn't exist, the controller will no-op until it exists.
                maxLength: 253
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: ClusterName is immutable
                  rule: self == oldSelf
                - message: clusterName must consist of lowercase alphanumeric characters
                    or '-', start and end with an alphanumeric character, and be between
                    1 and 253 characters
                  rule: self.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
              config:
                description: |-
                  config is a list of references to ConfigMaps containing serialized
                  MachineConfig resources to be injected into the ignition configurations of
                  nodes in the NodePool. The MachineConfig API schema is defined here:

                  https://github.com/openshift/machine-config-operator/blob/18963e4f8fe66e8c513ca4b131620760a414997f/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L185

                  Each ConfigMap must have a single key named "config" whose value is the YML
                  with one or more serialized machineconfiguration.openshift.io resources:

                  * KubeletConfig
                  * ContainerRuntimeConfig
                  * MachineConfig
                  * ClusterImagePolicy
                  * ImageContentSourcePolicy
                  * ImageDigestMirrorSet

                  This is validated in the backend and signaled back via validMachineConfig condition.
                  Changing this field will trigger a NodePool rollout.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                maxItems: 10
                type: array
              management:
                description: |-
                  management specifies behavior for managing nodes in the pool, such as
                  upgrade strategies and auto-repair behaviors.
                properties:
                  autoRepair:
                    default: false
                    description: |-
                      autoRepair specifies whether health checks should be enabled for machines in the NodePool. The default is false.
                      Enabling this feature will cause the controller to automatically delete unhealthy machines.
                      The unhealthy criteria is reserved for the controller implementation and subject to change.
                      But generally it's determined by checking the Node ready condition is true and a timeout that might vary depending on the platform provider.
                      AutoRepair will no-op when more than 2 Nodes are unhealthy at the same time. Giving time for the cluster to stabilize or to the user to manually intervene.
                    type: boolean
                  inPlace:
                    description: inPlace is the configuration for in-place upgrades.
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          maxUnavailable is the maximum number of nodes that can be unavailable
                          during the update.

                          Value can be an absolute number (ex: 5) or a percentage of desired nodes
                          (ex: 10%).

                          Absolute number is calculated from percentage by rounding down.

                          Defaults to 1.

                          Example: when this is set to 30%, a max of 30% of the nodes can be made
                          unschedulable/unavailable immediately when the update starts. Once a set
                          of nodes is updated, more nodes can be made unschedulable for update,
                          ensuring that the total number of nodes schedulable at all times during
                          the update is at least 70% of desired nodes.
                        x-kubernetes-int-or-string: true
                    type: object
                  replace:
                    default:
                      rollingUpdate:
                        maxSurge: 1
                        maxUnavailable: 0
                      strategy: RollingUpdate
                    description: |-
                      replace is the configuration for rolling upgrades.
                      It defaults to a RollingUpdate strategy with maxSurge of 1 and maxUnavailable of 0.
                    properties:
                      rollingUpdate:
                        description: |-
                          rollingUpdate specifies a rolling update strategy which upgrades nodes by
                          creating new nodes and deleting the old ones.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              maxSurge is the maximum number of nodes that can be provisioned above the
                              desired number of nodes.

                              Value can be an absolute number (ex: 5) or a percentage of desired nodes
                              (ex: 10%).

                              Absolute number is calculated from percentage by rounding up.

                              This can not be 0 if MaxUnavailable is 0.

                              Defaults to 1.

                              Example: when this is set to 30%, new nodes can be provisioned immediately
                              when the rolling update starts, such that the total number of old and new
                              nodes do not exceed 130% of desired nodes. Once old nodes have been
                              deleted, new nodes can be provisioned, ensuring that total number of nodes
                              running at any time during the update is at most 130% of desired nodes.
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              maxUnavailable is the maximum number of nodes that can be unavailable
                              during the update.

                              Value can be an absolute number (ex: 5) or a percentage of desired nodes
                              (ex: 10%).

                              Absolute number is calculated from percentage by rounding down.

                              This can not be 0 if MaxSurge is 0.

                              Defaults to 0.

                              Example: when this is set to 30%, old nodes can be deleted down to 70% of
                              desired nodes immediately when the rolling update starts. Once new nodes
                              are ready, more old nodes be deleted, followed by provisioning new nodes,
                              ensuring that the total number of nodes available at all times during the
                              update is at least 70% of desired nodes.
                            x-kubernetes-int-or-string: true
                        type: object
                      strategy:
                        description: |-
                          strategy is the node replacement strategy for nodes in the pool.
                          In can be either "RollingUpdate" or "OnDelete". RollingUpdate will rollout Nodes honoring maxSurge and maxUnavailable.
                          OnDelete provide more granular control and will replace nodes as the old ones are manually deleted.
                        enum:
                        - RollingUpdate
                        - OnDelete
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: The 'rollingUpdate' field can only be set when 'strategy'
                        is 'RollingUpdate'
                      rule: '!has(self.rollingUpdate) || self.strategy == ''RollingUpdate'''
                  upgradeType:
                    description: |-
                      upgradeType specifies the type of strategy for handling upgrades.
                      This can be either "Replace" or "InPlace".
                      "Replace" will update Nodes by recreating the underlying instances.
                      "InPlace" will update Nodes by applying changes to the existing instances. This might or might not result in a reboot.
                    enum:
                    - Replace
                    - InPlace
                    type: string
                    x-kubernetes-validations:
                    - message: UpgradeType is immutable
                      rule: self == oldSelf
                required:
                - upgradeType
                type: object
                x-kubernetes-validations:
                - message: The 'inPlace' field can only be set when 'upgradeType'
                    is 'InPlace'
                  rule: '!has(self.inPlace) || self.upgradeType == ''InPlace'''
              nodeDrainTimeout:
                description: |-
                  nodeDrainTimeout is the maximum amount of time that the controller will spend on retrying to drain a node until it succeeds.
                  The default value is 0, meaning that the node can retry drain without any time limitations.
                  Changing this field propagate inplace into existing Nodes.
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: |-
                  nodeLabels propagates a list of labels to Nodes, only once on creation.
                  Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
                type: object
              nodeVolumeDetachTimeout:
                description: |-
                  nodeVolumeDetachTimeout is the maximum amount of time that the controller will spend on detaching volumes from a node.
                  The default value is 0, meaning that the volumes will be detached from the node without any time limitations.
                  After the timeout, any remaining attached volumes will be ignored and the removal of the machine will continue.
                  Changing this field propagate inplace into existing Nodes.
                type: string
              pausedUntil:
                description: |-
                  pausedUntil is a field that can be used to pause reconciliation on the NodePool controller. Resulting in any change to the NodePool being ignored.
                  Either a date can be provided in RFC3339 format or a boolean as in 'true', 'false', 'True', 'False'. If a date is
                  provided: reconciliation is paused on the resource until that date. If the boolean true is
                  provided: reconciliation is paused on the resource until the field is removed.
                maxLength: 35
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: PausedUntil must be a date in RFC3339 format or 'True',
                    'true', 'False' or 'false'
                  rule: self.matches('^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*$')
                    || self in ['true', 'false', 'True', 'False']
              platform:
                description: |-
                  platform specifies the underlying infrastructure provider for the NodePool
                  and is used to configure platform specific behavior.
                properties:
                  agent:
                    description: agent specifies the configuration used when using
                      Agent platform.
                    properties:
                      agentLabelSelector:
                        description: |-
                          agentLabelSelector contains labels that must be set on an Agent in order to
                          be selected for a Machine.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  aws:
                    description: aws specifies the configuration used when operating
                      on AWS.
                    properties:
                      ami:
                        description: |-
                          ami is the image id to use for node instances. If unspecified, the default
                          is chosen based on the NodePool release payload image.
                        maxLength: 255
                        type: string
                      imageType:
                        description: |-
                          imageType specifies the type of image to use for node instances.
                          Valid values are ImageTypeLinux ("Linux") or ImageTypeWindows ("Windows").
                          When set to ImageTypeWindows, the controller will automatically populate the AMI field
                          with a Windows-compatible AMI based on the region and OpenShift version.
                          When the AMI field is also set, it will take precedence over automatic selection based
                          on imageType. Also note that Windows ImageType is only compatible with an Arch of amd64
                        enum:
                        - Windows
                        - Linux
                        type: string
                      instanceProfile:
                        description: instanceProfile is the AWS EC2 instance profile,
                          which is a container for an IAM role that the EC2 instance
                          uses.
                        maxLength: 255
                        type: string
                      instanceType:
                        description: instanceType is an ec2 instance type for node
                          instances (e.g. m5.large).
                        maxLength: 255
                        type: string
                      placement:
                        description: placement specifies the placement options for
                          the EC2 instances.
                        properties:
                          capacityReservation:
                            description: |-
                              capacityReservation specifies Capacity Reservation options for the NodePool instances.

                              Cannot be specified when tenancy is set to "host" as Dedicated Hosts
                              do not support Capacity Reservations. Compatible with "default" and "dedicated" tenancy.
                            properties:
                              id:
                                description: |-
                                  id specifies the target Capacity Reservation into which the EC2 instances should be launched.
                                  Must follow the format: cr- followed by 17 lowercase hexadecimal characters. For example: cr-0123456789abcdef0
                                  When empty, no specific Capacity Reservation is targeted.

                                  When specified, preference cannot be set to 'None' or 'Open' as these
                                  are mutually exclusive with targeting a specific reservation. Use preference 'CapacityReservationsOnly'
                                  or omit preference field when targeting a specific reservation.
                                maxLength: 20
                                type: string
                                x-kubernetes-validations:
                                - message: AWS Capacity Reservation ID must start
                                    with 'cr-' followed by 17 lowercase hexadecimal
                                    characters (e.g., cr-0123456789abcdef0)
                                  rule: self.matches('^cr-[a-f0-9]{17}$')
                              marketType:
                                description: |-
                                  marketType specifies the market type of the CapacityReservation for the EC2 instances. Valid values are OnDemand, CapacityBlocks and omitted:
                                  - "OnDemand": EC2 instances run as standard On-Demand instances.
                                  - "CapacityBlocks": scheduled pre-purchased compute capacity. Capacity Blocks is recommended when GPUs are needed to support ML workloads.
                                  When omitted, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                                  The current default value is CapacityBlocks.

                                  When set to 'CapacityBlocks', a specific Capacity Reservation ID must be provided.
                                enum:
                                - OnDemand
                                - CapacityBlocks
                                type: string
                              preference:
                                description: |-
                                  preference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                                  - "": No preference (platform default)
                                  - "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                                  - "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                                  - "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation

                                  Cannot be set to 'None' or 'Open' when a specific Capacity Reservation ID is provided,
                                  as targeting a specific reservation is mutually exclusive with these general preference settings.
                                enum:
                                - ""
                                - None
                                - CapacityReservationsOnly
                                - Open
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: AWS Capacity Reservation preference 'None'
                                or 'Open' is incompatible with specifying a Capacity
                                Reservation ID
                              rule: 'has(self.id) ? (!has(self.preference) || !(self.preference
                                in [''Open'',''None''])) : true'
                            - message: AWS Capacity Reservation market type 'CapacityBlocks'
                                requires a Capacity Reservation ID
                              rule: 'has(self.marketType) && self.marketType == ''CapacityBlocks''
                                ? has(self.id) : true'
                          tenancy:
                            description: |-
                              tenancy indicates if instance should run on shared or single-tenant hardware.

                              Possible values:
                              - "default": NodePool instances run on shared hardware.
                              - "dedicated": Each NodePool instance runs on single-tenant hardware (Dedicated Instances).
                              - "host": NodePool instances run on user's pre-allocated dedicated hosts (Dedicated Hosts).

                              When tenancy is set to "host", capacityReservation cannot be specified
                              as AWS does not support Capacity Reservations with Dedicated Hosts.
                            enum:
                            - default
                            - dedicated
                            - host
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: AWS Capacity Reservations cannot be used with Dedicated
                            Hosts (tenancy 'host')
                          rule: 'has(self.tenancy) && self.tenancy == ''host'' ? !has(self.capacityReservation)
                            : true'
                      resourceTags:
                        description: |-
                          resourceTags is an optional list of additional tags to apply to AWS node
                          instances. Changes to this field will be propagated in-place to AWS EC2 instances and their initial EBS volumes.
                          Volumes created by the storage operator and attached to instances after they are created do not get these tags applied.

                          These will be merged with HostedCluster scoped tags, which take precedence in case of conflicts.
                          These take precedence over tags defined out of band (i.e., tags added manually or by other tools outside of HyperShift) in AWS in case of conflicts.

                          See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for
                          information on tagging AWS resources. AWS supports a maximum of 50 tags per
                          resource. OpenShift reserves 25 tags for its use, leaving 25 tags available
                          for the user.
                        items:
                          description: AWSResourceTag is a tag to apply to AWS resources
                            created for the cluster.
                          properties:
                            key:
                              description: key is the key of the tag.
                              maxLength: 128
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                            value:
                              description: |-
                                value is the value of the tag.

                                Some AWS service do not support empty values. Since tags are added to
                                resources in many services, the length of the tag value must meet the
                                requirements of all services.
                              maxLength: 256
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        maxItems: 25
                        type: array
                      rootVolume:
                        description: rootVolume specifies configuration for the root
                          volume of node instances.
                        properties:
                          encrypted:
                            description: encrypted indicates whether the EBS volume
                              should be encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: encryptionKey is the KMS key to use for volume
                              encryption.
                            maxLength: 2048
                            type: string
                          iops:
                            description: |-
                              iops is the number of IOPS requested for the disk. This is only valid
                              for type io1.
                            format: int64
                            type: integer
                          size:
                            description: |-
                              size is the size of the volume in gibibytes (GiB).

                              Must be greater than the image snapshot size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          type:
                            description: type is the type of volume to provision.
                            maxLength: 255
                            type: string
                        required:
                        - size
                        - type
                        type: object
                      securityGroups:
                        description: |-
                          securityGroups is an optional set of security groups to associate with node
                          instances.
                        items:
                          description: |-
                            AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                            Only one of ID or Filters may be specified. Specifying more than one will result in
                            a validation error.
                          properties:
                            filters:
                              description: |-
                                filters is a set of key/value pairs used to identify a resource
                                They are applied according to the rules defined by the AWS API:
                                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: name is the name of the filter.
                                    maxLength: 255
                                    type: string
                                  values:
                                    description: values is a list of values for the
                                      filter.
                                    items:
                                      maxLength: 255
                                      type: string
                                    maxItems: 50
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              maxItems: 50
                              type: array
                            id:
                              description: id of resource
                              maxLength: 255
                              type: string
                          type: object
                        maxItems: 50
                        type: array
                      subnet:
                        description: subnet is the subnet to use for node instances.
                        properties:
                          filters:
                            description: |-
                              filters is a set of key/value pairs used to identify a resource
                              They are applied according to the rules defined by the AWS API:
                              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: name is the name of the filter.
                                  maxLength: 255
                                  type: string
                                values:
                                  description: values is a list of values for the
                                    filter.
                                  items:
                                    maxLength: 255
                                    type: string
                                  maxItems: 50
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            maxItems: 50
                            type: array
                          id:
                            description: id of resource
                            maxLength: 255
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: subnet is invalid, a valid subnet id or filters
                            must be set, but not both
                          rule: 'has(self.id) && self.id.startsWith(''subnet-'') ?
                            !has(self.filters) : size(self.filters) > 0'
                    required:
                    - instanceType
                    - subnet
                    type: object
                  azure:
                    description: azure specifies the configuration used when using
                      Azure platform.
                    properties:
                      availabilityZone:
                        description: |-
                          availabilityZone is the failure domain identifier where the VM should be attached to. This must not be specified
                          for clusters in a location that does not support AvailabilityZone because it would cause a failure from Azure API.
                        maxLength: 255
                        type: string
                        x-kubernetes-validations:
                        - rule: self in ['1', '2', '3']
                      diagnostics:
                        description: |-
                          diagnostics specifies the diagnostics settings for a virtual machine.
                          If not specified, then Boot diagnostics will be disabled.
                        properties:
                          storageAccountType:
                            allOf:
                            - enum:
                              - Managed
                              - UserManaged
                              - Disabled
                            - enum:
                              - Managed
                              - UserManaged
                              - Disabled
                            default: Disabled
                            description: |-
                              storageAccountType determines if the storage account for storing the diagnostics data
                              should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                            type: string
                          userManaged:
                            description: userManaged specifies the diagnostics settings
                              for a virtual machine when the storage account is managed
                              by the user.
                            properties:
                              storageAccountURI:
                                description: |-
                                  storageAccountURI is the URI of the user-managed storage account.
                                  The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                  but may differ if you are using Azure DNS zone endpoints.
                                  You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                  endpoints tab in the Azure console or with the CLI by issuing
                                  `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                                maxLength: 1024
                                type: string
                                x-kubernetes-validations:
                                - message: storageAccountURI must be a valid HTTPS
                                    URL
                                  rule: isURL(self) && url(self).getScheme() == 'https'
                            required:
                            - storageAccountURI
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: userManaged is required when storageAccountType
                            is UserManaged, and forbidden otherwise
                          rule: 'self.storageAccountType == ''UserManaged'' ? has(self.userManaged)
                            : !has(self.userManaged)'
                      encryptionAtHost:
                        default: Enabled
                        description: |-
                          encryptionAtHost enables encryption at host on virtual machines. According to Microsoft documentation, this
                          means data stored on the VM host is encrypted at rest and flows encrypted to the Storage service. See
                          https://learn.microsoft.com/en-us/azure/virtual-machines/disks-enable-host-based-encryption-portal?tabs=azure-powershell
                          for more information.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      image:
                        description: |-
                          image is used to configure the VM boot image. If unset, the default image at the location below will be used and
                          is expected to exist: subscription/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Compute/images/rhcos.x86_64.vhd.
                          The <subscriptionID> and the <resourceGroupName> are expected to be the same resource group documented in the
                          Hosted Cluster specification respectively, HostedCluster.Spec.Platform.Azure.SubscriptionID and
                          HostedCluster.Spec.Platform.Azure.ResourceGroupName.
                        properties:
                          azureMarketplace:
                            description: azureMarketplace contains the Azure Marketplace
                              image info to use to boot the Azure VMs from.
                            minProperties: 1
                            properties:
                              imageGeneration:
                                default: Gen2
                                description: |-
                                  imageGeneration specifies the Hyper-V generation of the Azure Marketplace image to use for the nodes.
                                  This field is used by HyperShift to select the appropriate marketplace image (Gen1 or Gen2)
                                  from the release payload metadata when publisher, offer, sku, and version are not explicitly provided.
                                  It is not passed to CAPZ (Cluster API Provider Azure); the generation information is
                                  encoded into the SKU field that CAPZ uses.
                                  Valid values are Gen1 and Gen2. If unspecified, defaults to Gen2.
                                enum:
                                - Gen1
                                - Gen2
                                type: string
                              offer:
                                description: offer specifies the name of a group of
                                  related images created by the publisher.
                                maxLength: 255
                                minLength: 1
                                type: string
                              publisher:
                                description: |-
                                  publisher is the name of the organization that created the image.
                                  It must be between 3 and 50 characters in length, and consist of only lowercase letters, numbers, and hyphens (-) and underscores (_).
                                  It must start with a lowercase letter or a number.
                                maxLength: 50
                                minLength: 3
                                pattern: ^[a-z0-9][a-z0-9-_]{2,49}$
                                type: string
                              sku:
                                description: |-
                                  sku specifies an instance of an offer, such as a major release of a distribution.
                                  For example, 22_04-lts-gen2, 8-lvm-gen2.
                                  The value must consist only of lowercase letters, numbers, and hyphens (-) and underscores (_).
                                maxLength: 255
                                minLength: 1
                                pattern: ^[a-z0-9-_]+$
                                type: string
                              version:
                                description: |-
                                  version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major,
                                  Minor, and Build are decimal numbers, e.g. '1.2.0'. Specify 'latest' to use the latest version of an image available at
                                  deployment time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a
                                  new version becomes available.
                                maxLength: 32
                                minLength: 1
                                pattern: ^[0-9]+\.[0-9]+\.[0-9]+$|^latest$
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: must specify imageGeneration or must specify
                                publisher, offer, sku and version
                              rule: has(self.imageGeneration) || has(self.publisher)
                                && has(self.offer) && has(self.sku) && has(self.version)
                            - message: publisher, offer, sku and version must either
                                be all set, or all omitted
                              rule: '[has(self.publisher), has(self.offer), has(self.sku),
                                has(self.version)].filter(x, x == true).size() ==
                                0 || [has(self.publisher), has(self.offer), has(self.sku),
                                has(self.version)].filter(x, x == true).size() ==
                                4'
                          imageID:
                            description: imageID is the Azure resource ID of a VHD
                              image to use to boot the Azure VMs from.
                            maxLength: 255
                            type: string
                          type:
                            description: |-
                              type is the type of image data that will be provided to the Azure VM.
                              Valid values are "ImageID" and "AzureMarketplace".
                              ImageID means is used for legacy managed VM images. This is where the user uploads a VM image directly to their resource group.
                              AzureMarketplace means the VM will boot from an Azure Marketplace image.
                              Marketplace images are preconfigured and published by the OS vendors and may include preconfigured software for the VM.
                              When Type is "AzureMarketplace", you can either:
                              1. Specify only imageGeneration to use marketplace defaults from the release payload
                              2. Specify publisher, offer, sku, and version to use an explicit marketplace image
                              3. Specify all fields (imageGeneration along with publisher, offer, sku, version)
                            enum:
                            - ImageID
                            - AzureMarketplace
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: imageID is required when type is ImageID, and forbidden
                            otherwise
                          rule: 'has(self.type) && self.type == ''ImageID'' ?  has(self.imageID)
                            : !has(self.imageID)'
                        - message: azureMarketplace is forbidden when type is not
                            AzureMarketplace
                          rule: 'has(self.type) && self.type == ''AzureMarketplace''
                            ?  true : !has(self.azureMarketplace)'
                      osDisk:
                        description: |-
                          osDisk provides configuration for the OS disk for the nodepool.
                          This can be used to configure the size, storage account type, encryption options and whether the disk is persistent or ephemeral.
                          When not provided, the platform will choose reasonable defaults which are subject to change over time.
                          Review the fields within the osDisk for more details.
                        properties:
                          diskStorageAccountType:
                            description: |-
                              diskStorageAccountType is the disk storage account type to use.
                              Valid values are Premium_LRS, PremiumV2_LRS, Standard_LRS, StandardSSD_LRS, UltraSSD_LRS.
                              Note that Standard means a HDD.
                              The disk performance is tied to the disk type, please refer to the Azure documentation for further details
                              https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types#disk-type-comparison.
                              When omitted this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                              The current default is Premium SSD LRS.
                            enum:
                            - Premium_LRS
                            - PremiumV2_LRS
                            - Standard_LRS
                            - StandardSSD_LRS
                            - UltraSSD_LRS
                            type: string
                          encryptionSetID:
                            description: |-
                              encryptionSetID is the ID of the DiskEncryptionSet resource to use to encrypt the OS disks for the VMs.
                              Configuring a DiskEncyptionSet allows greater control over the encryption of the VM OS disk at rest.
                              Can be used with either platform (Azure) managed, or customer managed encryption keys.
                              This needs to exist in the same subscription id listed in the Hosted Cluster, HostedCluster.Spec.Platform.Azure.SubscriptionID.
                              DiskEncryptionSetID should also exist in a resource group under the same subscription id and the same location
                              listed in the Hosted Cluster, HostedCluster.Spec.Platform.Azure.Location.
                              The encryptionSetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Copmute/diskEncryptionSets/{resourceName}`.
                              The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                              The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                              The resourceName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores.
                            maxLength: 285
                            minLength: 1
                            type: string
                            x-kubernetes-validations:
                            - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{resourceName}`
                              rule: size(self.split('/')) == 9 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Compute/diskEncryptionSets/.*$')
                            - message: the subscriptionId in the encryptionSetID must
                                be a valid UUID. It should be 5 groups of hyphen separated
                                hexadecimal characters in the form 8-4-4-4-12
                              rule: self.split('/')[2].matches('^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$')
                            - message: The resourceGroupName should be between 1 and
                                90 characters, consisting only of alphanumeric characters,
                                hyphens, underscores, periods and parenthesis
                              rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                            - message: the resourceGroupName in the encryptionSetID
                                must not end with a period (.) character
                              rule: '!self.split(''/'')[4].endsWith(''.'')'
                            - message: The resourceName should be between 1 and 80
                                characters, consisting only of alphanumeric characters,
                                hyphens and underscores
                              rule: self.split('/')[8].matches('[a-zA-Z0-9-_]{1,80}')
                          persistence:
                            description: |-
                              persistence determines whether the OS disk should be persisted beyond the life of the VM.
                              Valid values are Persistent and Ephemeral.
                              When set to Ephmeral, the OS disk will not be persisted to Azure storage and implies restrictions to the VM size and caching type.
                              Full details can be found in the Azure documentation https://learn.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks.
                              Ephmeral disks are primarily used for stateless applications, provide lower latency than Persistent disks and also incur no storage costs.
                              When not set, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                            enum:
                            - Persistent
                            - Ephemeral
                            type: string
                          sizeGiB:
                            description: |-
                              sizeGiB is the size in GiB (1024^3 bytes) to assign to the OS disk.
                              This should be between 16 and 65,536 when using the UltraSSD_LRS storage account type and between 16 and 32,767 when using any other storage account type.
                              When not set, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                              The current default is 30.
                            format: int32
                            maximum: 65536
                            minimum: 16
                            type: integer
                        type: object
                        x-kubernetes-validations:
                        - message: When not using diskStorageAccountType UltraSSD_LRS,
                            the SizeGB value must be less than or equal to 32,767
                          rule: '!has(self.diskStorageAccountType) || self.diskStorageAccountType
                            != ''UltraSSD_LRS'' || self.sizeGiB <= 32767'
                      subnetID:
                        description: |-
                          subnetID is the subnet ID of an existing subnet where the nodes in the nodepool will be created. This can be a
                          different subnet than the one listed in the HostedCluster, HostedCluster.Spec.Platform.Azure.SubnetID, but must
                          exist in the same network, HostedCluster.Spec.Platform.Azure.VnetID, and must exist under the same subscription ID,
                          HostedCluster.Spec.Platform.Azure.SubscriptionID.
                          subnetID is immutable once set.
                          The subnetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`.
                          The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                          The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                          The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods and must not end with either a period (.) or hyphen (-) character.
                          The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character and must not end with a period (.) or hyphen (-) character.
                        maxLength: 355
                        minLength: 1
                        type: string
                        x-kubernetes-validations:
                        - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`
                          rule: size(self.split('/')) == 11 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Network/virtualNetworks/.*/subnets/.*$')
                        - message: the subscriptionId in the encryptionSetID must
                            be a valid UUID. It should be 5 groups of hyphen separated
                            hexadecimal characters in the form 8-4-4-4-12
                          rule: self.split('/')[2].matches('^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$')
                        - message: The resourceGroupName should be between 1 and 90
                            characters, consisting only of alphanumeric characters,
                            hyphens, underscores, periods and parenthesis
                          rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                        - message: the resourceGroupName in the subnetID must not
                            end with a period (.) character
                          rule: '!self.split(''/'')[4].endsWith(''.'')'
                        - message: The vnetName should be between 2 and 64 characters,
                            consisting only of alphanumeric characters, hyphens, underscores
                            and periods
                          rule: self.split('/')[8].matches('[a-zA-Z0-9-_\\.]{2,64}')
                        - message: the vnetName in the subnetID must not end with
                            either a period (.) or hyphen (-) character
                          rule: '!self.split(''/'')[8].endsWith(''.'') && !self.split(''/'')[8].endsWith(''-'')'
                        - message: The subnetName should be between 1 and 80 characters,
                            consisting only of alphanumeric characters, hyphens and
                            underscores and must start with an alphanumeric character
                          rule: self.split('/')[10].matches('[a-zA-Z0-9][a-zA-Z0-9-_\\.]{0,79}')
                        - message: the subnetName in the subnetID must not end with
                            a period (.) or hyphen (-) character
                          rule: '!self.split(''/'')[10].endsWith(''.'') && !self.split(''/'')[10].endsWith(''-'')'
                        - message: SubnetID is immutable
                          rule: self == oldSelf
                      vmSize:
                        description: |-
                          vmSize is the Azure VM instance type to use for the nodes being created in the nodepool.
                          The size naming convention is documented here https://learn.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
                          Size names should start with a Family name, which is represented by one of more capital letters, and then be followed by the CPU count.
                          This is followed by 0 or more additional features, represented by a, b, d, i, l, m, p, t, s, C, and NP, refer to the Azure documentation for an explanation of these features.
                          Optionally an accelerator such as a GPU can be added, prefixed by an underscore, for example A100, H100 or MI300X.
                          The size may also be versioned, in which case it should be suffixed with _v<version> where the version is a number.
                          For example, "D32ads_v5" would be a suitable general purpose VM size, or "ND96_MI300X_v5" would represent a GPU accelerated VM.
                        maxLength: 255
                        pattern: ^(Standard_|Basic_)?[A-Z]+[0-9]+(-[0-9]+)?[abdilmptsCNP]*(_[A-Z]*[0-9]+[A-Z]*)?(_v[0-9]+)?$
                        type: string
                    required:
                    - image
                    - osDisk
                    - subnetID
                    - vmSize
                    type: object
                  ibmcloud:
                    description: ibmcloud defines IBMCloud specific settings for components
                    properties:
                      providerType:
                        description: providerType is a specific supported infrastructure
                          provider within IBM Cloud.
                        type: string
                    type: object
                  kubevirt:
                    description: kubevirt specifies the configuration used when operating
                      on KubeVirt platform.
                    properties:
                      additionalNetworks:
                        description: additionalNetworks specify the extra networks
                          attached to the nodes
                        items:
                          description: |-
                            KubevirtNetwork specifies the configuration for a virtual machine
                            network interface
                          properties:
                            name:
                              description: |-
                                name specify the network attached to the nodes
                                it is a value with the format "[namespace]/[name]" to reference the
                                multus network attachment definition
                              maxLength: 255
                              type: string
                          required:
                          - name
                          type: object
                        maxItems: 20
                        type: array
                      attachDefaultNetwork:
                        default: true
                        description: |-
                          attachDefaultNetwork specify if the default pod network should be attached to the nodes
                          this can only be set to false if AdditionalNetworks are configured
                        type: boolean
                      compute:
                        default:
                          cores: 2
                          memory: 8Gi
                        description: compute contains values representing the virtual
                          hardware requested for the VM
                        properties:
                          cores:
                            description: cores is the number of CPU cores for the
                              KubeVirt VM.
                            format: int32
                            minimum: 1
                            type: integer
                          memory:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 8Gi
                            description: memory represents how much guest memory the
                              VM should have
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          qosClass:
                            default: Burstable
                            description: |-
                              qosClass if set to "Guaranteed", requests the scheduler to place the VirtualMachineInstance on a node with
                              limit memory and CPU, equal to be the requested values, to set the VMI as a Guaranteed QoS Class;
                              See here for more details:
                              https://kubevirt.io/user-guide/operations/node_overcommit/#requesting-the-right-qos-class-for-virtualmachineinstances
                            enum:
                            - Burstable
                            - Guaranteed
                            type: string
                        type: object
                      hostDevices:
                        description: |-
                          hostDevices specifies the host devices (e.g. GPU devices) to be passed
                          from the management cluster, to the nodepool nodes
                        items:
                          properties:
                            count:
                              default: 1
                              description: |-
                                count is the number of instances the specified host device will be attached to each of the
                                NodePool's nodes. Default is 1.
                              maximum: 2147483647
                              minimum: 1
                              type: integer
                            deviceName:
                              description: |-
                                deviceName is the name of the host device that is desired to be utilized in the HostedCluster's NodePool
                                The device can be any supported PCI device, including GPU, either as a passthrough or a vGPU slice.
                              maxLength: 255
                              type: string
                          required:
                          - deviceName
                          type: object
                        maxItems: 10
                        type: array
                      networkInterfaceMultiqueue:
                        default: Enable
                        description: |-
                          networkInterfaceMultiqueue if set to "Enable", virtual network interfaces configured with a virtio bus will also
                          enable the vhost multiqueue feature for network devices. The number of queues created depends on additional
                          factors of the VirtualMachineInstance, like the number of guest CPUs.
                        enum:
                        - Enable
                        - Disable
                        type: string
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: |-
                          nodeSelector is a selector which must be true for the kubevirt VirtualMachine to fit on a node.
                          Selector which must match a node's labels for the VM to be scheduled on that node. More info:
                          https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                        type: object
                      rootVolume:
                        default:
                          persistent:
                            size: 32Gi
                          type: Persistent
                        description: rootVolume represents values associated with
                          the VM volume that will host rhcos
                        properties:
                          cacheStrategy:
                            description: cacheStrategy defines the boot image caching
                              strategy. Default - no caching
                            properties:
                              type:
                                default: None
                                description: type is the type of the caching strategy
                                enum:
                                - None
                                - PVC
                                type: string
                            required:
                            - type
                            type: object
                          diskImage:
                            description: diskImage represents what rhcos image to
                              use for the node pool
                            properties:
                              containerDiskImage:
                                description: containerDiskImage is a string representing
                                  the container image that holds the root disk
                                maxLength: 2048
                                type: string
                            type: object
                          persistent:
                            description: |-
                              persistent volume type means the VM's storage is backed by a PVC
                              VMs that use persistent volumes can survive disruption events like restart and eviction
                              This is the default type used when no storage type is defined.
                            properties:
                              accessModes:
                                description: |-
                                  accessModes is an array that contains the desired Access Modes the root volume should have.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
                                items:
                                  enum:
                                  - ReadWriteOnce
                                  - ReadWriteMany
                                  - ReadOnly
                                  - ReadWriteOncePod
                                  type: string
                                maxItems: 10
                                type: array
                              size:
                                anyOf:
                                - type: integer
                                - type: string
                                default: 32Gi
                                description: size is the size of the persistent storage
                                  volume
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              storageClass:
                                description: storageClass is the storageClass used
                                  for the underlying PVC that hosts the volume
                                maxLength: 255
                                type: string
                              volumeMode:
                                description: |-
                                  volumeMode defines what type of volume is required by the claim.
                                  Value of Filesystem is implied when not included in claim spec.
                                enum:
                                - Filesystem
                                - Block
                                type: string
                            type: object
                          type:
                            default: Persistent
                            description: type represents the type of storage to associate
                              with the kubevirt VMs.
                            enum:
                            - Persistent
                            type: string
                        type: object
                    required:
                    - rootVolume
                    type: object
                  powervs:
                    description: powervs specifies the configuration used when using
                      IBMCloud PowerVS platform.
                    properties:
                      image:
                        description: |-
                          image used for deploying the nodes. If unspecified, the default
                          is chosen based on the NodePool release payload image.
                        properties:
                          id:
                            description: id of resource
                            maxLength: 255
                            type: string
                          name:
                            description: name of resource
                            maxLength: 255
                            type: string
                        type: object
                      imageDeletePolicy:
                        default: delete
                        description: |-
                          imageDeletePolicy is policy for the image deletion.

                          delete: delete the image from the infrastructure.
                          retain: delete the image from the openshift but retain in the infrastructure.

                          The default is delete
                        enum:
                        - delete
                        - retain
                        type: string
                      memoryGiB:
                        default: 32
                        description: |-
                          memoryGiB is the size of a virtual machine's memory, in GiB.
                          maximum value for the MemoryGiB depends on the selected SystemType.
                          when SystemType is set to e880 maximum MemoryGiB value is 7463 GiB.
                          when SystemType is set to e980 maximum MemoryGiB value is 15307 GiB.
                          when SystemType is set to s922 maximum MemoryGiB value is 942 GiB.
                          The minimum memory is 32 GiB.

                          When omitted, this means the user has no opinion and the platform is left to choose a reasonable
                          default. The current default is 32.
                        format: int32
                        type: integer
                      processorType:
                        default: shared
                        description: |-
                          processorType is the VM instance processor type.
                          It must be set to one of the following values: Dedicated, Capped or Shared.

                          Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition's processor to a physical processor core.
                          Shared: Shared among other clients.
                          Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement.

                          if the processorType is selected as Dedicated, then Processors value cannot be fractional.
                          When omitted, this means that the user has no opinion and the platform is left to choose a
                          reasonable default. The current default is shared.
                        enum:
                        - dedicated
                        - shared
                        - capped
                        type: string
                      processors:
                        anyOf:
                        - type: integer
                        - type: string
                        default: "0.5"
                        description: |-
                          processors is the number of virtual processors in a virtual machine.
                          when the processorType is selected as Dedicated the processors value cannot be fractional.
                          maximum value for the Processors depends on the selected SystemType.
                          when SystemType is set to e880 or e980 maximum Processors value is 143.
                          when SystemType is set to s922 maximum Processors value is 15.
                          minimum value for Processors depends on the selected ProcessorType.
                          when ProcessorType is set as Shared or Capped, The minimum processors is 0.5.
                          when ProcessorType is set as Dedicated, The minimum processors is 1.
                          When omitted, this means that the user has no opinion and the platform is left to choose a
                          reasonable default. The default is set based on the selected ProcessorType.
                          when ProcessorType selected as Dedicated, the default is set to 1.
                          when ProcessorType selected as Shared or Capped, the default is set to 0.5.
                        x-kubernetes-int-or-string: true
                      storageType:
                        default: tier1
                        description: |-
                          storageType for the image and nodes, this will be ignored if Image is specified.
                          The storage tiers in PowerVS are based on I/O operations per second (IOPS).
                          It means that the performance of your storage volumes is limited to the maximum number of IOPS based on volume size and storage tier.
                          Although, the exact numbers might change over time, the Tier 3 storage is currently set to 3 IOPS/GB, and the Tier 1 storage is currently set to 10 IOPS/GB.

                          The default is tier1
                        enum:
                        - tier1
                        - tier3
                        type: string
                      systemType:
                        default: s922
                        description: |-
                          systemType is the System type used to host the instance.
                          systemType determines the number of cores and memory that is available.
                          Few of the supported SystemTypes are s922,e880,e980.
                          e880 systemType available only in Dallas Datacenters.
                          e980 systemType available in Datacenters except Dallas and Washington.
                          When omitted, this means that the user has no opinion and the platform is left to choose a
                          reasonable default. The current default is s922 which is generally available.
                        maxLength: 255
                        type: string
                    type: object
                  type:
                    description: type specifies the platform name.
                    enum:
                    - AWS
                    - Azure
                    - IBMCloud
                    - KubeVirt
                    - Agent
                    - PowerVS
                    - None
                    maxLength: 100
                    type: string
                    x-kubernetes-validations:
                    - message: Type is immutable
                      rule: self == oldSelf
                required:
                - type
                type: object
              release:
                description: |-
                  release specifies the OCP release used for this NodePool. It drives the machine ignition configuration (including
                  the kubelet version) and other platform-specific properties (e.g. an AMI on AWS).

                  Version-skew rules and effects:
                    - The minor-version skew relative to the control-plane release must be <= N-2.
                      This is not currently enforced, but exceeding this limit is unsupported and
                      may lead to unpredictable behavior.
                    - If the specified release is higher than the HostedCluster's release, the
                      NodePool will be degraded and the ValidReleaseImage condition will be false.
                    - If the specified release is lower than the NodePool's current y-stream,
                      the NodePool will be degraded and the ValidReleaseImage condition will be false.

                  Changing this field triggers a NodePool rollout.
                properties:
                  image:
                    description: |-
                      image is the image pullspec of an OCP release payload image.
                      See https://quay.io/repository/openshift-release-dev/ocp-release?tab=tags for a list of available images.
                    maxLength: 253
                    minLength: 1
                    type: string
                    x-kubernetes-validations:
                    - message: Image must start with a word character (letters, digits,
                        or underscores) and contain no white spaces
                      rule: self.matches('^(\\w+\\S+)$')
                required:
                - image
                type: object
              replicas:
                description: |-
                  replicas is the desired number of nodes the pool should maintain. If unset, the controller default value is 0.
                  replicas is mutually exclusive with autoscaling. If autoscaling is configured, replicas must be omitted and autoscaling will control the NodePool size internally.
                format: int32
                type: integer
              taints:
                description: |-
                  taints if specified, propagates a list of taints to Nodes, only once on creation.
                  These taints are additive to the ones applied by other controllers
                items:
                  description: |-
                    taint is as v1 Core but without TimeAdded.
                    https://github.com/kubernetes/kubernetes/blob/ed8cad1e80d096257921908a52ac69cf1f41a098/staging/src/k8s.io/api/core/v1/types.go#L3037-L3053
                    Validation replicates the same validation as the upstream https://github.com/kubernetes/kubernetes/blob/9a2a7537f035969a68e432b4cc276dbce8ce1735/pkg/util/taints/taints.go#L273.
                    See also https://kubernetes.io/docs/concepts/overview/working-with-objects/names/.
                  properties:
                    effect:
                      description: |-
                        effect is the effect of the taint on pods
                        that do not tolerate the taint.
                        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                      enum:
                      - NoSchedule
                      - PreferNoSchedule
                      - NoExecute
                      type: string
                    key:
                      description: key is the taint key to be applied to a node.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                      - message: key must be a qualified name with an optional subdomain
                          prefix e.g. example.com/MyName
                        rule: self.matches('^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/)?[A-Za-z0-9]([-A-Za-z0-9_.]{0,61}[A-Za-z0-9])?$')
                    value:
                      description: value is the taint value corresponding to the taint
                        key.
                      maxLength: 253
                      type: string
                      x-kubernetes-validations:
                      - message: Value must start and end with alphanumeric characters
                          and can only contain '-', '_', '.' in the middle
                        rule: self.matches('^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$')
                  required:
                  - effect
                  - key
                  type: object
                maxItems: 50
                type: array
              tuningConfig:
                description: |-
                  tuningConfig is a list of references to ConfigMaps containing serialized
                  Tuned or PerformanceProfile resources to define the tuning configuration to be applied to
                  nodes in the NodePool. The Tuned API is defined here:

                  https://github.com/openshift/cluster-node-tuning-operator/blob/2c76314fb3cc8f12aef4a0dcd67ddc3677d5b54f/pkg/apis/tuned/v1/tuned_types.go

                  The PerformanceProfile API is defined here:
                  https://github.com/openshift/cluster-node-tuning-operator/tree/b41042d42d4ba5bb2e99960248cf1d6ae4935018/pkg/apis/performanceprofile/v2

                  Each ConfigMap must have a single key named "tuning" whose value is the
                  JSON or YAML of a serialized Tuned or PerformanceProfile.
                  Changing this field will trigger a NodePool rollout.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                maxItems: 10
                type: array
            required:
            - clusterName
            - management
            - platform
            - release
            type: object
            x-kubernetes-validations:
            - message: Arch is required once set
              rule: '!has(oldSelf.arch) || has(self.arch)'
            - message: Setting Arch to arm64 is only supported for AWS, Azure, Agent
                and None
              rule: self.arch != 'arm64' || has(self.platform.aws) || has(self.platform.azure)
                || has(self.platform.agent) || self.platform.type == 'None'
            - message: Both replicas or autoScaling should not be set
              rule: '!has(self.replicas) || !has(self.autoScaling)'
            - message: ImageType 'Windows' requires arch 'amd64' (AWS only)
              rule: '!has(self.platform.aws) || self.platform.aws.imageType != ''Windows''
                || self.arch == ''amd64'''
          status:
            description: status is the latest observed status of the NodePool.
            properties:
              conditions:
                description: |-
                  conditions represents the latest available observations of the node pool's
                  current state.
                items:
                  description: |-
                    We define our own condition type since metav1.Condition has validation
                    for Reason that might be broken by what we bubble up from CAPI.
                    NodePoolCondition defines an observation of NodePool resource operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      maxLength: 1024
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 1024
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                maxItems: 100
                type: array
              platform:
                description: platform holds the specific statuses
                properties:
                  kubeVirt:
                    description: kubeVirt contains the KubeVirt platform statuses
                    properties:
                      cacheName:
                        description: cacheName holds the name of the cache DataVolume,
                          if exists
                        maxLength: 255
                        type: string
                      credentials:
                        description: |-
                          credentials shows the client credentials used when creating KubeVirt virtual machines.
                          This filed is only exists when the KubeVirt virtual machines are being placed
                          on a cluster separate from the one hosting the Hosted Control Plane components.

                          The default behavior when Credentials is not defined is for the KubeVirt VMs to be placed on
                          the same cluster and namespace as the Hosted Control Plane.
                        properties:
                          infraKubeConfigSecret:
                            description: |-
                              infraKubeConfigSecret is a reference to the secret containing the kubeconfig
                              of an external infrastructure cluster for kubevirt provider
                            properties:
                              key:
                                description: key is the key in the secret containing
                                  the kubeconfig.
                                maxLength: 255
                                type: string
                              name:
                                description: name is the name of the secret containing
                                  the kubeconfig.
                                maxLength: 255
                                type: string
                            required:
                            - key
                            - name
                            type: object
                            x-kubernetes-validations:
                            - message: infraKubeConfigSecret is immutable
                              rule: self == oldSelf
                          infraNamespace:
                            description: |-
                              infraNamespace is the namespace in the external infrastructure cluster
                              where kubevirt resources will be created
                            maxLength: 255
                            type: string
                            x-kubernetes-validations:
                            - message: infraNamespace is immutable
                              rule: self == oldSelf
                        required:
                        - infraNamespace
                        type: object
                    type: object
                type: object
              replicas:
                description: replicas is the latest observed number of nodes in the
                  pool.
                format: int32
                type: integer
              version:
                description: |-
                  version is the semantic version of the latest applied release specified by
                  the NodePool.
                maxLength: 64
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
