/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	hypershiftv1beta1 "github.com/openshift/hypershift/api/hypershift/v1beta1"
)

// ClusterAutoscalingApplyConfiguration represents a declarative configuration of the ClusterAutoscaling type for use
// with apply.
type ClusterAutoscalingApplyConfiguration struct {
	ScaleDown                     *ScaleDownConfigApplyConfiguration `json:"scaleDown,omitempty"`
	BalancingIgnoredLabels        []string                           `json:"balancingIgnoredLabels,omitempty"`
	MaxNodesTotal                 *int32                             `json:"maxNodesTotal,omitempty"`
	MaxPodGracePeriod             *int32                             `json:"maxPodGracePeriod,omitempty"`
	MaxNodeProvisionTime          *string                            `json:"maxNodeProvisionTime,omitempty"`
	PodPriorityThreshold          *int32                             `json:"podPriorityThreshold,omitempty"`
	Expanders                     []hypershiftv1beta1.ExpanderString `json:"expanders,omitempty"`
	MaxFreeDifferenceRatioPercent *int32                             `json:"maxFreeDifferenceRatioPercent,omitempty"`
}

// ClusterAutoscalingApplyConfiguration constructs a declarative configuration of the ClusterAutoscaling type for use with
// apply.
func ClusterAutoscaling() *ClusterAutoscalingApplyConfiguration {
	return &ClusterAutoscalingApplyConfiguration{}
}

// WithScaleDown sets the ScaleDown field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ScaleDown field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithScaleDown(value *ScaleDownConfigApplyConfiguration) *ClusterAutoscalingApplyConfiguration {
	b.ScaleDown = value
	return b
}

// WithBalancingIgnoredLabels adds the given value to the BalancingIgnoredLabels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the BalancingIgnoredLabels field.
func (b *ClusterAutoscalingApplyConfiguration) WithBalancingIgnoredLabels(values ...string) *ClusterAutoscalingApplyConfiguration {
	for i := range values {
		b.BalancingIgnoredLabels = append(b.BalancingIgnoredLabels, values[i])
	}
	return b
}

// WithMaxNodesTotal sets the MaxNodesTotal field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxNodesTotal field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithMaxNodesTotal(value int32) *ClusterAutoscalingApplyConfiguration {
	b.MaxNodesTotal = &value
	return b
}

// WithMaxPodGracePeriod sets the MaxPodGracePeriod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxPodGracePeriod field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithMaxPodGracePeriod(value int32) *ClusterAutoscalingApplyConfiguration {
	b.MaxPodGracePeriod = &value
	return b
}

// WithMaxNodeProvisionTime sets the MaxNodeProvisionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxNodeProvisionTime field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithMaxNodeProvisionTime(value string) *ClusterAutoscalingApplyConfiguration {
	b.MaxNodeProvisionTime = &value
	return b
}

// WithPodPriorityThreshold sets the PodPriorityThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodPriorityThreshold field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithPodPriorityThreshold(value int32) *ClusterAutoscalingApplyConfiguration {
	b.PodPriorityThreshold = &value
	return b
}

// WithExpanders adds the given value to the Expanders field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Expanders field.
func (b *ClusterAutoscalingApplyConfiguration) WithExpanders(values ...hypershiftv1beta1.ExpanderString) *ClusterAutoscalingApplyConfiguration {
	for i := range values {
		b.Expanders = append(b.Expanders, values[i])
	}
	return b
}

// WithMaxFreeDifferenceRatioPercent sets the MaxFreeDifferenceRatioPercent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxFreeDifferenceRatioPercent field is set to the value of the last call.
func (b *ClusterAutoscalingApplyConfiguration) WithMaxFreeDifferenceRatioPercent(value int32) *ClusterAutoscalingApplyConfiguration {
	b.MaxFreeDifferenceRatioPercent = &value
	return b
}
