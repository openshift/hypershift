/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// AzureWorkloadIdentitiesApplyConfiguration represents a declarative configuration of the AzureWorkloadIdentities type for use
// with apply.
type AzureWorkloadIdentitiesApplyConfiguration struct {
	ImageRegistry      *WorkloadIdentityApplyConfiguration `json:"imageRegistry,omitempty"`
	Ingress            *WorkloadIdentityApplyConfiguration `json:"ingress,omitempty"`
	File               *WorkloadIdentityApplyConfiguration `json:"file,omitempty"`
	Disk               *WorkloadIdentityApplyConfiguration `json:"disk,omitempty"`
	NodePoolManagement *WorkloadIdentityApplyConfiguration `json:"nodePoolManagement,omitempty"`
	CloudProvider      *WorkloadIdentityApplyConfiguration `json:"cloudProvider,omitempty"`
}

// AzureWorkloadIdentitiesApplyConfiguration constructs a declarative configuration of the AzureWorkloadIdentities type for use with
// apply.
func AzureWorkloadIdentities() *AzureWorkloadIdentitiesApplyConfiguration {
	return &AzureWorkloadIdentitiesApplyConfiguration{}
}

// WithImageRegistry sets the ImageRegistry field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageRegistry field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithImageRegistry(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.ImageRegistry = value
	return b
}

// WithIngress sets the Ingress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ingress field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithIngress(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.Ingress = value
	return b
}

// WithFile sets the File field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the File field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithFile(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.File = value
	return b
}

// WithDisk sets the Disk field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Disk field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithDisk(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.Disk = value
	return b
}

// WithNodePoolManagement sets the NodePoolManagement field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodePoolManagement field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithNodePoolManagement(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.NodePoolManagement = value
	return b
}

// WithCloudProvider sets the CloudProvider field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CloudProvider field is set to the value of the last call.
func (b *AzureWorkloadIdentitiesApplyConfiguration) WithCloudProvider(value *WorkloadIdentityApplyConfiguration) *AzureWorkloadIdentitiesApplyConfiguration {
	b.CloudProvider = value
	return b
}
