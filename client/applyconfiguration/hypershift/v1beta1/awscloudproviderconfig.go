/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// AWSCloudProviderConfigApplyConfiguration represents a declarative configuration of the AWSCloudProviderConfig type for use
// with apply.
type AWSCloudProviderConfigApplyConfiguration struct {
	Subnet                                          *AWSResourceReferenceApplyConfiguration `json:"subnet,omitempty"`
	Zone                                            *string                                 `json:"zone,omitempty"`
	VPC                                             *string                                 `json:"vpc,omitempty"`
	ClusterServiceLoadBalancerHealthProbeMode       *string                                 `json:"clusterServiceLoadBalancerHealthProbeMode,omitempty"`
	ClusterServiceSharedLoadBalancerHealthProbePort *int32                                  `json:"clusterServiceSharedLoadBalancerHealthProbePort,omitempty"`
	ClusterServiceSharedLoadBalancerHealthProbePath *string                                 `json:"clusterServiceSharedLoadBalancerHealthProbePath,omitempty"`
}

// AWSCloudProviderConfigApplyConfiguration constructs a declarative configuration of the AWSCloudProviderConfig type for use with
// apply.
func AWSCloudProviderConfig() *AWSCloudProviderConfigApplyConfiguration {
	return &AWSCloudProviderConfigApplyConfiguration{}
}

// WithSubnet sets the Subnet field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Subnet field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithSubnet(value *AWSResourceReferenceApplyConfiguration) *AWSCloudProviderConfigApplyConfiguration {
	b.Subnet = value
	return b
}

// WithZone sets the Zone field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Zone field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithZone(value string) *AWSCloudProviderConfigApplyConfiguration {
	b.Zone = &value
	return b
}

// WithVPC sets the VPC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VPC field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithVPC(value string) *AWSCloudProviderConfigApplyConfiguration {
	b.VPC = &value
	return b
}

// WithClusterServiceLoadBalancerHealthProbeMode sets the ClusterServiceLoadBalancerHealthProbeMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterServiceLoadBalancerHealthProbeMode field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithClusterServiceLoadBalancerHealthProbeMode(value string) *AWSCloudProviderConfigApplyConfiguration {
	b.ClusterServiceLoadBalancerHealthProbeMode = &value
	return b
}

// WithClusterServiceSharedLoadBalancerHealthProbePort sets the ClusterServiceSharedLoadBalancerHealthProbePort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterServiceSharedLoadBalancerHealthProbePort field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithClusterServiceSharedLoadBalancerHealthProbePort(value int32) *AWSCloudProviderConfigApplyConfiguration {
	b.ClusterServiceSharedLoadBalancerHealthProbePort = &value
	return b
}

// WithClusterServiceSharedLoadBalancerHealthProbePath sets the ClusterServiceSharedLoadBalancerHealthProbePath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterServiceSharedLoadBalancerHealthProbePath field is set to the value of the last call.
func (b *AWSCloudProviderConfigApplyConfiguration) WithClusterServiceSharedLoadBalancerHealthProbePath(value string) *AWSCloudProviderConfigApplyConfiguration {
	b.ClusterServiceSharedLoadBalancerHealthProbePath = &value
	return b
}
