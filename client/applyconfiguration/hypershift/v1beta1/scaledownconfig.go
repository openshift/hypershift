/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// ScaleDownConfigApplyConfiguration represents a declarative configuration of the ScaleDownConfig type for use
// with apply.
type ScaleDownConfigApplyConfiguration struct {
	Enabled                 *string `json:"enabled,omitempty"`
	DelayAfterAddSeconds    *int32  `json:"delayAfterAddSeconds,omitempty"`
	DelayAfterDelete        *string `json:"delayAfterDelete,omitempty"`
	DelayAfterFailure       *string `json:"delayAfterFailure,omitempty"`
	UnneededDurationSeconds *int32  `json:"unneededDurationSeconds,omitempty"`
	UtilizationThreshold    *string `json:"utilizationThreshold,omitempty"`
}

// ScaleDownConfigApplyConfiguration constructs a declarative configuration of the ScaleDownConfig type for use with
// apply.
func ScaleDownConfig() *ScaleDownConfigApplyConfiguration {
	return &ScaleDownConfigApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithEnabled(value string) *ScaleDownConfigApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithDelayAfterAddSeconds sets the DelayAfterAddSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DelayAfterAddSeconds field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithDelayAfterAddSeconds(value int32) *ScaleDownConfigApplyConfiguration {
	b.DelayAfterAddSeconds = &value
	return b
}

// WithDelayAfterDelete sets the DelayAfterDelete field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DelayAfterDelete field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithDelayAfterDelete(value string) *ScaleDownConfigApplyConfiguration {
	b.DelayAfterDelete = &value
	return b
}

// WithDelayAfterFailure sets the DelayAfterFailure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DelayAfterFailure field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithDelayAfterFailure(value string) *ScaleDownConfigApplyConfiguration {
	b.DelayAfterFailure = &value
	return b
}

// WithUnneededDurationSeconds sets the UnneededDurationSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnneededDurationSeconds field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithUnneededDurationSeconds(value int32) *ScaleDownConfigApplyConfiguration {
	b.UnneededDurationSeconds = &value
	return b
}

// WithUtilizationThreshold sets the UtilizationThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UtilizationThreshold field is set to the value of the last call.
func (b *ScaleDownConfigApplyConfiguration) WithUtilizationThreshold(value string) *ScaleDownConfigApplyConfiguration {
	b.UtilizationThreshold = &value
	return b
}
