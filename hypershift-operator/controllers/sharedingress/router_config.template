global
  log stdout local0
  maxconn 20000

defaults
  mode tcp
  log global
  log-format "%ci:%cp -> %fi:%fp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
  option  dontlognull
  retries 3
  timeout http-request 30s
  timeout queue        1m
  timeout connect      10s
  timeout client       86400s
  timeout server       86400s
  timeout tunnel       86400s

# Frontends for the KAS SVCs to support traffic coming from the data plane via kubernetes.svc.
frontend dataplane-kas-svc
  bind :::6443 v4v6 accept-proxy
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  {{- range .Backends }}
  acl is_{{ .Name }} dst {{ .SVCIP }}
  {{- end }}
  {{- range .Backends }}
  use_backend {{ .Name }} if is_{{ .Name }}
  {{- end }}

# Frontends support any traffic coming from external DNS.
frontend external-dns
  bind :::8443 v4v6
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  {{- range .ExternalDNSBackends }}
  acl is_{{ .Name }} req_ssl_sni -i {{ .HostName }}
  {{- end }}
  {{- range .ExternalDNSBackends }}
  use_backend {{ .Name }} if is_{{ .Name }}
  {{- end }}

listen health_check_http_url
  bind :::9444 v4v6
  mode http
  monitor-uri /haproxy_ready

# Backends for the KAS SVCs to support traffic coming form the data plane via kubernetes.svc.
{{- range .Backends }}
backend {{ .Name }}
  server {{ .Name }} {{ .SVCIP }}:{{.SVCPort}}
{{- end}}

# Backends support any traffic coming from external DNS.
{{- range .ExternalDNSBackends }}
backend {{ .Name }}
  server {{ .Name }} {{ .DestinationServiceIP }}:{{.DestinationPort}}
{{- end}}
