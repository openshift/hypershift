---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: ibmvpcclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCClusterTemplate
    listKind: IBMVPCClusterTemplateList
    plural: ibmvpcclustertemplates
    shortNames:
    - ibmvpcct
    singular: ibmvpcclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of IBMVPCClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCClusterTemplate is the Schema for the ibmvpcclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterTemplateSpec defines the desired state of IBMVPCClusterTemplate.
            properties:
              template:
                description: IBMVPCClusterTemplateResource describes the data needed
                  to create an IBMVPCCluster from a template.
                properties:
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: host is the hostname on which the API server
                              is serving.
                            maxLength: 512
                            type: string
                          port:
                            description: port is the port on which the API server
                              is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneLoadBalancer:
                        description: |-
                          ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                          Use this for legacy support, use Network.LoadBalancers for the extended VPC support.
                        properties:
                          additionalListeners:
                            description: AdditionalListeners sets the additional listeners
                              for the control plane load balancer.
                            items:
                              description: |-
                                AdditionalListenerSpec defines the desired state of an
                                additional listener on an VPC load balancer.
                              properties:
                                defaultPoolName:
                                  description: defaultPoolName defines the name of
                                    a VPC Load Balancer Backend Pool to use for the
                                    VPC Load Balancer Listener.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                port:
                                  description: Port sets the port for the additional
                                    listener.
                                  format: int64
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                protocol:
                                  description: |-
                                    protocol defines the protocol to use for the VPC Load Balancer Listener.
                                    Will default to TCP protocol if not specified.
                                  enum:
                                  - http
                                  - https
                                  - tcp
                                  - udp
                                  type: string
                              required:
                              - port
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - port
                            x-kubernetes-list-type: map
                          backendPools:
                            description: backendPools defines the load balancer's
                              backend pools.
                            items:
                              description: VPCLoadBalancerBackendPoolSpec defines
                                the desired configuration of a VPC Load Balancer Backend
                                Pool.
                              properties:
                                algorithm:
                                  description: algorithm defines the load balancing
                                    algorithm to use.
                                  enum:
                                  - least_connections
                                  - round_robin
                                  - weighted_round_robin
                                  type: string
                                healthMonitor:
                                  description: healthMonitor defines the backend pool's
                                    health monitor.
                                  properties:
                                    delay:
                                      description: delay defines the seconds to wait
                                        between health checks.
                                      format: int64
                                      maximum: 60
                                      minimum: 2
                                      type: integer
                                    port:
                                      description: port defines the port to perform
                                        health monitoring on.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    retries:
                                      description: retries defines the max retries
                                        for health check.
                                      format: int64
                                      maximum: 10
                                      minimum: 1
                                      type: integer
                                    timeout:
                                      description: timeout defines the seconds to
                                        wait for a health check response.
                                      format: int64
                                      maximum: 59
                                      minimum: 1
                                      type: integer
                                    type:
                                      description: type defines the protocol used
                                        for health checks.
                                      enum:
                                      - http
                                      - https
                                      - tcp
                                      type: string
                                    urlPath:
                                      description: urlPath defines the URL to use
                                        for health monitoring.
                                      pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                      type: string
                                  required:
                                  - delay
                                  - retries
                                  - timeout
                                  - type
                                  type: object
                                name:
                                  description: name defines the name of the Backend
                                    Pool.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                protocol:
                                  description: protocol defines the protocol to use
                                    for the Backend Pool.
                                  enum:
                                  - http
                                  - https
                                  - tcp
                                  - udp
                                  type: string
                              required:
                              - algorithm
                              - healthMonitor
                              - protocol
                              type: object
                            type: array
                          id:
                            description: id of the loadbalancer
                            maxLength: 64
                            minLength: 1
                            pattern: ^[-0-9a-z_]+$
                            type: string
                          name:
                            description: Name sets the name of the VPC load balancer.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          public:
                            default: true
                            description: public indicates that load balancer is public
                              or private
                            type: boolean
                          securityGroups:
                            description: |-
                              securityGroups defines the Security Groups to attach to the load balancer.
                              Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                            items:
                              description: VPCResource represents a VPC resource.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                              - message: an id or name must be provided
                                rule: has(self.id) || has(self.name)
                            type: array
                          subnets:
                            description: |-
                              subnets defines the VPC Subnets to attach to the load balancer.
                              Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                            items:
                              description: VPCResource represents a VPC resource.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                              - message: an id or name must be provided
                                rule: has(self.id) || has(self.name)
                            type: array
                        type: object
                      image:
                        description: image represents the Image details used for the
                          cluster.
                        properties:
                          cosBucket:
                            description: cosBucket is the name of the IBM Cloud COS
                              Bucket containing the source of the image, if necessary.
                            type: string
                          cosBucketRegion:
                            description: cosBucketRegion is the COS region the bucket
                              is in.
                            type: string
                          cosInstance:
                            description: cosInstance is the name of the IBM Cloud
                              COS Instance containing the source of the image, if
                              necessary.
                            type: string
                          cosObject:
                            description: cosObject is the name of a IBM Cloud COS
                              Object used as the source of the image, if necessary.
                            type: string
                          crn:
                            description: crn is the IBM Cloud CRN of the existing
                              VPC Custom Image.
                            type: string
                          name:
                            description: name is the name of the desired VPC Custom
                              Image.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          operatingSystem:
                            description: operatingSystem is the Custom Image's Operating
                              System name.
                            type: string
                          resourceGroup:
                            description: resourceGroup is the Resource Group to create
                              the Custom Image in.
                            properties:
                              id:
                                description: id defines the IBM Cloud Resource ID.
                                type: string
                              name:
                                description: name defines the IBM Cloud Resource Name.
                                type: string
                            required:
                            - id
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: if any of cosInstance, cosBucket, or cosObject
                            are specified, all must be specified
                          rule: (!has(self.cosInstance) && !has(self.cosBucket) &&
                            !has(self.cosObject)) || (has(self.cosInstance) && has(self.cosBucket)
                            && has(self.cosObject))
                        - message: an existing image name or crn must be provided,
                            or to create a new image the cos resources must be provided,
                            with or without a name
                          rule: has(self.name) || has(self.crn) || (has(self.cosInstance)
                            && has(self.cosBucket) && has(self.cosObject))
                      network:
                        description: network represents the VPC network to use for
                          the cluster.
                        properties:
                          controlPlaneSubnets:
                            description: controlPlaneSubnets is a set of Subnet's
                              which define the Control Plane subnets.
                            items:
                              description: Subnet describes a subnet.
                              properties:
                                cidr:
                                  type: string
                                id:
                                  maxLength: 64
                                  minLength: 1
                                  pattern: ^[-0-9a-z_]+$
                                  type: string
                                name:
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                zone:
                                  type: string
                              type: object
                            type: array
                          loadBalancers:
                            description: loadBalancers is a set of VPC Load Balancer
                              definitions to use for the cluster.
                            items:
                              description: VPCLoadBalancerSpec defines the desired
                                state of an VPC load balancer.
                              properties:
                                additionalListeners:
                                  description: AdditionalListeners sets the additional
                                    listeners for the control plane load balancer.
                                  items:
                                    description: |-
                                      AdditionalListenerSpec defines the desired state of an
                                      additional listener on an VPC load balancer.
                                    properties:
                                      defaultPoolName:
                                        description: defaultPoolName defines the name
                                          of a VPC Load Balancer Backend Pool to use
                                          for the VPC Load Balancer Listener.
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                        type: string
                                      port:
                                        description: Port sets the port for the additional
                                          listener.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      protocol:
                                        description: |-
                                          protocol defines the protocol to use for the VPC Load Balancer Listener.
                                          Will default to TCP protocol if not specified.
                                        enum:
                                        - http
                                        - https
                                        - tcp
                                        - udp
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - port
                                  x-kubernetes-list-type: map
                                backendPools:
                                  description: backendPools defines the load balancer's
                                    backend pools.
                                  items:
                                    description: VPCLoadBalancerBackendPoolSpec defines
                                      the desired configuration of a VPC Load Balancer
                                      Backend Pool.
                                    properties:
                                      algorithm:
                                        description: algorithm defines the load balancing
                                          algorithm to use.
                                        enum:
                                        - least_connections
                                        - round_robin
                                        - weighted_round_robin
                                        type: string
                                      healthMonitor:
                                        description: healthMonitor defines the backend
                                          pool's health monitor.
                                        properties:
                                          delay:
                                            description: delay defines the seconds
                                              to wait between health checks.
                                            format: int64
                                            maximum: 60
                                            minimum: 2
                                            type: integer
                                          port:
                                            description: port defines the port to
                                              perform health monitoring on.
                                            format: int64
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                          retries:
                                            description: retries defines the max retries
                                              for health check.
                                            format: int64
                                            maximum: 10
                                            minimum: 1
                                            type: integer
                                          timeout:
                                            description: timeout defines the seconds
                                              to wait for a health check response.
                                            format: int64
                                            maximum: 59
                                            minimum: 1
                                            type: integer
                                          type:
                                            description: type defines the protocol
                                              used for health checks.
                                            enum:
                                            - http
                                            - https
                                            - tcp
                                            type: string
                                          urlPath:
                                            description: urlPath defines the URL to
                                              use for health monitoring.
                                            pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                            type: string
                                        required:
                                        - delay
                                        - retries
                                        - timeout
                                        - type
                                        type: object
                                      name:
                                        description: name defines the name of the
                                          Backend Pool.
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                        type: string
                                      protocol:
                                        description: protocol defines the protocol
                                          to use for the Backend Pool.
                                        enum:
                                        - http
                                        - https
                                        - tcp
                                        - udp
                                        type: string
                                    required:
                                    - algorithm
                                    - healthMonitor
                                    - protocol
                                    type: object
                                  type: array
                                id:
                                  description: id of the loadbalancer
                                  maxLength: 64
                                  minLength: 1
                                  pattern: ^[-0-9a-z_]+$
                                  type: string
                                name:
                                  description: Name sets the name of the VPC load
                                    balancer.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                public:
                                  default: true
                                  description: public indicates that load balancer
                                    is public or private
                                  type: boolean
                                securityGroups:
                                  description: |-
                                    securityGroups defines the Security Groups to attach to the load balancer.
                                    Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                  items:
                                    description: VPCResource represents a VPC resource.
                                    properties:
                                      id:
                                        description: id of the resource.
                                        minLength: 1
                                        type: string
                                      name:
                                        description: name of the resource.
                                        minLength: 1
                                        type: string
                                    type: object
                                    x-kubernetes-validations:
                                    - message: an id or name must be provided
                                      rule: has(self.id) || has(self.name)
                                  type: array
                                subnets:
                                  description: |-
                                    subnets defines the VPC Subnets to attach to the load balancer.
                                    Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                  items:
                                    description: VPCResource represents a VPC resource.
                                    properties:
                                      id:
                                        description: id of the resource.
                                        minLength: 1
                                        type: string
                                      name:
                                        description: name of the resource.
                                        minLength: 1
                                        type: string
                                    type: object
                                    x-kubernetes-validations:
                                    - message: an id or name must be provided
                                      rule: has(self.id) || has(self.name)
                                  type: array
                              type: object
                            type: array
                          resourceGroup:
                            description: |-
                              resourceGroup is the Resource Group containing all of the newtork resources.
                              This can be different than the Resource Group containing the remaining cluster resources.
                            properties:
                              id:
                                description: id defines the IBM Cloud Resource ID.
                                type: string
                              name:
                                description: name defines the IBM Cloud Resource Name.
                                type: string
                            required:
                            - id
                            type: object
                          securityGroups:
                            description: securityGroups is a set of VPCSecurityGroup's
                              which define the VPC Security Groups that manage traffic
                              within and out of the VPC.
                            items:
                              description: VPCSecurityGroup defines a VPC Security
                                Group that should exist or be created within the specified
                                VPC, with the specified Security Group Rules.
                              properties:
                                id:
                                  description: id of the Security Group.
                                  type: string
                                name:
                                  description: name of the Security Group.
                                  type: string
                                rules:
                                  description: rules are the Security Group Rules
                                    for the Security Group.
                                  items:
                                    description: VPCSecurityGroupRule defines a VPC
                                      Security Group Rule for a specified Security
                                      Group.
                                    properties:
                                      action:
                                        description: action defines whether to allow
                                          or deny traffic defined by the Security
                                          Group Rule.
                                        enum:
                                        - allow
                                        - deny
                                        type: string
                                      destination:
                                        description: |-
                                          destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                          Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                                        properties:
                                          icmpCode:
                                            description: |-
                                              icmpCode is the ICMP code for the Rule.
                                              Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                            format: int64
                                            type: integer
                                          icmpType:
                                            description: |-
                                              icmpType is the ICMP type for the Rule.
                                              Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                            format: int64
                                            type: integer
                                          portRange:
                                            description: portRange is a range of ports
                                              allowed for the Rule's remote.
                                            properties:
                                              maximumPort:
                                                description: maximumPort is the inclusive
                                                  upper range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                              minimumPort:
                                                description: minimumPort is the inclusive
                                                  lower range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                            x-kubernetes-validations:
                                            - message: maximum port must be greater
                                                than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                          protocol:
                                            description: protocol defines the traffic
                                              protocol used for the Security Group
                                              Rule.
                                            enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                            type: string
                                          remotes:
                                            description: |-
                                              remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                              Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                              This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                            items:
                                              description: |-
                                                VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                The type of remote defines the additional remote details where are used for defining the remote.
                                              properties:
                                                address:
                                                  description: |2-
                                                     address is the address to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                  type: string
                                                cidrSubnetName:
                                                  description: |-
                                                    cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                  type: string
                                                remoteType:
                                                  description: remoteType defines
                                                    the type of filter to define for
                                                    the remote's destination/source.
                                                  enum:
                                                  - any
                                                  - cidr
                                                  - address
                                                  - sg
                                                  type: string
                                                securityGroupName:
                                                  description: |-
                                                    securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                  type: string
                                              required:
                                              - remoteType
                                              type: object
                                              x-kubernetes-validations:
                                              - message: cidrSubnetName, addresss,
                                                  and securityGroupName are not valid
                                                  for VPCSecurityGroupRuleRemoteTypeAny
                                                  remoteType
                                                rule: 'self.remoteType == ''any''
                                                  ? (!has(self.cidrSubnetName) &&
                                                  !has(self.address) && !has(self.securityGroupName))
                                                  : true'
                                              - message: only cidrSubnetName is valid
                                                  for VPCSecurityGroupRuleRemoteTypeCIDR
                                                  remoteType
                                                rule: 'self.remoteType == ''cidr''
                                                  ? (has(self.cidrSubnetName) && !has(self.address)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only address is valid for
                                                  VPCSecurityGroupRuleRemoteTypeIP
                                                  remoteType
                                                rule: 'self.remoteType == ''address''
                                                  ? (has(self.address) && !has(self.cidrSubnetName)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only securityGroupName is
                                                  valid for VPCSecurityGroupRuleRemoteTypeSG
                                                  remoteType
                                                rule: 'self.remoteType == ''sg'' ?
                                                  (has(self.securityGroupName) &&
                                                  !has(self.cidrSubnetName) && !has(self.address))
                                                  : true'
                                            type: array
                                        required:
                                        - protocol
                                        - remotes
                                        type: object
                                        x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only
                                            supported for VPCSecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                            && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                            protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                            : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                            : true'
                                      direction:
                                        description: direction defines whether the
                                          traffic is inbound or outbound for the Security
                                          Group Rule.
                                        enum:
                                        - inbound
                                        - outbound
                                        type: string
                                      securityGroupID:
                                        description: securityGroupID is the ID of
                                          the Security Group for the Security Group
                                          Rule.
                                        type: string
                                      source:
                                        description: |-
                                          source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                          Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                                        properties:
                                          icmpCode:
                                            description: |-
                                              icmpCode is the ICMP code for the Rule.
                                              Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                            format: int64
                                            type: integer
                                          icmpType:
                                            description: |-
                                              icmpType is the ICMP type for the Rule.
                                              Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                            format: int64
                                            type: integer
                                          portRange:
                                            description: portRange is a range of ports
                                              allowed for the Rule's remote.
                                            properties:
                                              maximumPort:
                                                description: maximumPort is the inclusive
                                                  upper range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                              minimumPort:
                                                description: minimumPort is the inclusive
                                                  lower range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                            x-kubernetes-validations:
                                            - message: maximum port must be greater
                                                than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                          protocol:
                                            description: protocol defines the traffic
                                              protocol used for the Security Group
                                              Rule.
                                            enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                            type: string
                                          remotes:
                                            description: |-
                                              remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                              Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                              This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                            items:
                                              description: |-
                                                VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                The type of remote defines the additional remote details where are used for defining the remote.
                                              properties:
                                                address:
                                                  description: |2-
                                                     address is the address to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                  type: string
                                                cidrSubnetName:
                                                  description: |-
                                                    cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                  type: string
                                                remoteType:
                                                  description: remoteType defines
                                                    the type of filter to define for
                                                    the remote's destination/source.
                                                  enum:
                                                  - any
                                                  - cidr
                                                  - address
                                                  - sg
                                                  type: string
                                                securityGroupName:
                                                  description: |-
                                                    securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                    Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                  type: string
                                              required:
                                              - remoteType
                                              type: object
                                              x-kubernetes-validations:
                                              - message: cidrSubnetName, addresss,
                                                  and securityGroupName are not valid
                                                  for VPCSecurityGroupRuleRemoteTypeAny
                                                  remoteType
                                                rule: 'self.remoteType == ''any''
                                                  ? (!has(self.cidrSubnetName) &&
                                                  !has(self.address) && !has(self.securityGroupName))
                                                  : true'
                                              - message: only cidrSubnetName is valid
                                                  for VPCSecurityGroupRuleRemoteTypeCIDR
                                                  remoteType
                                                rule: 'self.remoteType == ''cidr''
                                                  ? (has(self.cidrSubnetName) && !has(self.address)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only address is valid for
                                                  VPCSecurityGroupRuleRemoteTypeIP
                                                  remoteType
                                                rule: 'self.remoteType == ''address''
                                                  ? (has(self.address) && !has(self.cidrSubnetName)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only securityGroupName is
                                                  valid for VPCSecurityGroupRuleRemoteTypeSG
                                                  remoteType
                                                rule: 'self.remoteType == ''sg'' ?
                                                  (has(self.securityGroupName) &&
                                                  !has(self.cidrSubnetName) && !has(self.address))
                                                  : true'
                                            type: array
                                        required:
                                        - protocol
                                        - remotes
                                        type: object
                                        x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only
                                            supported for VPCSecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                            && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                            protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                            : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                            : true'
                                    required:
                                    - action
                                    - direction
                                    type: object
                                    x-kubernetes-validations:
                                    - message: both destination and source cannot
                                        be provided
                                      rule: (has(self.destination) && !has(self.source))
                                        || (!has(self.destination) && has(self.source))
                                    - message: source must be set for VPCSecurityGroupRuleDirectionInbound
                                        direction
                                      rule: 'self.direction == ''inbound'' ? has(self.source)
                                        : true'
                                    - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound
                                        direction
                                      rule: 'self.direction == ''inbound'' ? !has(self.destination)
                                        : true'
                                    - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound
                                        direction
                                      rule: 'self.direction == ''outbound'' ? has(self.destination)
                                        : true'
                                    - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound
                                        direction
                                      rule: 'self.direction == ''outbound'' ? !has(self.source)
                                        : true'
                                  type: array
                                tags:
                                  description: tags are tags to add to the Security
                                    Group.
                                  items:
                                    type: string
                                  type: array
                              type: object
                              x-kubernetes-validations:
                              - message: either an id or name must be specified
                                rule: has(self.id) || has(self.name)
                            type: array
                          vpc:
                            description: vpc defines the IBM Cloud VPC for extended
                              VPC Infrastructure support.
                            properties:
                              id:
                                description: id of the resource.
                                minLength: 1
                                type: string
                              name:
                                description: name of the resource.
                                minLength: 1
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                          workerSubnets:
                            description: workerSubnets is a set of Subnet's which
                              define the Worker subnets.
                            items:
                              description: Subnet describes a subnet.
                              properties:
                                cidr:
                                  type: string
                                id:
                                  maxLength: 64
                                  minLength: 1
                                  pattern: ^[-0-9a-z_]+$
                                  type: string
                                name:
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                zone:
                                  type: string
                              type: object
                            type: array
                        type: object
                      region:
                        description: The IBM Cloud Region the cluster lives in.
                        type: string
                      resourceGroup:
                        description: The VPC resources should be created under the
                          resource group.
                        type: string
                      vpc:
                        description: The Name of VPC.
                        type: string
                      zone:
                        description: The Name of availability zone.
                        type: string
                    required:
                    - region
                    - resourceGroup
                    type: object
                required:
                - spec
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
