---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: ibmvpcclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCCluster
    listKind: IBMVPCClusterList
    plural: ibmvpcclusters
    singular: ibmvpccluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMVPCCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior.
                properties:
                  name:
                    description: Name sets the name of the VPC load balancer.
                    maxLength: 63
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                type: object
              region:
                description: The IBM Cloud Region the cluster lives in.
                type: string
              resourceGroup:
                description: The VPC resources should be created under the resource
                  group.
                type: string
              vpc:
                description: The Name of VPC.
                type: string
              zone:
                description: The Name of availability zone.
                type: string
            required:
            - region
            - resourceGroup
            type: object
          status:
            description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the load
                  balancer.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneLoadBalancerState:
                description: ControlPlaneLoadBalancerState is the status of the load
                  balancer.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              subnet:
                description: Subnet describes a subnet.
                properties:
                  cidr:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  zone:
                    type: string
                required:
                - cidr
                - id
                - name
                - zone
                type: object
              vpc:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                - id
                - name
                type: object
              vpcEndpoint:
                description: VPCEndpoint describes a VPCEndpoint.
                properties:
                  address:
                    type: string
                  floatingIPID:
                    description: 'Deprecated: This field has no function and is going
                      to be removed in the next release.'
                    type: string
                  loadBalancerIPID:
                    type: string
                required:
                - address
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMVPCCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: |-
                  ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                  Use this for legacy support, use Network.LoadBalancers for the extended VPC support.
                properties:
                  additionalListeners:
                    description: AdditionalListeners sets the additional listeners
                      for the control plane load balancer.
                    items:
                      description: |-
                        AdditionalListenerSpec defines the desired state of an
                        additional listener on an VPC load balancer.
                      properties:
                        defaultPoolName:
                          description: defaultPoolName defines the name of a VPC Load
                            Balancer Backend Pool to use for the VPC Load Balancer
                            Listener.
                          maxLength: 63
                          minLength: 1
                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                          type: string
                        port:
                          description: Port sets the port for the additional listener.
                          format: int64
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          description: |-
                            protocol defines the protocol to use for the VPC Load Balancer Listener.
                            Will default to TCP protocol if not specified.
                          enum:
                          - http
                          - https
                          - tcp
                          - udp
                          type: string
                      required:
                      - port
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - port
                    x-kubernetes-list-type: map
                  backendPools:
                    description: backendPools defines the load balancer's backend
                      pools.
                    items:
                      description: VPCLoadBalancerBackendPoolSpec defines the desired
                        configuration of a VPC Load Balancer Backend Pool.
                      properties:
                        algorithm:
                          description: algorithm defines the load balancing algorithm
                            to use.
                          enum:
                          - least_connections
                          - round_robin
                          - weighted_round_robin
                          type: string
                        healthMonitor:
                          description: healthMonitor defines the backend pool's health
                            monitor.
                          properties:
                            delay:
                              description: delay defines the seconds to wait between
                                health checks.
                              format: int64
                              maximum: 60
                              minimum: 2
                              type: integer
                            port:
                              description: port defines the port to perform health
                                monitoring on.
                              format: int64
                              maximum: 65535
                              minimum: 1
                              type: integer
                            retries:
                              description: retries defines the max retries for health
                                check.
                              format: int64
                              maximum: 10
                              minimum: 1
                              type: integer
                            timeout:
                              description: timeout defines the seconds to wait for
                                a health check response.
                              format: int64
                              maximum: 59
                              minimum: 1
                              type: integer
                            type:
                              description: type defines the protocol used for health
                                checks.
                              enum:
                              - http
                              - https
                              - tcp
                              type: string
                            urlPath:
                              description: urlPath defines the URL to use for health
                                monitoring.
                              pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                              type: string
                          required:
                          - delay
                          - retries
                          - timeout
                          - type
                          type: object
                        name:
                          description: name defines the name of the Backend Pool.
                          maxLength: 63
                          minLength: 1
                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                          type: string
                        protocol:
                          description: protocol defines the protocol to use for the
                            Backend Pool.
                          enum:
                          - http
                          - https
                          - tcp
                          - udp
                          type: string
                      required:
                      - algorithm
                      - healthMonitor
                      - protocol
                      type: object
                    type: array
                  id:
                    description: id of the loadbalancer
                    maxLength: 64
                    minLength: 1
                    pattern: ^[-0-9a-z_]+$
                    type: string
                  name:
                    description: Name sets the name of the VPC load balancer.
                    maxLength: 63
                    minLength: 1
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                  public:
                    default: true
                    description: public indicates that load balancer is public or
                      private
                    type: boolean
                  securityGroups:
                    description: |-
                      securityGroups defines the Security Groups to attach to the load balancer.
                      Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                    items:
                      description: VPCResource represents a VPC resource.
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: an id or name must be provided
                        rule: has(self.id) || has(self.name)
                    type: array
                  subnets:
                    description: |-
                      subnets defines the VPC Subnets to attach to the load balancer.
                      Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                    items:
                      description: VPCResource represents a VPC resource.
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: an id or name must be provided
                        rule: has(self.id) || has(self.name)
                    type: array
                type: object
              image:
                description: image represents the Image details used for the cluster.
                properties:
                  cosBucket:
                    description: cosBucket is the name of the IBM Cloud COS Bucket
                      containing the source of the image, if necessary.
                    type: string
                  cosBucketRegion:
                    description: cosBucketRegion is the COS region the bucket is in.
                    type: string
                  cosInstance:
                    description: cosInstance is the name of the IBM Cloud COS Instance
                      containing the source of the image, if necessary.
                    type: string
                  cosObject:
                    description: cosObject is the name of a IBM Cloud COS Object used
                      as the source of the image, if necessary.
                    type: string
                  crn:
                    description: crn is the IBM Cloud CRN of the existing VPC Custom
                      Image.
                    type: string
                  name:
                    description: name is the name of the desired VPC Custom Image.
                    maxLength: 63
                    minLength: 1
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                  operatingSystem:
                    description: operatingSystem is the Custom Image's Operating System
                      name.
                    type: string
                  resourceGroup:
                    description: resourceGroup is the Resource Group to create the
                      Custom Image in.
                    properties:
                      id:
                        description: id defines the IBM Cloud Resource ID.
                        type: string
                      name:
                        description: name defines the IBM Cloud Resource Name.
                        type: string
                    required:
                    - id
                    type: object
                type: object
                x-kubernetes-validations:
                - message: if any of cosInstance, cosBucket, or cosObject are specified,
                    all must be specified
                  rule: (!has(self.cosInstance) && !has(self.cosBucket) && !has(self.cosObject))
                    || (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                - message: an existing image name or crn must be provided, or to create
                    a new image the cos resources must be provided, with or without
                    a name
                  rule: has(self.name) || has(self.crn) || (has(self.cosInstance)
                    && has(self.cosBucket) && has(self.cosObject))
              network:
                description: network represents the VPC network to use for the cluster.
                properties:
                  controlPlaneSubnets:
                    description: controlPlaneSubnets is a set of Subnet's which define
                      the Control Plane subnets.
                    items:
                      description: Subnet describes a subnet.
                      properties:
                        cidr:
                          type: string
                        id:
                          maxLength: 64
                          minLength: 1
                          pattern: ^[-0-9a-z_]+$
                          type: string
                        name:
                          maxLength: 63
                          minLength: 1
                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                          type: string
                        zone:
                          type: string
                      type: object
                    type: array
                  loadBalancers:
                    description: loadBalancers is a set of VPC Load Balancer definitions
                      to use for the cluster.
                    items:
                      description: VPCLoadBalancerSpec defines the desired state of
                        an VPC load balancer.
                      properties:
                        additionalListeners:
                          description: AdditionalListeners sets the additional listeners
                            for the control plane load balancer.
                          items:
                            description: |-
                              AdditionalListenerSpec defines the desired state of an
                              additional listener on an VPC load balancer.
                            properties:
                              defaultPoolName:
                                description: defaultPoolName defines the name of a
                                  VPC Load Balancer Backend Pool to use for the VPC
                                  Load Balancer Listener.
                                maxLength: 63
                                minLength: 1
                                pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                type: string
                              port:
                                description: Port sets the port for the additional
                                  listener.
                                format: int64
                                maximum: 65535
                                minimum: 1
                                type: integer
                              protocol:
                                description: |-
                                  protocol defines the protocol to use for the VPC Load Balancer Listener.
                                  Will default to TCP protocol if not specified.
                                enum:
                                - http
                                - https
                                - tcp
                                - udp
                                type: string
                            required:
                            - port
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - port
                          x-kubernetes-list-type: map
                        backendPools:
                          description: backendPools defines the load balancer's backend
                            pools.
                          items:
                            description: VPCLoadBalancerBackendPoolSpec defines the
                              desired configuration of a VPC Load Balancer Backend
                              Pool.
                            properties:
                              algorithm:
                                description: algorithm defines the load balancing
                                  algorithm to use.
                                enum:
                                - least_connections
                                - round_robin
                                - weighted_round_robin
                                type: string
                              healthMonitor:
                                description: healthMonitor defines the backend pool's
                                  health monitor.
                                properties:
                                  delay:
                                    description: delay defines the seconds to wait
                                      between health checks.
                                    format: int64
                                    maximum: 60
                                    minimum: 2
                                    type: integer
                                  port:
                                    description: port defines the port to perform
                                      health monitoring on.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  retries:
                                    description: retries defines the max retries for
                                      health check.
                                    format: int64
                                    maximum: 10
                                    minimum: 1
                                    type: integer
                                  timeout:
                                    description: timeout defines the seconds to wait
                                      for a health check response.
                                    format: int64
                                    maximum: 59
                                    minimum: 1
                                    type: integer
                                  type:
                                    description: type defines the protocol used for
                                      health checks.
                                    enum:
                                    - http
                                    - https
                                    - tcp
                                    type: string
                                  urlPath:
                                    description: urlPath defines the URL to use for
                                      health monitoring.
                                    pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                    type: string
                                required:
                                - delay
                                - retries
                                - timeout
                                - type
                                type: object
                              name:
                                description: name defines the name of the Backend
                                  Pool.
                                maxLength: 63
                                minLength: 1
                                pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                type: string
                              protocol:
                                description: protocol defines the protocol to use
                                  for the Backend Pool.
                                enum:
                                - http
                                - https
                                - tcp
                                - udp
                                type: string
                            required:
                            - algorithm
                            - healthMonitor
                            - protocol
                            type: object
                          type: array
                        id:
                          description: id of the loadbalancer
                          maxLength: 64
                          minLength: 1
                          pattern: ^[-0-9a-z_]+$
                          type: string
                        name:
                          description: Name sets the name of the VPC load balancer.
                          maxLength: 63
                          minLength: 1
                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                          type: string
                        public:
                          default: true
                          description: public indicates that load balancer is public
                            or private
                          type: boolean
                        securityGroups:
                          description: |-
                            securityGroups defines the Security Groups to attach to the load balancer.
                            Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                          items:
                            description: VPCResource represents a VPC resource.
                            properties:
                              id:
                                description: id of the resource.
                                minLength: 1
                                type: string
                              name:
                                description: name of the resource.
                                minLength: 1
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                          type: array
                        subnets:
                          description: |-
                            subnets defines the VPC Subnets to attach to the load balancer.
                            Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                          items:
                            description: VPCResource represents a VPC resource.
                            properties:
                              id:
                                description: id of the resource.
                                minLength: 1
                                type: string
                              name:
                                description: name of the resource.
                                minLength: 1
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                          type: array
                      type: object
                    type: array
                  resourceGroup:
                    description: |-
                      resourceGroup is the Resource Group containing all of the newtork resources.
                      This can be different than the Resource Group containing the remaining cluster resources.
                    properties:
                      id:
                        description: id defines the IBM Cloud Resource ID.
                        type: string
                      name:
                        description: name defines the IBM Cloud Resource Name.
                        type: string
                    required:
                    - id
                    type: object
                  securityGroups:
                    description: securityGroups is a set of VPCSecurityGroup's which
                      define the VPC Security Groups that manage traffic within and
                      out of the VPC.
                    items:
                      description: VPCSecurityGroup defines a VPC Security Group that
                        should exist or be created within the specified VPC, with
                        the specified Security Group Rules.
                      properties:
                        id:
                          description: id of the Security Group.
                          type: string
                        name:
                          description: name of the Security Group.
                          type: string
                        rules:
                          description: rules are the Security Group Rules for the
                            Security Group.
                          items:
                            description: VPCSecurityGroupRule defines a VPC Security
                              Group Rule for a specified Security Group.
                            properties:
                              action:
                                description: action defines whether to allow or deny
                                  traffic defined by the Security Group Rule.
                                enum:
                                - allow
                                - deny
                                type: string
                              destination:
                                description: |-
                                  destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                  Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                                properties:
                                  icmpCode:
                                    description: |-
                                      icmpCode is the ICMP code for the Rule.
                                      Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                    format: int64
                                    type: integer
                                  icmpType:
                                    description: |-
                                      icmpType is the ICMP type for the Rule.
                                      Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                    format: int64
                                    type: integer
                                  portRange:
                                    description: portRange is a range of ports allowed
                                      for the Rule's remote.
                                    properties:
                                      maximumPort:
                                        description: maximumPort is the inclusive
                                          upper range of ports.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      minimumPort:
                                        description: minimumPort is the inclusive
                                          lower range of ports.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                    type: object
                                    x-kubernetes-validations:
                                    - message: maximum port must be greater than or
                                        equal to minimum port
                                      rule: self.maximumPort >= self.minimumPort
                                  protocol:
                                    description: protocol defines the traffic protocol
                                      used for the Security Group Rule.
                                    enum:
                                    - all
                                    - icmp
                                    - tcp
                                    - udp
                                    type: string
                                  remotes:
                                    description: |-
                                      remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                      Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                      This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                    items:
                                      description: |-
                                        VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                        The type of remote defines the additional remote details where are used for defining the remote.
                                      properties:
                                        address:
                                          description: |2-
                                             address is the address to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                          type: string
                                        cidrSubnetName:
                                          description: |-
                                            cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                          type: string
                                        remoteType:
                                          description: remoteType defines the type
                                            of filter to define for the remote's destination/source.
                                          enum:
                                          - any
                                          - cidr
                                          - address
                                          - sg
                                          type: string
                                        securityGroupName:
                                          description: |-
                                            securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                          type: string
                                      required:
                                      - remoteType
                                      type: object
                                      x-kubernetes-validations:
                                      - message: cidrSubnetName, addresss, and securityGroupName
                                          are not valid for VPCSecurityGroupRuleRemoteTypeAny
                                          remoteType
                                        rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName)
                                          && !has(self.address) && !has(self.securityGroupName))
                                          : true'
                                      - message: only cidrSubnetName is valid for
                                          VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                        rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName)
                                          && !has(self.address) && !has(self.securityGroupName))
                                          : true'
                                      - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP
                                          remoteType
                                        rule: 'self.remoteType == ''address'' ? (has(self.address)
                                          && !has(self.cidrSubnetName) && !has(self.securityGroupName))
                                          : true'
                                      - message: only securityGroupName is valid for
                                          VPCSecurityGroupRuleRemoteTypeSG remoteType
                                        rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName)
                                          && !has(self.cidrSubnetName) && !has(self.address))
                                          : true'
                                    type: array
                                required:
                                - protocol
                                - remotes
                                type: object
                                x-kubernetes-validations:
                                - message: icmpCode and icmpType are only supported
                                    for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                    && !has(self.icmpType)) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                    protocol
                                  rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                    : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                    protocol
                                  rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                    : true'
                              direction:
                                description: direction defines whether the traffic
                                  is inbound or outbound for the Security Group Rule.
                                enum:
                                - inbound
                                - outbound
                                type: string
                              securityGroupID:
                                description: securityGroupID is the ID of the Security
                                  Group for the Security Group Rule.
                                type: string
                              source:
                                description: |-
                                  source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                  Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                                properties:
                                  icmpCode:
                                    description: |-
                                      icmpCode is the ICMP code for the Rule.
                                      Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                    format: int64
                                    type: integer
                                  icmpType:
                                    description: |-
                                      icmpType is the ICMP type for the Rule.
                                      Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                    format: int64
                                    type: integer
                                  portRange:
                                    description: portRange is a range of ports allowed
                                      for the Rule's remote.
                                    properties:
                                      maximumPort:
                                        description: maximumPort is the inclusive
                                          upper range of ports.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      minimumPort:
                                        description: minimumPort is the inclusive
                                          lower range of ports.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                    type: object
                                    x-kubernetes-validations:
                                    - message: maximum port must be greater than or
                                        equal to minimum port
                                      rule: self.maximumPort >= self.minimumPort
                                  protocol:
                                    description: protocol defines the traffic protocol
                                      used for the Security Group Rule.
                                    enum:
                                    - all
                                    - icmp
                                    - tcp
                                    - udp
                                    type: string
                                  remotes:
                                    description: |-
                                      remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                      Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                      This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                    items:
                                      description: |-
                                        VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                        The type of remote defines the additional remote details where are used for defining the remote.
                                      properties:
                                        address:
                                          description: |2-
                                             address is the address to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                          type: string
                                        cidrSubnetName:
                                          description: |-
                                            cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                          type: string
                                        remoteType:
                                          description: remoteType defines the type
                                            of filter to define for the remote's destination/source.
                                          enum:
                                          - any
                                          - cidr
                                          - address
                                          - sg
                                          type: string
                                        securityGroupName:
                                          description: |-
                                            securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                            Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                          type: string
                                      required:
                                      - remoteType
                                      type: object
                                      x-kubernetes-validations:
                                      - message: cidrSubnetName, addresss, and securityGroupName
                                          are not valid for VPCSecurityGroupRuleRemoteTypeAny
                                          remoteType
                                        rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName)
                                          && !has(self.address) && !has(self.securityGroupName))
                                          : true'
                                      - message: only cidrSubnetName is valid for
                                          VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                        rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName)
                                          && !has(self.address) && !has(self.securityGroupName))
                                          : true'
                                      - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP
                                          remoteType
                                        rule: 'self.remoteType == ''address'' ? (has(self.address)
                                          && !has(self.cidrSubnetName) && !has(self.securityGroupName))
                                          : true'
                                      - message: only securityGroupName is valid for
                                          VPCSecurityGroupRuleRemoteTypeSG remoteType
                                        rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName)
                                          && !has(self.cidrSubnetName) && !has(self.address))
                                          : true'
                                    type: array
                                required:
                                - protocol
                                - remotes
                                type: object
                                x-kubernetes-validations:
                                - message: icmpCode and icmpType are only supported
                                    for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                    && !has(self.icmpType)) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                    protocol
                                  rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                    : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                    protocol
                                  rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                    : true'
                            required:
                            - action
                            - direction
                            type: object
                            x-kubernetes-validations:
                            - message: both destination and source cannot be provided
                              rule: (has(self.destination) && !has(self.source)) ||
                                (!has(self.destination) && has(self.source))
                            - message: source must be set for VPCSecurityGroupRuleDirectionInbound
                                direction
                              rule: 'self.direction == ''inbound'' ? has(self.source)
                                : true'
                            - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound
                                direction
                              rule: 'self.direction == ''inbound'' ? !has(self.destination)
                                : true'
                            - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound
                                direction
                              rule: 'self.direction == ''outbound'' ? has(self.destination)
                                : true'
                            - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound
                                direction
                              rule: 'self.direction == ''outbound'' ? !has(self.source)
                                : true'
                          type: array
                        tags:
                          description: tags are tags to add to the Security Group.
                          items:
                            type: string
                          type: array
                      type: object
                      x-kubernetes-validations:
                      - message: either an id or name must be specified
                        rule: has(self.id) || has(self.name)
                    type: array
                  vpc:
                    description: vpc defines the IBM Cloud VPC for extended VPC Infrastructure
                      support.
                    properties:
                      id:
                        description: id of the resource.
                        minLength: 1
                        type: string
                      name:
                        description: name of the resource.
                        minLength: 1
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: an id or name must be provided
                      rule: has(self.id) || has(self.name)
                  workerSubnets:
                    description: workerSubnets is a set of Subnet's which define the
                      Worker subnets.
                    items:
                      description: Subnet describes a subnet.
                      properties:
                        cidr:
                          type: string
                        id:
                          maxLength: 64
                          minLength: 1
                          pattern: ^[-0-9a-z_]+$
                          type: string
                        name:
                          maxLength: 63
                          minLength: 1
                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                          type: string
                        zone:
                          type: string
                      type: object
                    type: array
                type: object
              region:
                description: The IBM Cloud Region the cluster lives in.
                type: string
              resourceGroup:
                description: The VPC resources should be created under the resource
                  group.
                type: string
              vpc:
                description: The Name of VPC.
                type: string
              zone:
                description: The Name of availability zone.
                type: string
            required:
            - region
            - resourceGroup
            type: object
          status:
            description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the load
                  balancer.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneLoadBalancerState:
                description: ControlPlaneLoadBalancerState is the status of the load
                  balancer.
                type: string
              image:
                description: image is the status of the VPC Custom Image.
                properties:
                  id:
                    description: id defines the Id of the IBM Cloud resource status.
                    type: string
                  name:
                    description: name defines the name of the IBM Cloud resource status.
                    type: string
                  ready:
                    description: ready defines whether the IBM Cloud resource is ready.
                    type: boolean
                required:
                - id
                - ready
                type: object
              network:
                description: network is the status of the VPC network resources for
                  extended VPC Infrastructure support.
                properties:
                  controlPlaneSubnets:
                    additionalProperties:
                      description: ResourceStatus identifies a resource by id (and
                        name) and whether it is ready.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource
                            status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource
                            status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource
                            is ready.
                          type: boolean
                      required:
                      - id
                      - ready
                      type: object
                    description: |-
                      controlPlaneSubnets references the VPC Subnets for the cluster's Control Plane.
                      The map simplifies lookups.
                    type: object
                  loadBalancers:
                    additionalProperties:
                      description: VPCLoadBalancerStatus defines the status VPC load
                        balancer.
                      properties:
                        controllerCreated:
                          default: false
                          description: controllerCreated indicates whether the resource
                            is created by the controller.
                          type: boolean
                        hostname:
                          description: hostname is the hostname of load balancer.
                          type: string
                        id:
                          description: id of VPC load balancer.
                          type: string
                        state:
                          description: State is the status of the load balancer.
                          type: string
                      type: object
                    description: |-
                      loadBalancers references the VPC Load Balancer's for the cluster.
                      The map simplifies lookups.
                    type: object
                  publicGateways:
                    additionalProperties:
                      description: ResourceStatus identifies a resource by id (and
                        name) and whether it is ready.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource
                            status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource
                            status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource
                            is ready.
                          type: boolean
                      required:
                      - id
                      - ready
                      type: object
                    description: |-
                      publicGateways references the VPC Public Gateways for the cluster.
                      The map simplifies lookups.
                    type: object
                  resourceGroup:
                    description: |-
                      resourceGroup references the Resource Group for Network resources for the cluster.
                      This can be the same or unique from the cluster's Resource Group.
                    properties:
                      id:
                        description: id defines the Id of the IBM Cloud resource status.
                        type: string
                      name:
                        description: name defines the name of the IBM Cloud resource
                          status.
                        type: string
                      ready:
                        description: ready defines whether the IBM Cloud resource
                          is ready.
                        type: boolean
                    required:
                    - id
                    - ready
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: ResourceStatus identifies a resource by id (and
                        name) and whether it is ready.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource
                            status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource
                            status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource
                            is ready.
                          type: boolean
                      required:
                      - id
                      - ready
                      type: object
                    description: |-
                      securityGroups references the VPC Security Groups for the cluster.
                      The map simplifies lookups.
                    type: object
                  vpc:
                    description: vpc references the status of the IBM Cloud VPC as
                      part of the extended VPC Infrastructure support.
                    properties:
                      id:
                        description: id defines the Id of the IBM Cloud resource status.
                        type: string
                      name:
                        description: name defines the name of the IBM Cloud resource
                          status.
                        type: string
                      ready:
                        description: ready defines whether the IBM Cloud resource
                          is ready.
                        type: boolean
                    required:
                    - id
                    - ready
                    type: object
                  workerSubnets:
                    additionalProperties:
                      description: ResourceStatus identifies a resource by id (and
                        name) and whether it is ready.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource
                            status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource
                            status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource
                            is ready.
                          type: boolean
                      required:
                      - id
                      - ready
                      type: object
                    description: |-
                      workerSubnets references the VPC Subnets for the cluster's Data Plane.
                      The map simplifies lookups.
                    type: object
                type: object
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
              resourceGroup:
                description: resourceGroup is the status of the cluster's Resource
                  Group for extended VPC Infrastructure support.
                properties:
                  id:
                    description: id defines the Id of the IBM Cloud resource status.
                    type: string
                  name:
                    description: name defines the name of the IBM Cloud resource status.
                    type: string
                  ready:
                    description: ready defines whether the IBM Cloud resource is ready.
                    type: boolean
                required:
                - id
                - ready
                type: object
              subnet:
                description: Subnet describes a subnet.
                properties:
                  cidr:
                    type: string
                  id:
                    maxLength: 64
                    minLength: 1
                    pattern: ^[-0-9a-z_]+$
                    type: string
                  name:
                    maxLength: 63
                    minLength: 1
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                  zone:
                    type: string
                type: object
              vpc:
                description: |-
                  Important: Run "make" to regenerate code after modifying this file
                  dep: rely on Network instead.
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                - id
                - name
                type: object
              vpcEndpoint:
                description: VPCEndpoint describes a VPCEndpoint.
                properties:
                  address:
                    type: string
                  floatingIPID:
                    description: 'Deprecated: This field has no function and is going
                      to be removed in the next release.'
                    type: string
                  loadBalancerIPID:
                    type: string
                required:
                - address
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
