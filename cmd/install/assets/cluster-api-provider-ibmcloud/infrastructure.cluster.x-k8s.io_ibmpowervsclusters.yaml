---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: ibmpowervsclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSCluster
    listKind: IBMPowerVSClusterList
    plural: ibmpowervsclusters
    singular: ibmpowervscluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Time duration since creation of IBMPowerVSCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.serviceInstanceID
      name: PowerVS Cloud Instance ID
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Control Plane Port
      jsonPath: .spec.controlPlaneEndpoint.port
      name: Port
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: Network is the reference to the Network to use for this
                  cluster.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed.
                minLength: 1
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
            properties:
              ready:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Time duration since creation of IBMPowerVSCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.serviceInstanceID
      name: PowerVS Cloud Instance ID
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Control Plane Port
      jsonPath: .spec.controlPlaneEndpoint.port
      name: Port
      priority: 1
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              cosInstance:
                description: |-
                  cosInstance contains options to configure a supporting IBM Cloud COS bucket for this
                  cluster - currently used for nodes requiring Ignition
                  (https://coreos.github.io/ignition/) for bootstrapping (requires
                  BootstrapFormatIgnition feature flag to be enabled).
                  when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource and Ignition is set, then
                  1. CosInstance.Name should be set not setting will result in webhook error.
                  2. CosInstance.BucketName should be set not setting will result in webhook error.
                  3. CosInstance.BucketRegion should be set not setting will result in webhook error.
                properties:
                  bucketName:
                    description: bucketName is IBM cloud COS bucket name
                    type: string
                  bucketRegion:
                    description: bucketRegion is IBM cloud COS bucket region
                    type: string
                  name:
                    description: |-
                      name defines name of IBM cloud COS instance to be created.
                      when IBMPowerVSCluster.Ignition is set
                    maxLength: 63
                    minLength: 3
                    pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                    type: string
                type: object
              dhcpServer:
                description: |-
                  dhcpServer is contains the configuration to be used while creating a new DHCP server in PowerVS workspace.
                  when the field is omitted, CLUSTER_NAME will be used as DHCPServer.Name and DHCP server will be created.
                  it will automatically create network with name DHCPSERVER<DHCPServer.Name>_Private in PowerVS workspace.
                properties:
                  cidr:
                    description: Optional cidr for DHCP private network
                    type: string
                  dnsServer:
                    default: 1.1.1.1
                    description: Optional DNS Server for DHCP service
                    type: string
                  id:
                    description: Optional id of the existing DHCPServer
                    type: string
                  name:
                    description: Optional name of DHCP Service. Only alphanumeric
                      characters and dashes are allowed.
                    type: string
                  snat:
                    default: true
                    description: Optional indicates if SNAT will be enabled for DHCP
                      service
                    type: boolean
                type: object
              ignition:
                description: Ignition defined options related to the bootstrapping
                  systems where Ignition is used.
                properties:
                  version:
                    default: "2.3"
                    description: Version defines which version of Ignition will be
                      used to generate bootstrap data.
                    enum:
                    - "2.3"
                    - "2.4"
                    - "3.0"
                    - "3.1"
                    - "3.2"
                    - "3.3"
                    - "3.4"
                    type: string
                type: object
              loadBalancers:
                description: |-
                  loadBalancers is optional configuration for configuring loadbalancers to control plane or data plane nodes.
                  when omitted system will create a default public loadbalancer with name CLUSTER_NAME-loadbalancer.
                  when specified a vpc loadbalancer will be created and controlPlaneEndpoint will be set with associated hostname of loadbalancer.
                  ControlPlaneEndpoint will be set with associated hostname of public loadbalancer.
                  when LoadBalancers[].ID is set, its expected that there exist a loadbalancer with ID or else system will give error.
                  when LoadBalancers[].Name is set, system will first check for loadbalancer with Name, if not exist system will create new loadbalancer.
                  For each loadbalancer a default backed pool and front listener will be configured with port 6443.
                items:
                  description: VPCLoadBalancerSpec defines the desired state of an
                    VPC load balancer.
                  properties:
                    additionalListeners:
                      description: AdditionalListeners sets the additional listeners
                        for the control plane load balancer.
                      items:
                        description: |-
                          AdditionalListenerSpec defines the desired state of an
                          additional listener on an VPC load balancer.
                        properties:
                          defaultPoolName:
                            description: defaultPoolName defines the name of a VPC
                              Load Balancer Backend Pool to use for the VPC Load Balancer
                              Listener.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          port:
                            description: Port sets the port for the additional listener.
                            format: int64
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: |-
                              protocol defines the protocol to use for the VPC Load Balancer Listener.
                              Will default to TCP protocol if not specified.
                            enum:
                            - http
                            - https
                            - tcp
                            - udp
                            type: string
                        required:
                        - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - port
                      x-kubernetes-list-type: map
                    backendPools:
                      description: backendPools defines the load balancer's backend
                        pools.
                      items:
                        description: VPCLoadBalancerBackendPoolSpec defines the desired
                          configuration of a VPC Load Balancer Backend Pool.
                        properties:
                          algorithm:
                            description: algorithm defines the load balancing algorithm
                              to use.
                            enum:
                            - least_connections
                            - round_robin
                            - weighted_round_robin
                            type: string
                          healthMonitor:
                            description: healthMonitor defines the backend pool's
                              health monitor.
                            properties:
                              delay:
                                description: delay defines the seconds to wait between
                                  health checks.
                                format: int64
                                maximum: 60
                                minimum: 2
                                type: integer
                              port:
                                description: port defines the port to perform health
                                  monitoring on.
                                format: int64
                                maximum: 65535
                                minimum: 1
                                type: integer
                              retries:
                                description: retries defines the max retries for health
                                  check.
                                format: int64
                                maximum: 10
                                minimum: 1
                                type: integer
                              timeout:
                                description: timeout defines the seconds to wait for
                                  a health check response.
                                format: int64
                                maximum: 59
                                minimum: 1
                                type: integer
                              type:
                                description: type defines the protocol used for health
                                  checks.
                                enum:
                                - http
                                - https
                                - tcp
                                type: string
                              urlPath:
                                description: urlPath defines the URL to use for health
                                  monitoring.
                                pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                type: string
                            required:
                            - delay
                            - retries
                            - timeout
                            - type
                            type: object
                          name:
                            description: name defines the name of the Backend Pool.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          protocol:
                            description: protocol defines the protocol to use for
                              the Backend Pool.
                            enum:
                            - http
                            - https
                            - tcp
                            - udp
                            type: string
                        required:
                        - algorithm
                        - healthMonitor
                        - protocol
                        type: object
                      type: array
                    id:
                      description: id of the loadbalancer
                      maxLength: 64
                      minLength: 1
                      pattern: ^[-0-9a-z_]+$
                      type: string
                    name:
                      description: Name sets the name of the VPC load balancer.
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    public:
                      default: true
                      description: public indicates that load balancer is public or
                        private
                      type: boolean
                    securityGroups:
                      description: |-
                        securityGroups defines the Security Groups to attach to the load balancer.
                        Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                      items:
                        description: VPCResource represents a VPC resource.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                      type: array
                    subnets:
                      description: |-
                        subnets defines the VPC Subnets to attach to the load balancer.
                        Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                      items:
                        description: VPCResource represents a VPC resource.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                      type: array
                  type: object
                type: array
              network:
                description: |-
                  Network is the reference to the Network to use for this cluster.
                  when the field is omitted, A DHCP service will be created in the Power VS workspace and its private network will be used.
                  the DHCP service created network will have the following name format
                  1. in the case of DHCPServer.Name is not set the name will be DHCPSERVER<CLUSTER_NAME>_Private.
                  2. if DHCPServer.Name is set the name will be DHCPSERVER<DHCPServer.Name>_Private.
                  when Network.ID is set, its expected that there exist a network in PowerVS workspace with id or else system will give error.
                  when Network.Name is set, system will first check for network with Name in PowerVS workspace, if not exist system will check DHCP network with given Network.name, if that also not exist, it will create a new DHCP service and name will be DHCPSERVER<Network.Name>_Private.
                  Network.RegEx is not yet supported and system will ignore the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              resourceGroup:
                description: |-
                  resourceGroup name under which the resources will be created.
                  when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                  1. it is expected to set the ResourceGroup.Name, not setting will result in webhook error.
                  ResourceGroup.ID and ResourceGroup.Regex is not yet supported and system will ignore the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstance:
                description: |-
                  serviceInstance is the reference to the Power VS server workspace on which the server instance(VM) will be created.
                  Power VS server workspace is a container for all Power VS instances at a specific geographic region.
                  serviceInstance can be created via IBM Cloud catalog or CLI.
                  supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                  More detail about Power VS service instance.
                  https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                  when omitted system will dynamically create the service instance with name CLUSTER_NAME-serviceInstance.
                  when ServiceInstance.ID is set, its expected that there exist a service instance in PowerVS workspace with id or else system will give error.
                  when ServiceInstance.Name is set, system will first check for service instance with Name in PowerVS workspace, if not exist system will create new instance.
                  if there are more than one service instance exist with the ServiceInstance.Name in given Zone, installation fails with an error. Use ServiceInstance.ID in those situations to use the specific service instance.
                  ServiceInstance.Regex is not yet supported not yet supported and system will ignore the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: |-
                  ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                  Deprecated: use ServiceInstance instead
                type: string
              transitGateway:
                description: |-
                  transitGateway contains information about IBM Cloud TransitGateway
                  IBM Cloud TransitGateway helps in establishing network connectivity between IBM Cloud Power VS and VPC infrastructure
                  more information about TransitGateway can be found here https://www.ibm.com/products/transit-gateway.
                  when TransitGateway.ID is set, its expected that there exist a TransitGateway with ID or else system will give error.
                  when TransitGateway.Name is set, system will first check for TransitGateway with Name, if not exist system will create new TransitGateway.
                properties:
                  globalRouting:
                    description: |-
                      globalRouting indicates whether to set global routing true or not while creating the transit gateway.
                      set this field to true only when PowerVS and VPC are from different regions, if they are same it's suggested to use local routing by setting the field to false.
                      when the field is omitted,  based on PowerVS region (region associated with IBMPowerVSCluster.Spec.Zone) and VPC region(IBMPowerVSCluster.Spec.VPC.Region) system will decide whether to enable globalRouting or not.
                    type: boolean
                  id:
                    description: id of resource.
                    type: string
                  name:
                    description: name of resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^([a-zA-Z]|[a-zA-Z][-_a-zA-Z0-9]*[a-zA-Z0-9])$
                    type: string
                type: object
              vpc:
                description: |-
                  vpc contains information about IBM Cloud VPC resources.
                  when omitted system will dynamically create the VPC with name CLUSTER_NAME-vpc.
                  when VPC.ID is set, its expected that there exist a VPC with ID or else system will give error.
                  when VPC.Name is set, system will first check for VPC with Name, if not exist system will create new VPC.
                  when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                  1. it is expected to set the VPC.Region, not setting will result in webhook error.
                properties:
                  id:
                    description: id of resource.
                    maxLength: 64
                    minLength: 1
                    pattern: ^[-0-9a-z_]+$
                    type: string
                  name:
                    description: name of resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                  region:
                    description: |-
                      region of IBM Cloud VPC.
                      when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                      it is expected to set the region, not setting will result in webhook error.
                    type: string
                type: object
              vpcSecurityGroups:
                description: VPCSecurityGroups to attach it to the VPC resource
                items:
                  description: VPCSecurityGroup defines a VPC Security Group that
                    should exist or be created within the specified VPC, with the
                    specified Security Group Rules.
                  properties:
                    id:
                      description: id of the Security Group.
                      type: string
                    name:
                      description: name of the Security Group.
                      type: string
                    rules:
                      description: rules are the Security Group Rules for the Security
                        Group.
                      items:
                        description: VPCSecurityGroupRule defines a VPC Security Group
                          Rule for a specified Security Group.
                        properties:
                          action:
                            description: action defines whether to allow or deny traffic
                              defined by the Security Group Rule.
                            enum:
                            - allow
                            - deny
                            type: string
                          destination:
                            description: |-
                              destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                              Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                            properties:
                              icmpCode:
                                description: |-
                                  icmpCode is the ICMP code for the Rule.
                                  Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                format: int64
                                type: integer
                              icmpType:
                                description: |-
                                  icmpType is the ICMP type for the Rule.
                                  Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                format: int64
                                type: integer
                              portRange:
                                description: portRange is a range of ports allowed
                                  for the Rule's remote.
                                properties:
                                  maximumPort:
                                    description: maximumPort is the inclusive upper
                                      range of ports.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  minimumPort:
                                    description: minimumPort is the inclusive lower
                                      range of ports.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                                x-kubernetes-validations:
                                - message: maximum port must be greater than or equal
                                    to minimum port
                                  rule: self.maximumPort >= self.minimumPort
                              protocol:
                                description: protocol defines the traffic protocol
                                  used for the Security Group Rule.
                                enum:
                                - all
                                - icmp
                                - tcp
                                - udp
                                type: string
                              remotes:
                                description: |-
                                  remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                  Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                  This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                items:
                                  description: |-
                                    VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                    The type of remote defines the additional remote details where are used for defining the remote.
                                  properties:
                                    address:
                                      description: |2-
                                         address is the address to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                      type: string
                                    cidrSubnetName:
                                      description: |-
                                        cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                      type: string
                                    remoteType:
                                      description: remoteType defines the type of
                                        filter to define for the remote's destination/source.
                                      enum:
                                      - any
                                      - cidr
                                      - address
                                      - sg
                                      type: string
                                    securityGroupName:
                                      description: |-
                                        securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                      type: string
                                  required:
                                  - remoteType
                                  type: object
                                  x-kubernetes-validations:
                                  - message: cidrSubnetName, addresss, and securityGroupName
                                      are not valid for VPCSecurityGroupRuleRemoteTypeAny
                                      remoteType
                                    rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName)
                                      && !has(self.address) && !has(self.securityGroupName))
                                      : true'
                                  - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR
                                      remoteType
                                    rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName)
                                      && !has(self.address) && !has(self.securityGroupName))
                                      : true'
                                  - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP
                                      remoteType
                                    rule: 'self.remoteType == ''address'' ? (has(self.address)
                                      && !has(self.cidrSubnetName) && !has(self.securityGroupName))
                                      : true'
                                  - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG
                                      remoteType
                                    rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName)
                                      && !has(self.cidrSubnetName) && !has(self.address))
                                      : true'
                                type: array
                            required:
                            - protocol
                            - remotes
                            type: object
                            x-kubernetes-validations:
                            - message: icmpCode and icmpType are only supported for
                                VPCSecurityGroupRuleProtocolIcmp protocol
                              rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                && !has(self.icmpType)) : true'
                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                protocol
                              rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                : true'
                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                protocol
                              rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                : true'
                          direction:
                            description: direction defines whether the traffic is
                              inbound or outbound for the Security Group Rule.
                            enum:
                            - inbound
                            - outbound
                            type: string
                          securityGroupID:
                            description: securityGroupID is the ID of the Security
                              Group for the Security Group Rule.
                            type: string
                          source:
                            description: |-
                              source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                              Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                            properties:
                              icmpCode:
                                description: |-
                                  icmpCode is the ICMP code for the Rule.
                                  Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                format: int64
                                type: integer
                              icmpType:
                                description: |-
                                  icmpType is the ICMP type for the Rule.
                                  Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                format: int64
                                type: integer
                              portRange:
                                description: portRange is a range of ports allowed
                                  for the Rule's remote.
                                properties:
                                  maximumPort:
                                    description: maximumPort is the inclusive upper
                                      range of ports.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  minimumPort:
                                    description: minimumPort is the inclusive lower
                                      range of ports.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                                x-kubernetes-validations:
                                - message: maximum port must be greater than or equal
                                    to minimum port
                                  rule: self.maximumPort >= self.minimumPort
                              protocol:
                                description: protocol defines the traffic protocol
                                  used for the Security Group Rule.
                                enum:
                                - all
                                - icmp
                                - tcp
                                - udp
                                type: string
                              remotes:
                                description: |-
                                  remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                  Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                  This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                items:
                                  description: |-
                                    VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                    The type of remote defines the additional remote details where are used for defining the remote.
                                  properties:
                                    address:
                                      description: |2-
                                         address is the address to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                      type: string
                                    cidrSubnetName:
                                      description: |-
                                        cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                      type: string
                                    remoteType:
                                      description: remoteType defines the type of
                                        filter to define for the remote's destination/source.
                                      enum:
                                      - any
                                      - cidr
                                      - address
                                      - sg
                                      type: string
                                    securityGroupName:
                                      description: |-
                                        securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                        Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                      type: string
                                  required:
                                  - remoteType
                                  type: object
                                  x-kubernetes-validations:
                                  - message: cidrSubnetName, addresss, and securityGroupName
                                      are not valid for VPCSecurityGroupRuleRemoteTypeAny
                                      remoteType
                                    rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName)
                                      && !has(self.address) && !has(self.securityGroupName))
                                      : true'
                                  - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR
                                      remoteType
                                    rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName)
                                      && !has(self.address) && !has(self.securityGroupName))
                                      : true'
                                  - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP
                                      remoteType
                                    rule: 'self.remoteType == ''address'' ? (has(self.address)
                                      && !has(self.cidrSubnetName) && !has(self.securityGroupName))
                                      : true'
                                  - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG
                                      remoteType
                                    rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName)
                                      && !has(self.cidrSubnetName) && !has(self.address))
                                      : true'
                                type: array
                            required:
                            - protocol
                            - remotes
                            type: object
                            x-kubernetes-validations:
                            - message: icmpCode and icmpType are only supported for
                                VPCSecurityGroupRuleProtocolIcmp protocol
                              rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                && !has(self.icmpType)) : true'
                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll
                                protocol
                              rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                : true'
                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp
                                protocol
                              rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                : true'
                        required:
                        - action
                        - direction
                        type: object
                        x-kubernetes-validations:
                        - message: both destination and source cannot be provided
                          rule: (has(self.destination) && !has(self.source)) || (!has(self.destination)
                            && has(self.source))
                        - message: source must be set for VPCSecurityGroupRuleDirectionInbound
                            direction
                          rule: 'self.direction == ''inbound'' ? has(self.source)
                            : true'
                        - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound
                            direction
                          rule: 'self.direction == ''inbound'' ? !has(self.destination)
                            : true'
                        - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound
                            direction
                          rule: 'self.direction == ''outbound'' ? has(self.destination)
                            : true'
                        - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound
                            direction
                          rule: 'self.direction == ''outbound'' ? !has(self.source)
                            : true'
                      type: array
                    tags:
                      description: tags are tags to add to the Security Group.
                      items:
                        type: string
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: either an id or name must be specified
                    rule: has(self.id) || has(self.name)
                type: array
              vpcSubnets:
                description: |-
                  vpcSubnets contains information about IBM Cloud VPC Subnet resources.
                  when omitted system will create the subnets in all the zone corresponding to VPC.Region, with name CLUSTER_NAME-vpcsubnet-ZONE_NAME.
                  possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                  when VPCSubnets[].ID is set, its expected that there exist a subnet with ID or else system will give error.
                  when VPCSubnets[].Zone is not set, a random zone is picked from available zones of VPC.Region.
                  when VPCSubnets[].Name is not set, system will set name as CLUSTER_NAME-vpcsubnet-INDEX.
                  if subnet with name VPCSubnets[].Name not found, system will create new subnet in VPCSubnets[].Zone.
                items:
                  description: Subnet describes a subnet.
                  properties:
                    cidr:
                      type: string
                    id:
                      maxLength: 64
                      minLength: 1
                      pattern: ^[-0-9a-z_]+$
                      type: string
                    name:
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    zone:
                      type: string
                  type: object
                type: array
              zone:
                description: |-
                  zone is the name of Power VS zone where the cluster will be created
                  possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                  when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                  1. it is expected to set the zone, not setting will result in webhook error.
                  2. the zone should have PER capabilities, or else system will give error.
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the IBMPowerVSCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              cosInstance:
                description: cosInstance is reference to IBM Cloud COS Instance resource.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              dhcpServer:
                description: dhcpServer is the reference to the Power VS DHCP server.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              loadBalancers:
                additionalProperties:
                  description: VPCLoadBalancerStatus defines the status VPC load balancer.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource
                        is created by the controller.
                      type: boolean
                    hostname:
                      description: hostname is the hostname of load balancer.
                      type: string
                    id:
                      description: id of VPC load balancer.
                      type: string
                    state:
                      description: State is the status of the load balancer.
                      type: string
                  type: object
                description: loadBalancers reference to IBM Cloud VPC Loadbalancer.
                type: object
              network:
                description: networkID is the reference to the Power VS network to
                  use for this cluster.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              ready:
                default: false
                description: ready is true when the provider resource is ready.
                type: boolean
              resourceGroupID:
                description: ResourceGroup is the reference to the Power VS resource
                  group under which the resources will be created.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              serviceInstance:
                description: serviceInstance is the reference to the Power VS service
                  on which the server instance(VM) will be created.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              transitGateway:
                description: transitGateway is reference to IBM Cloud TransitGateway.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                  powerVSConnection:
                    description: powerVSConnection defines the powervs connection
                      status in transit gateway.
                    properties:
                      controllerCreated:
                        default: false
                        description: controllerCreated indicates whether the resource
                          is created by the controller.
                        type: boolean
                      id:
                        description: id represents the id of the resource.
                        type: string
                    type: object
                  vpcConnection:
                    description: vpcConnection defines the vpc connection status in
                      transit gateway.
                    properties:
                      controllerCreated:
                        default: false
                        description: controllerCreated indicates whether the resource
                          is created by the controller.
                        type: boolean
                      id:
                        description: id represents the id of the resource.
                        type: string
                    type: object
                type: object
              v1beta2:
                description: v1beta2 groups all the fields that will be added or modified
                  in IBMPowerVSCluster's status with the V1Beta2 version.
                properties:
                  conditions:
                    description: conditions represents the observations of a DevCluster's
                      current state.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
              vpc:
                description: vpc is reference to IBM Cloud VPC resources.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              vpcSecurityGroups:
                additionalProperties:
                  description: VPCSecurityGroupStatus defines a vpc security group
                    resource status with its id and respective rule's ids.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource
                        is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                    ruleIDs:
                      description: rules contains the id of rules created under the
                        security group
                      items:
                        type: string
                      type: array
                  type: object
                description: vpcSecurityGroups is reference to IBM Cloud VPC security
                  group.
                type: object
              vpcSubnet:
                additionalProperties:
                  description: ResourceReference identifies a resource with id.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource
                        is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                description: vpcSubnet is reference to IBM Cloud VPC subnet.
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
