---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: ibmpowervsmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSMachine
    listKind: IBMPowerVSMachineList
    plural: ibmpowervsmachines
    singular: ibmpowervsmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Machine object to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Time duration since creation of IBMPowerVSMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Cluster infrastructure is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Instance Internal Addresses
      jsonPath: .status.addresses[?(@.type=="InternalIP")].address
      name: Internal-IP
      priority: 1
      type: string
    - description: Instance External Addresses
      jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
      name: External-IP
      priority: 1
      type: string
    - description: PowerVS instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: PowerVS instance health
      jsonPath: .status.health
      name: Health
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
            properties:
              image:
                description: Image is the reference to the Image from which to create
                  the machine instance.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              imageRef:
                description: |-
                  ImageRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Image for a Cluster.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              memory:
                description: Memory is Amount of memory allocated (in GB)
                type: string
              network:
                description: Network is the reference to the Network to use for this
                  instance.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              procType:
                description: 'ProcType is the processor type, e.g: dedicated, shared,
                  capped'
                type: string
              processors:
                description: Processors is Number of processors allocated.
                pattern: ^\d+(\.)?(\d)?(\d)?$
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed.
                minLength: 1
                type: string
              sshKey:
                description: SSHKey is the name of the SSH key pair provided to the
                  vsi for authenticating users.
                type: string
              sysType:
                description: SysType is the System type used to host the vsi.
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
            properties:
              addresses:
                description: Addresses contains the vsi associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the IBMPowerVSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              fault:
                description: Fault will report if any fault messages for the vsi.
                type: string
              health:
                description: Health is the health of the vsi.
                type: string
              instanceID:
                type: string
              instanceState:
                description: InstanceState is the status of the vsi.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              region:
                description: Region specifies the Power VS Service instance region.
                type: string
              zone:
                description: Zone specifies the Power VS Service instance zone.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Machine object to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Time duration since creation of IBMPowerVSMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Cluster infrastructure is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Instance Internal Addresses
      jsonPath: .status.addresses[?(@.type=="InternalIP")].address
      name: Internal-IP
      priority: 1
      type: string
    - description: Instance External Addresses
      jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
      name: External-IP
      priority: 1
      type: string
    - description: PowerVS instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: PowerVS instance health
      jsonPath: .status.health
      name: Health
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
            properties:
              image:
                description: |-
                  Image the reference to the image which is used to create the instance.
                  supported image identifier in IBMPowerVSResourceReference are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              imageRef:
                description: |-
                  ImageRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Image for a Cluster.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              memoryGiB:
                description: |-
                  memoryGiB is the size of a virtual machine's memory, in GiB.
                  maximum value for the MemoryGiB depends on the selected SystemType.
                  when SystemType is set to e880 maximum MemoryGiB value is 7463 GiB.
                  when SystemType is set to e980 maximum MemoryGiB value is 15307 GiB.
                  when SystemType is set to s922 maximum MemoryGiB value is 942 GiB.
                  The minimum memory is 2 GiB.
                  When omitted, this means the user has no opinion and the platform is left to choose a reasonable
                  default, which is subject to change over time. The current default is 2.
                format: int32
                type: integer
              network:
                description: |-
                  Network is the reference to the Network to use for this instance.
                  supported network identifier in IBMPowerVSResourceReference are Name, ID and RegEx and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: |-
                      Regular expression to match resource,
                      In case of multiple resources matches the provided regular expression the first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              processorType:
                description: |-
                  processorType is the VM instance processor type.
                  It must be set to one of the following values: Dedicated, Capped or Shared.
                  Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition’s processor to a physical processor core.
                  Shared: Shared among other clients.
                  Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement.
                  if the processorType is selected as Dedicated, then processors value cannot be fractional.
                  When omitted, this means that the user has no opinion and the platform is left to choose a
                  reasonable default, which is subject to change over time. The current default is Shared.
                enum:
                - Dedicated
                - Shared
                - Capped
                - ""
                type: string
              processors:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  processors is the number of virtual processors in a virtual machine.
                  when the processorType is selected as Dedicated the processors value cannot be fractional.
                  maximum value for the Processors depends on the selected SystemType.
                  when SystemType is set to e880 or e980 maximum Processors value is 143.
                  when SystemType is set to s922 maximum Processors value is 15.
                  minimum value for Processors depends on the selected ProcessorType.
                  when ProcessorType is set as Shared or Capped, The minimum processors is 0.25.
                  when ProcessorType is set as Dedicated, The minimum processors is 1.
                  When omitted, this means that the user has no opinion and the platform is left to choose a
                  reasonable default, which is subject to change over time. The default is set based on the selected ProcessorType.
                  when ProcessorType selected as Dedicated, the default is set to 1.
                  when ProcessorType selected as Shared or Capped, the default is set to 0.25.
                x-kubernetes-int-or-string: true
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed.
                minLength: 1
                type: string
              sshKey:
                description: SSHKey is the name of the SSH key pair provided to the
                  vsi for authenticating users.
                type: string
              systemType:
                description: |-
                  systemType is the System type used to host the instance.
                  systemType determines the number of cores and memory that is available.
                  Few of the supported SystemTypes are s922,e880,e980.
                  e880 systemType available only in Dallas Datacenters.
                  e980 systemType available in Datacenters except Dallas and Washington.
                  When omitted, this means that the user has no opinion and the platform is left to choose a
                  reasonable default, which is subject to change over time. The current default is s922 which is generally available.
                enum:
                - s922
                - e880
                - e980
                - ""
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
            properties:
              addresses:
                description: Addresses contains the vsi associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the IBMPowerVSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              fault:
                description: Fault will report if any fault messages for the vsi.
                type: string
              health:
                description: Health is the health of the vsi.
                type: string
              instanceID:
                type: string
              instanceState:
                description: InstanceState is the status of the vsi.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              region:
                description: Region specifies the Power VS Service instance region.
                type: string
              zone:
                description: Zone specifies the Power VS Service instance zone.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
