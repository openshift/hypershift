
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: hostedcontrolplanes.hypershift.openshift.io
spec:
  group: hypershift.openshift.io
  names:
    categories:
    - cluster-api
    kind: HostedControlPlane
    listKind: HostedControlPlaneList
    plural: hostedcontrolplanes
    shortNames:
    - hcp
    - hcps
    singular: hostedcontrolplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HostedControlPlane defines the desired state of HostedControlPlane
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HostedControlPlaneSpec defines the desired state of HostedControlPlane
            properties:
              apiAdvertiseAddress:
                description: APIAdvertiseAddress is the address at which the APIServer
                  listens inside a worker.
                type: string
              apiPort:
                description: APIPort is the port at which the APIServer listens inside
                  a worker
                format: int32
                type: integer
              auditWebhook:
                description: AuditWebhook contains metadata for configuring an audit
                  webhook endpoint for a cluster to process cluster audit events.
                  It references a secret that contains the webhook information for
                  the audit webhook endpoint. It is a secret because if the endpoint
                  has MTLS the kubeconfig will contain client keys. This is currently
                  only supported in IBM Cloud. The kubeconfig needs to be stored in
                  the secret with a secret key name that corresponds to the constant
                  AuditWebhookKubeconfigKey.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              configuration:
                description: 'Configuration embeds resources that correspond to the
                  openshift configuration API: https://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html'
                properties:
                  configMapRefs:
                    description: ConfigMapRefs holds references to configmaps used
                      in configuration entries so that they can be properly synced
                      by the hypershift operator.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  items:
                    description: Items embeds the configuration resource
                    items:
                      type: object
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                  secretRefs:
                    description: SecretRefs holds references to secrets used in configuration
                      entries so that they can be properly synced by the hypershift
                      operator.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                type: object
              controllerAvailabilityPolicy:
                description: ControllerAvailabilityPolicy specifies whether to run
                  control plane controllers in HA mode Defaults to SingleReplica when
                  not set
                type: string
              dns:
                description: DNSSpec specifies the DNS configuration in the cluster
                properties:
                  baseDomain:
                    description: BaseDomain is the base domain of the cluster.
                    type: string
                  privateZoneID:
                    description: PrivateZoneID is the Hosted Zone ID where all the
                      DNS records that are only available internally to the cluster
                      exist.
                    type: string
                  publicZoneID:
                    description: PublicZoneID is the Hosted Zone ID where all the
                      DNS records that are publicly accessible to the internet exist.
                    type: string
                required:
                - baseDomain
                type: object
              etcd:
                description: Etcd contains metadata about the etcd cluster the hypershift
                  managed Openshift control plane components use to store data.
                properties:
                  managed:
                    description: Managed provides metadata that defines how the hypershift
                      controllers manage the etcd cluster
                    properties:
                      storage:
                        description: Storage configures how etcd data is persisted.
                        properties:
                          persistentVolume:
                            description: PersistentVolume is the configuration for
                              PersistentVolume etcd storage. With this implementation,
                              a PersistentVolume will be allocated for every etcd
                              member (either 1 or 3 depending on the HostedCluster
                              control plane availability configuration).
                            properties:
                              size:
                                anyOf:
                                - type: integer
                                - type: string
                                default: 4Gi
                                description: Size is the minimum size of the data
                                  volume for each etcd member.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              storageClassName:
                                description: "StorageClassName is the StorageClass
                                  of the data volume for each etcd member. \n See
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1."
                                type: string
                            type: object
                          type:
                            description: Type is the kind of persistent storage implementation
                              to use for etcd.
                            enum:
                            - PersistentVolume
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - storage
                    type: object
                  managementType:
                    description: ManagementType defines how the etcd cluster is managed.
                      Unmanaged means the etcd cluster is managed by a system outside
                      the hypershift controllers. Managed means the hypershift controllers
                      manage the provisioning of the etcd cluster and the operations
                      around it
                    enum:
                    - Managed
                    - Unmanaged
                    type: string
                  unmanaged:
                    description: Unmanaged provides metadata that enables the Openshift
                      controllers to connect to the external etcd cluster
                    properties:
                      endpoint:
                        description: Endpoint is the full url to connect to the etcd
                          cluster endpoint. An example is https://etcd-client:2379
                        pattern: ^https://
                        type: string
                      tls:
                        description: TLS defines a reference to a TLS secret that
                          can be used for client MTLS authentication with the etcd
                          cluster
                        properties:
                          clientSecret:
                            description: ClientSecret refers to a secret for client
                              MTLS authentication with the etcd cluster The CA must
                              be stored at secret key etcd-client-ca.crt. The client
                              cert must be stored at secret key etcd-client.crt. The
                              client key must be stored at secret key etcd-client.key.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - clientSecret
                        type: object
                    required:
                    - endpoint
                    - tls
                    type: object
                required:
                - managementType
                type: object
              fips:
                description: FIPS specifies if the nodes for the cluster will be running
                  in FIPS mode
                type: boolean
              imageContentSources:
                description: ImageContentSources lists sources/repositories for the
                  release-image content.
                items:
                  description: ImageContentSource defines a list of sources/repositories
                    that can be used to pull content.
                  properties:
                    mirrors:
                      description: Mirrors is one or more repositories that may also
                        contain the same images.
                      items:
                        type: string
                      type: array
                    source:
                      description: Source is the repository that users refer to, e.g.
                        in image pull specifications.
                      type: string
                  required:
                  - source
                  type: object
                type: array
              infraID:
                type: string
              infrastructureAvailabilityPolicy:
                description: InfrastructureAvailabilityPolicy specifies whether to
                  run infrastructure services that run on the guest cluster nodes
                  in HA mode Defaults to HighlyAvailable when not set
                type: string
              issuerURL:
                type: string
              kubeconfig:
                description: KubeConfig specifies the name and key for the kubeconfig
                  secret
                properties:
                  key:
                    type: string
                  name:
                    type: string
                required:
                - key
                - name
                type: object
              machineCIDR:
                type: string
              networkType:
                description: NetworkType specifies the SDN provider used for cluster
                  networking.
                enum:
                - OpenShiftSDN
                - Calico
                type: string
              platform:
                properties:
                  aws:
                    description: AWS contains AWS-specific settings for the HostedCluster
                    properties:
                      cloudProviderConfig:
                        description: CloudProviderConfig is used to generate the ConfigMap
                          with the cloud config consumed by the Control Plane components.
                        properties:
                          subnet:
                            description: Subnet is the subnet to use for instances
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          vpc:
                            description: VPC specifies the VPC used for the cluster
                            type: string
                          zone:
                            description: Zone is the availability zone where the instances
                              are created
                            type: string
                        required:
                        - vpc
                        type: object
                      endpointAccess:
                        default: Public
                        description: EndpointAccess determines if cluster endpoints
                          are public and/or private
                        enum:
                        - Public
                        - PublicAndPrivate
                        - Private
                        type: string
                      kubeCloudControllerCreds:
                        description: KubeCloudControllerCreds is a reference to a
                          secret containing cloud credentials with permissions matching
                          the Kube cloud controller policy. The secret should have
                          exactly one key, `credentials`, whose value is an AWS credentials
                          file.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      nodePoolManagementCreds:
                        description: NodePoolManagementCreds is a reference to a secret
                          containing cloud credentials with permissions matching the
                          noe pool management policy. The secret should have exactly
                          one key, `credentials`, whose value is an AWS credentials
                          file.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      region:
                        description: Region is the AWS region for the cluster. This
                          is used by CRs that are consumed by OCP Operators. E.g cluster-infrastructure-02-config.yaml
                          and install-config.yaml This is also used by nodePools to
                          fetch the default boot AMI in a given payload.
                        type: string
                      resourceTags:
                        description: resourceTags is a list of additional tags to
                          apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
                          for information on tagging AWS resources. AWS supports a
                          maximum of 50 tags per resource. OpenShift reserves 25 tags
                          for its use, leaving 25 tags available for the user.
                        items:
                          description: AWSResourceTag is a tag to apply to AWS resources
                            created for the cluster.
                          properties:
                            key:
                              description: key is the key of the tag
                              maxLength: 128
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                            value:
                              description: value is the value of the tag. Some AWS
                                service do not support empty values. Since tags are
                                added to resources in many services, the length of
                                the tag value must meet the requirements of all services.
                              maxLength: 256
                              minLength: 1
                              pattern: ^[0-9A-Za-z_.:/=+-@]+$
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        maxItems: 25
                        type: array
                      roles:
                        items:
                          properties:
                            arn:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - arn
                          - name
                          - namespace
                          type: object
                        type: array
                      serviceEndpoints:
                        description: ServiceEndpoints list contains custom endpoints
                          which will override default service endpoint of AWS Services.
                          There must be only one ServiceEndpoint for a service.
                        items:
                          description: AWSServiceEndpoint stores the configuration
                            for services to override existing defaults of AWS Services.
                          properties:
                            name:
                              description: Name is the name of the AWS service. This
                                must be provided and cannot be empty.
                              type: string
                            url:
                              description: URL is fully qualified URI with scheme
                                https, that overrides the default generated endpoint
                                for a client. This must be provided and cannot be
                                empty.
                              pattern: ^https://
                              type: string
                          required:
                          - name
                          - url
                          type: object
                        type: array
                    required:
                    - kubeCloudControllerCreds
                    - nodePoolManagementCreds
                    - region
                    type: object
                  type:
                    description: Type is the underlying infrastructure provider for
                      the cluster.
                    enum:
                    - AWS
                    - None
                    - IBMCloud
                    type: string
                required:
                - type
                type: object
              podCIDR:
                type: string
              pullSecret:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              releaseImage:
                type: string
              secretEncryption:
                description: SecretEncryption contains metadata about the kubernetes
                  secret encryption strategy being used for the cluster when applicable.
                properties:
                  aescbc:
                    description: AESCBC defines metadata about the AESCBC secret encryption
                      strategy
                    properties:
                      activeKey:
                        description: ActiveKey defines the active key used to encrypt
                          new secrets
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      backupKey:
                        description: BackupKey defines the old key during the rotation
                          process so previously created secrets can continue to be
                          decrypted until they are all re-encrypted with the active
                          key.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - activeKey
                    type: object
                  kms:
                    description: KMS defines metadata about the kms secret encryption
                      strategy
                    properties:
                      aws:
                        description: AWS defines metadata about the configuration
                          of the AWS KMS Secret Encryption provider
                        properties:
                          activeKey:
                            description: ActiveKey defines the active key used to
                              encrypt new secrets
                            properties:
                              arn:
                                description: ARN is the Amazon Resource Name for the
                                  encryption key
                                pattern: '^arn:'
                                type: string
                            required:
                            - arn
                            type: object
                          auth:
                            description: Auth defines metadata about the management
                              of credentials used to interact with AWS KMS
                            properties:
                              credentials:
                                description: Credentials contains the name of the
                                  secret that holds the aws credentials that can be
                                  used to make the necessary KMS calls. It should
                                  at key AWSCredentialsFileSecretKey contain the aws
                                  credentials file that can be used to configure AWS
                                  SDKs
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                            required:
                            - credentials
                            type: object
                          backupKey:
                            description: BackupKey defines the old key during the
                              rotation process so previously created secrets can continue
                              to be decrypted until they are all re-encrypted with
                              the active key.
                            properties:
                              arn:
                                description: ARN is the Amazon Resource Name for the
                                  encryption key
                                pattern: '^arn:'
                                type: string
                            required:
                            - arn
                            type: object
                          region:
                            description: Region contains the AWS region
                            type: string
                        required:
                        - activeKey
                        - auth
                        - region
                        type: object
                      ibmcloud:
                        description: IBMCloud defines metadata for the IBM Cloud KMS
                          encryption strategy
                        properties:
                          auth:
                            description: Auth defines metadata for how authentication
                              is done with IBM Cloud KMS
                            properties:
                              managed:
                                description: Managed defines metadata around the service
                                  to service authentication strategy for the IBM Cloud
                                  KMS system (all provider managed).
                                type: object
                              type:
                                description: Type defines the IBM Cloud KMS authentication
                                  strategy
                                enum:
                                - Managed
                                - Unmanaged
                                type: string
                              unmanaged:
                                description: Unmanaged defines the auth metadata the
                                  customer provides to interact with IBM Cloud KMS
                                properties:
                                  credentials:
                                    description: Credentials should reference a secret
                                      with a key field of IBMCloudIAMAPIKeySecretKey
                                      that contains a apikey to call IBM Cloud KMS
                                      APIs
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    type: object
                                required:
                                - credentials
                                type: object
                            required:
                            - type
                            type: object
                          keyList:
                            description: KeyList defines the list of keys used for
                              data encryption
                            items:
                              description: IBMCloudKMSKeyEntry defines metadata for
                                an IBM Cloud KMS encryption key
                              properties:
                                correlationID:
                                  description: CorrelationID is an identifier used
                                    to track all api call usage from hypershift
                                  type: string
                                crkID:
                                  description: CRKID is the customer rook key id
                                  type: string
                                instanceID:
                                  description: InstanceID is the id for the key protect
                                    instance
                                  type: string
                                keyVersion:
                                  description: KeyVersion is a unique number associated
                                    with the key. The number increments whenever a
                                    new key is enabled for data encryption.
                                  type: integer
                                url:
                                  description: URL is the url to call key protect
                                    apis over
                                  pattern: ^https://
                                  type: string
                              required:
                              - correlationID
                              - crkID
                              - instanceID
                              - keyVersion
                              - url
                              type: object
                            type: array
                          region:
                            description: Region is the IBM Cloud region
                            type: string
                        required:
                        - auth
                        - keyList
                        - region
                        type: object
                      provider:
                        description: Provider defines the KMS provider
                        enum:
                        - IBMCloud
                        - AWS
                        type: string
                    required:
                    - provider
                    type: object
                  type:
                    description: Type defines the type of kube secret encryption being
                      used
                    enum:
                    - kms
                    - aescbc
                    type: string
                required:
                - type
                type: object
              serviceCIDR:
                type: string
              services:
                description: Services defines metadata about how control plane services
                  are published in the management cluster.
                items:
                  description: ServicePublishingStrategyMapping defines the service
                    being published and  metadata about the publishing strategy.
                  properties:
                    service:
                      description: Service identifies the type of service being published
                      enum:
                      - APIServer
                      - OAuthServer
                      - OIDC
                      - Konnectivity
                      - Ignition
                      type: string
                    servicePublishingStrategy:
                      description: ServicePublishingStrategy defines metadata around
                        how a service is published
                      properties:
                        nodePort:
                          description: NodePort is used to define extra metadata for
                            the NodePort publishing strategy.
                          properties:
                            address:
                              description: Address is the host/ip that the nodePort
                                service is exposed over
                              type: string
                            port:
                              description: Port is the nodePort of the service. If
                                <=0 the nodePort is dynamically assigned when the
                                service is created
                              format: int32
                              type: integer
                          required:
                          - address
                          type: object
                        type:
                          description: Type defines the publishing strategy used for
                            the service.
                          enum:
                          - LoadBalancer
                          - NodePort
                          - Route
                          - None
                          - S3
                          type: string
                      required:
                      - type
                      type: object
                  required:
                  - service
                  - servicePublishingStrategy
                  type: object
                type: array
              sshKey:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            required:
            - dns
            - etcd
            - infraID
            - issuerURL
            - machineCIDR
            - networkType
            - platform
            - podCIDR
            - pullSecret
            - releaseImage
            - serviceCIDR
            - services
            - sshKey
            type: object
          status:
            description: HostedControlPlaneStatus defines the observed state of HostedControlPlane
            properties:
              conditions:
                description: 'Condition contains details for one aspect of the current
                  state of the HostedControlPlane. Current condition types are: "Available"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint contains the endpoint information
                  by which external clients can access the control plane.  This is
                  populated after the infrastructure is ready.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              externalManagedControlPlane:
                default: true
                description: ExternalManagedControlPlane indicates to cluster-api
                  that the control plane is managed by an external service. https://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468
                type: boolean
              initialized:
                default: false
                description: Initialized denotes whether or not the control plane
                  has provided a kubeadm-config. Once this condition is marked true,
                  its value is never changed. See the Ready condition for an indication
                  of the current readiness of the cluster's control plane. This satisfies
                  CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252
                type: boolean
              kubeConfig:
                description: KubeConfig is a reference to the secret containing the
                  default kubeconfig for this control plane.
                properties:
                  key:
                    type: string
                  name:
                    type: string
                required:
                - key
                - name
                type: object
              lastReleaseImageTransitionTime:
                description: lastReleaseImageTransitionTime is the time of the last
                  update to the current releaseImage property.
                format: date-time
                type: string
              ready:
                default: false
                description: Ready denotes that the HostedControlPlane API Server
                  is ready to receive requests This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230
                type: boolean
              releaseImage:
                description: ReleaseImage is the release image applied to the hosted
                  control plane.
                type: string
              version:
                description: Version is the semantic version of the release applied
                  by the hosted control plane operator
                type: string
            required:
            - conditions
            - initialized
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
