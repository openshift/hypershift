
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: awsendpointservices.hypershift.openshift.io
spec:
  group: hypershift.openshift.io
  names:
    kind: AWSEndpointService
    listKind: AWSEndpointServiceList
    plural: awsendpointservices
    singular: awsendpointservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSEndpointService specifies a request for an Endpoint Service
          in AWS
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSEndpointServiceSpec defines the desired state of AWSEndpointService
            properties:
              networkLoadBalancerName:
                description: The name of the NLB for which an Endpoint Service should
                  be configured
                type: string
              resourceTags:
                description: Tags to apply to the EndpointService
                items:
                  description: AWSResourceTag is a tag to apply to AWS resources created
                    for the cluster.
                  properties:
                    key:
                      description: Key is the key of the tag.
                      maxLength: 128
                      minLength: 1
                      pattern: ^[0-9A-Za-z_.:/=+-@]+$
                      type: string
                    value:
                      description: "Value is the value of the tag. \n Some AWS service
                        do not support empty values. Since tags are added to resources
                        in many services, the length of the tag value must meet the
                        requirements of all services."
                      maxLength: 256
                      minLength: 1
                      pattern: ^[0-9A-Za-z_.:/=+-@]+$
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              subnetIDs:
                description: SubnetIDs is the list of subnet IDs to which guest nodes
                  can attach
                items:
                  type: string
                type: array
            type: object
          status:
            description: AWSEndpointServiceStatus defines the observed state of AWSEndpointService
            properties:
              conditions:
                description: "Conditions contains details for the current state of
                  the Endpoint Service request If there is an error processing the
                  request e.g. the NLB doesn't exist, then the Available condition
                  will be false, reason AWSErrorReason, and the error reported in
                  the message. \n Current condition types are: \"Available\""
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dnsName:
                description: DNSName is the name for the record created in the hypershift
                  private zone
                type: string
              dnsZoneID:
                description: DNSZoneID is ID for the hypershift private zone
                type: string
              endpointID:
                description: EndpointID is the ID of the Endpoint created in the guest
                  VPC
                type: string
              endpointServiceName:
                description: EndpointServiceName is the name of the Endpoint Service
                  created in the management VPC
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
