apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: clusters
spec: {}
status: {}
---
apiVersion: v1
data:
  .dockerconfigjson: ZmFrZQ==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/safe-to-delete-with-cluster: "true"
  name: cesar-pull-secret
  namespace: clusters
---
apiVersion: hypershift.openshift.io/v1beta1
kind: HostedCluster
metadata:
  annotations:
    hypershift.openshift.io/cleanup-cloud-resources: "true"
    hypershift.openshift.io/control-plane-operator-image: fakeCPOImage
  creationTimestamp: null
  name: cesar
  namespace: clusters
spec:
  autoscaling: {}
  configuration:
    node: null
    proxy:
      httpProxy: fakeProxyAddr
      httpsProxy: fakeProxyAddr
      trustedCA:
        name: ""
  controllerAvailabilityPolicy: SingleReplica
  dns:
    baseDomain: fakeBaseDomain
    baseDomainPrefix: fakeBaseDomainPrefix
    privateZoneID: fakePrivateZoneID
    publicZoneID: fakePublicZoneID
  etcd:
    managed:
      storage:
        persistentVolume:
          size: 8Gi
          storageClassName: gp3-csi
        type: PersistentVolume
    managementType: Managed
  fips: false
  infraID: fakeInfraID
  issuerURL: fakeIssuerURL
  networking:
    clusterNetwork:
    - cidr: 10.132.0.0/14
    machineNetwork:
    - cidr: 192.0.2.0/24
    networkType: OVNKubernetes
    serviceNetwork:
    - cidr: 172.31.0.0/16
  olmCatalogPlacement: management
  platform:
    aws:
      cloudProviderConfig:
        subnet:
          id: fakeSubnetID
        vpc: fakeVPCID
        zone: fakeName
      endpointAccess: Public
      multiArch: false
      region: us-east-2
      rolesRef:
        controlPlaneOperatorARN: fakeControlPlaneOperatorARN
        imageRegistryARN: fakeImageRegistryARN
        ingressARN: fakeIngressARN
        kubeCloudControllerARN: fakeKubeCloudControllerARN
        networkARN: fakeNetworkARN
        nodePoolManagementARN: fakeNodePoolManagementARN
        storageARN: fakeStorageARN
    type: AWS
  pullSecret:
    name: cesar-pull-secret
  release:
    image: fakeReleaseImage
  secretEncryption:
    kms:
      aws:
        activeKey:
          arn: fakeKMSKeyARN
        auth:
          awsKms: fakeKMSProviderRoleARN
        region: us-east-2
      provider: AWS
    type: kms
  services:
  - service: APIServer
    servicePublishingStrategy:
      type: LoadBalancer
  - service: Ignition
    servicePublishingStrategy:
      type: Route
  - service: Konnectivity
    servicePublishingStrategy:
      type: Route
  - service: OAuthServer
    servicePublishingStrategy:
      type: Route
  sshKey: {}
status:
  controlPlaneEndpoint:
    host: ""
    port: 0
---
apiVersion: hypershift.openshift.io/v1beta1
kind: NodePool
metadata:
  creationTimestamp: null
  name: cesar-fakeName
  namespace: clusters
spec:
  arch: amd64
  clusterName: cesar
  management:
    autoRepair: true
    upgradeType: Replace
  nodeDrainTimeout: 0s
  nodeVolumeDetachTimeout: 0s
  platform:
    aws:
      instanceProfile: fakeProfileName
      instanceType: m5.large
      rootVolume:
        size: 120
        type: gp3
      subnet:
        id: fakeSubnetID
    type: AWS
  release:
    image: fakeReleaseImage
  replicas: 2
status:
  replicas: 0
---
