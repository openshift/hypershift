// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersGetReader is a Reader for the V1NetworkPeersGet structure.
type V1NetworkPeersGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/network-peers] v1.networkPeers.get", response, response.Code())
	}
}

// NewV1NetworkPeersGetOK creates a V1NetworkPeersGetOK with default headers values
func NewV1NetworkPeersGetOK() *V1NetworkPeersGetOK {
	return &V1NetworkPeersGetOK{}
}

/*
V1NetworkPeersGetOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersGetOK struct {
	Payload *models.NetworkPeers
}

// IsSuccess returns true when this v1 network peers get o k response has a 2xx status code
func (o *V1NetworkPeersGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers get o k response has a 3xx status code
func (o *V1NetworkPeersGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get o k response has a 4xx status code
func (o *V1NetworkPeersGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers get o k response has a 5xx status code
func (o *V1NetworkPeersGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers get o k response a status code equal to that given
func (o *V1NetworkPeersGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers get o k response
func (o *V1NetworkPeersGetOK) Code() int {
	return 200
}

func (o *V1NetworkPeersGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetOK %s", 200, payload)
}

func (o *V1NetworkPeersGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetOK %s", 200, payload)
}

func (o *V1NetworkPeersGetOK) GetPayload() *models.NetworkPeers {
	return o.Payload
}

func (o *V1NetworkPeersGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPeers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetBadRequest creates a V1NetworkPeersGetBadRequest with default headers values
func NewV1NetworkPeersGetBadRequest() *V1NetworkPeersGetBadRequest {
	return &V1NetworkPeersGetBadRequest{}
}

/*
V1NetworkPeersGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersGetBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers get bad request response has a 2xx status code
func (o *V1NetworkPeersGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers get bad request response has a 3xx status code
func (o *V1NetworkPeersGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get bad request response has a 4xx status code
func (o *V1NetworkPeersGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers get bad request response has a 5xx status code
func (o *V1NetworkPeersGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers get bad request response a status code equal to that given
func (o *V1NetworkPeersGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers get bad request response
func (o *V1NetworkPeersGetBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersGetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersGetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersGetBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetUnauthorized creates a V1NetworkPeersGetUnauthorized with default headers values
func NewV1NetworkPeersGetUnauthorized() *V1NetworkPeersGetUnauthorized {
	return &V1NetworkPeersGetUnauthorized{}
}

/*
V1NetworkPeersGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersGetUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers get unauthorized response has a 2xx status code
func (o *V1NetworkPeersGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers get unauthorized response has a 3xx status code
func (o *V1NetworkPeersGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get unauthorized response has a 4xx status code
func (o *V1NetworkPeersGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers get unauthorized response has a 5xx status code
func (o *V1NetworkPeersGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers get unauthorized response a status code equal to that given
func (o *V1NetworkPeersGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers get unauthorized response
func (o *V1NetworkPeersGetUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersGetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersGetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersGetUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetForbidden creates a V1NetworkPeersGetForbidden with default headers values
func NewV1NetworkPeersGetForbidden() *V1NetworkPeersGetForbidden {
	return &V1NetworkPeersGetForbidden{}
}

/*
V1NetworkPeersGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersGetForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers get forbidden response has a 2xx status code
func (o *V1NetworkPeersGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers get forbidden response has a 3xx status code
func (o *V1NetworkPeersGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get forbidden response has a 4xx status code
func (o *V1NetworkPeersGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers get forbidden response has a 5xx status code
func (o *V1NetworkPeersGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers get forbidden response a status code equal to that given
func (o *V1NetworkPeersGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers get forbidden response
func (o *V1NetworkPeersGetForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersGetForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetForbidden %s", 403, payload)
}

func (o *V1NetworkPeersGetForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetForbidden %s", 403, payload)
}

func (o *V1NetworkPeersGetForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetNotFound creates a V1NetworkPeersGetNotFound with default headers values
func NewV1NetworkPeersGetNotFound() *V1NetworkPeersGetNotFound {
	return &V1NetworkPeersGetNotFound{}
}

/*
V1NetworkPeersGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersGetNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers get not found response has a 2xx status code
func (o *V1NetworkPeersGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers get not found response has a 3xx status code
func (o *V1NetworkPeersGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get not found response has a 4xx status code
func (o *V1NetworkPeersGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers get not found response has a 5xx status code
func (o *V1NetworkPeersGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers get not found response a status code equal to that given
func (o *V1NetworkPeersGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers get not found response
func (o *V1NetworkPeersGetNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersGetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetNotFound %s", 404, payload)
}

func (o *V1NetworkPeersGetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetNotFound %s", 404, payload)
}

func (o *V1NetworkPeersGetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetInternalServerError creates a V1NetworkPeersGetInternalServerError with default headers values
func NewV1NetworkPeersGetInternalServerError() *V1NetworkPeersGetInternalServerError {
	return &V1NetworkPeersGetInternalServerError{}
}

/*
V1NetworkPeersGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersGetInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers get internal server error response has a 2xx status code
func (o *V1NetworkPeersGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers get internal server error response has a 3xx status code
func (o *V1NetworkPeersGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers get internal server error response has a 4xx status code
func (o *V1NetworkPeersGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers get internal server error response has a 5xx status code
func (o *V1NetworkPeersGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers get internal server error response a status code equal to that given
func (o *V1NetworkPeersGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers get internal server error response
func (o *V1NetworkPeersGetInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersGetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersGetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersGetInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
