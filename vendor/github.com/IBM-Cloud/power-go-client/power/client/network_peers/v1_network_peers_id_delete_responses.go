// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersIDDeleteReader is a Reader for the V1NetworkPeersIDDelete structure.
type V1NetworkPeersIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersIDDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersIDDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersIDDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/network-peers/{network_peer_id}] v1.networkPeers.id.delete", response, response.Code())
	}
}

// NewV1NetworkPeersIDDeleteOK creates a V1NetworkPeersIDDeleteOK with default headers values
func NewV1NetworkPeersIDDeleteOK() *V1NetworkPeersIDDeleteOK {
	return &V1NetworkPeersIDDeleteOK{}
}

/*
V1NetworkPeersIDDeleteOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersIDDeleteOK struct {
	Payload models.Object
}

// IsSuccess returns true when this v1 network peers Id delete o k response has a 2xx status code
func (o *V1NetworkPeersIDDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers Id delete o k response has a 3xx status code
func (o *V1NetworkPeersIDDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete o k response has a 4xx status code
func (o *V1NetworkPeersIDDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id delete o k response has a 5xx status code
func (o *V1NetworkPeersIDDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete o k response a status code equal to that given
func (o *V1NetworkPeersIDDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers Id delete o k response
func (o *V1NetworkPeersIDDeleteOK) Code() int {
	return 200
}

func (o *V1NetworkPeersIDDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkPeersIDDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkPeersIDDeleteOK) GetPayload() models.Object {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteBadRequest creates a V1NetworkPeersIDDeleteBadRequest with default headers values
func NewV1NetworkPeersIDDeleteBadRequest() *V1NetworkPeersIDDeleteBadRequest {
	return &V1NetworkPeersIDDeleteBadRequest{}
}

/*
V1NetworkPeersIDDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersIDDeleteBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete bad request response has a 2xx status code
func (o *V1NetworkPeersIDDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete bad request response has a 3xx status code
func (o *V1NetworkPeersIDDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete bad request response has a 4xx status code
func (o *V1NetworkPeersIDDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id delete bad request response has a 5xx status code
func (o *V1NetworkPeersIDDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete bad request response a status code equal to that given
func (o *V1NetworkPeersIDDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers Id delete bad request response
func (o *V1NetworkPeersIDDeleteBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersIDDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDDeleteBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteUnauthorized creates a V1NetworkPeersIDDeleteUnauthorized with default headers values
func NewV1NetworkPeersIDDeleteUnauthorized() *V1NetworkPeersIDDeleteUnauthorized {
	return &V1NetworkPeersIDDeleteUnauthorized{}
}

/*
V1NetworkPeersIDDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersIDDeleteUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete unauthorized response has a 2xx status code
func (o *V1NetworkPeersIDDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete unauthorized response has a 3xx status code
func (o *V1NetworkPeersIDDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete unauthorized response has a 4xx status code
func (o *V1NetworkPeersIDDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id delete unauthorized response has a 5xx status code
func (o *V1NetworkPeersIDDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete unauthorized response a status code equal to that given
func (o *V1NetworkPeersIDDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers Id delete unauthorized response
func (o *V1NetworkPeersIDDeleteUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersIDDeleteUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDDeleteUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDDeleteUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteForbidden creates a V1NetworkPeersIDDeleteForbidden with default headers values
func NewV1NetworkPeersIDDeleteForbidden() *V1NetworkPeersIDDeleteForbidden {
	return &V1NetworkPeersIDDeleteForbidden{}
}

/*
V1NetworkPeersIDDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersIDDeleteForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete forbidden response has a 2xx status code
func (o *V1NetworkPeersIDDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete forbidden response has a 3xx status code
func (o *V1NetworkPeersIDDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete forbidden response has a 4xx status code
func (o *V1NetworkPeersIDDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id delete forbidden response has a 5xx status code
func (o *V1NetworkPeersIDDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete forbidden response a status code equal to that given
func (o *V1NetworkPeersIDDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers Id delete forbidden response
func (o *V1NetworkPeersIDDeleteForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersIDDeleteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDDeleteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDDeleteForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteNotFound creates a V1NetworkPeersIDDeleteNotFound with default headers values
func NewV1NetworkPeersIDDeleteNotFound() *V1NetworkPeersIDDeleteNotFound {
	return &V1NetworkPeersIDDeleteNotFound{}
}

/*
V1NetworkPeersIDDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersIDDeleteNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete not found response has a 2xx status code
func (o *V1NetworkPeersIDDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete not found response has a 3xx status code
func (o *V1NetworkPeersIDDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete not found response has a 4xx status code
func (o *V1NetworkPeersIDDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id delete not found response has a 5xx status code
func (o *V1NetworkPeersIDDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete not found response a status code equal to that given
func (o *V1NetworkPeersIDDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers Id delete not found response
func (o *V1NetworkPeersIDDeleteNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersIDDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDDeleteNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteConflict creates a V1NetworkPeersIDDeleteConflict with default headers values
func NewV1NetworkPeersIDDeleteConflict() *V1NetworkPeersIDDeleteConflict {
	return &V1NetworkPeersIDDeleteConflict{}
}

/*
V1NetworkPeersIDDeleteConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersIDDeleteConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete conflict response has a 2xx status code
func (o *V1NetworkPeersIDDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete conflict response has a 3xx status code
func (o *V1NetworkPeersIDDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete conflict response has a 4xx status code
func (o *V1NetworkPeersIDDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id delete conflict response has a 5xx status code
func (o *V1NetworkPeersIDDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id delete conflict response a status code equal to that given
func (o *V1NetworkPeersIDDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers Id delete conflict response
func (o *V1NetworkPeersIDDeleteConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersIDDeleteConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDDeleteConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDDeleteConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDDeleteInternalServerError creates a V1NetworkPeersIDDeleteInternalServerError with default headers values
func NewV1NetworkPeersIDDeleteInternalServerError() *V1NetworkPeersIDDeleteInternalServerError {
	return &V1NetworkPeersIDDeleteInternalServerError{}
}

/*
V1NetworkPeersIDDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersIDDeleteInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id delete internal server error response has a 2xx status code
func (o *V1NetworkPeersIDDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id delete internal server error response has a 3xx status code
func (o *V1NetworkPeersIDDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id delete internal server error response has a 4xx status code
func (o *V1NetworkPeersIDDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id delete internal server error response has a 5xx status code
func (o *V1NetworkPeersIDDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers Id delete internal server error response a status code equal to that given
func (o *V1NetworkPeersIDDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers Id delete internal server error response
func (o *V1NetworkPeersIDDeleteInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersIDDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDDeleteInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
