// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersRouteFiltersPostReader is a Reader for the V1NetworkPeersRouteFiltersPost structure.
type V1NetworkPeersRouteFiltersPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersRouteFiltersPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersRouteFiltersPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersRouteFiltersPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersRouteFiltersPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersRouteFiltersPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersRouteFiltersPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersRouteFiltersPostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersRouteFiltersPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/network-peers/{network_peer_id}/route-filters] v1.networkPeers.routeFilters.post", response, response.Code())
	}
}

// NewV1NetworkPeersRouteFiltersPostOK creates a V1NetworkPeersRouteFiltersPostOK with default headers values
func NewV1NetworkPeersRouteFiltersPostOK() *V1NetworkPeersRouteFiltersPostOK {
	return &V1NetworkPeersRouteFiltersPostOK{}
}

/*
V1NetworkPeersRouteFiltersPostOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersRouteFiltersPostOK struct {
	Payload *models.RouteFilter
}

// IsSuccess returns true when this v1 network peers route filters post o k response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers route filters post o k response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post o k response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers route filters post o k response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post o k response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers route filters post o k response
func (o *V1NetworkPeersRouteFiltersPostOK) Code() int {
	return 200
}

func (o *V1NetworkPeersRouteFiltersPostOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostOK %s", 200, payload)
}

func (o *V1NetworkPeersRouteFiltersPostOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostOK %s", 200, payload)
}

func (o *V1NetworkPeersRouteFiltersPostOK) GetPayload() *models.RouteFilter {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostBadRequest creates a V1NetworkPeersRouteFiltersPostBadRequest with default headers values
func NewV1NetworkPeersRouteFiltersPostBadRequest() *V1NetworkPeersRouteFiltersPostBadRequest {
	return &V1NetworkPeersRouteFiltersPostBadRequest{}
}

/*
V1NetworkPeersRouteFiltersPostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersRouteFiltersPostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post bad request response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post bad request response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post bad request response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filters post bad request response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post bad request response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers route filters post bad request response
func (o *V1NetworkPeersRouteFiltersPostBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersRouteFiltersPostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersRouteFiltersPostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersRouteFiltersPostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostUnauthorized creates a V1NetworkPeersRouteFiltersPostUnauthorized with default headers values
func NewV1NetworkPeersRouteFiltersPostUnauthorized() *V1NetworkPeersRouteFiltersPostUnauthorized {
	return &V1NetworkPeersRouteFiltersPostUnauthorized{}
}

/*
V1NetworkPeersRouteFiltersPostUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersRouteFiltersPostUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post unauthorized response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post unauthorized response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post unauthorized response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filters post unauthorized response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post unauthorized response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers route filters post unauthorized response
func (o *V1NetworkPeersRouteFiltersPostUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersRouteFiltersPostUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersRouteFiltersPostUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersRouteFiltersPostUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostForbidden creates a V1NetworkPeersRouteFiltersPostForbidden with default headers values
func NewV1NetworkPeersRouteFiltersPostForbidden() *V1NetworkPeersRouteFiltersPostForbidden {
	return &V1NetworkPeersRouteFiltersPostForbidden{}
}

/*
V1NetworkPeersRouteFiltersPostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersRouteFiltersPostForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post forbidden response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post forbidden response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post forbidden response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filters post forbidden response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post forbidden response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers route filters post forbidden response
func (o *V1NetworkPeersRouteFiltersPostForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersRouteFiltersPostForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostForbidden %s", 403, payload)
}

func (o *V1NetworkPeersRouteFiltersPostForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostForbidden %s", 403, payload)
}

func (o *V1NetworkPeersRouteFiltersPostForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostNotFound creates a V1NetworkPeersRouteFiltersPostNotFound with default headers values
func NewV1NetworkPeersRouteFiltersPostNotFound() *V1NetworkPeersRouteFiltersPostNotFound {
	return &V1NetworkPeersRouteFiltersPostNotFound{}
}

/*
V1NetworkPeersRouteFiltersPostNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersRouteFiltersPostNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post not found response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post not found response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post not found response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filters post not found response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post not found response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers route filters post not found response
func (o *V1NetworkPeersRouteFiltersPostNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersRouteFiltersPostNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostNotFound %s", 404, payload)
}

func (o *V1NetworkPeersRouteFiltersPostNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostNotFound %s", 404, payload)
}

func (o *V1NetworkPeersRouteFiltersPostNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostConflict creates a V1NetworkPeersRouteFiltersPostConflict with default headers values
func NewV1NetworkPeersRouteFiltersPostConflict() *V1NetworkPeersRouteFiltersPostConflict {
	return &V1NetworkPeersRouteFiltersPostConflict{}
}

/*
V1NetworkPeersRouteFiltersPostConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersRouteFiltersPostConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post conflict response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post conflict response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post conflict response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filters post conflict response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filters post conflict response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers route filters post conflict response
func (o *V1NetworkPeersRouteFiltersPostConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersRouteFiltersPostConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostConflict %s", 409, payload)
}

func (o *V1NetworkPeersRouteFiltersPostConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostConflict %s", 409, payload)
}

func (o *V1NetworkPeersRouteFiltersPostConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFiltersPostInternalServerError creates a V1NetworkPeersRouteFiltersPostInternalServerError with default headers values
func NewV1NetworkPeersRouteFiltersPostInternalServerError() *V1NetworkPeersRouteFiltersPostInternalServerError {
	return &V1NetworkPeersRouteFiltersPostInternalServerError{}
}

/*
V1NetworkPeersRouteFiltersPostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersRouteFiltersPostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filters post internal server error response has a 2xx status code
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filters post internal server error response has a 3xx status code
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filters post internal server error response has a 4xx status code
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers route filters post internal server error response has a 5xx status code
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers route filters post internal server error response a status code equal to that given
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers route filters post internal server error response
func (o *V1NetworkPeersRouteFiltersPostInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersRouteFiltersPostInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersRouteFiltersPostInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers/{network_peer_id}/route-filters][%d] v1NetworkPeersRouteFiltersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersRouteFiltersPostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFiltersPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
