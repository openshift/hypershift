// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersIDPutReader is a Reader for the V1NetworkPeersIDPut structure.
type V1NetworkPeersIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersIDPutConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersIDPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/network-peers/{network_peer_id}] v1.networkPeers.id.put", response, response.Code())
	}
}

// NewV1NetworkPeersIDPutOK creates a V1NetworkPeersIDPutOK with default headers values
func NewV1NetworkPeersIDPutOK() *V1NetworkPeersIDPutOK {
	return &V1NetworkPeersIDPutOK{}
}

/*
V1NetworkPeersIDPutOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersIDPutOK struct {
	Payload *models.NetworkPeer
}

// IsSuccess returns true when this v1 network peers Id put o k response has a 2xx status code
func (o *V1NetworkPeersIDPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers Id put o k response has a 3xx status code
func (o *V1NetworkPeersIDPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put o k response has a 4xx status code
func (o *V1NetworkPeersIDPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id put o k response has a 5xx status code
func (o *V1NetworkPeersIDPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put o k response a status code equal to that given
func (o *V1NetworkPeersIDPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers Id put o k response
func (o *V1NetworkPeersIDPutOK) Code() int {
	return 200
}

func (o *V1NetworkPeersIDPutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutOK %s", 200, payload)
}

func (o *V1NetworkPeersIDPutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutOK %s", 200, payload)
}

func (o *V1NetworkPeersIDPutOK) GetPayload() *models.NetworkPeer {
	return o.Payload
}

func (o *V1NetworkPeersIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPeer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutBadRequest creates a V1NetworkPeersIDPutBadRequest with default headers values
func NewV1NetworkPeersIDPutBadRequest() *V1NetworkPeersIDPutBadRequest {
	return &V1NetworkPeersIDPutBadRequest{}
}

/*
V1NetworkPeersIDPutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersIDPutBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put bad request response has a 2xx status code
func (o *V1NetworkPeersIDPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put bad request response has a 3xx status code
func (o *V1NetworkPeersIDPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put bad request response has a 4xx status code
func (o *V1NetworkPeersIDPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id put bad request response has a 5xx status code
func (o *V1NetworkPeersIDPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put bad request response a status code equal to that given
func (o *V1NetworkPeersIDPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers Id put bad request response
func (o *V1NetworkPeersIDPutBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersIDPutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDPutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDPutBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutUnauthorized creates a V1NetworkPeersIDPutUnauthorized with default headers values
func NewV1NetworkPeersIDPutUnauthorized() *V1NetworkPeersIDPutUnauthorized {
	return &V1NetworkPeersIDPutUnauthorized{}
}

/*
V1NetworkPeersIDPutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersIDPutUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put unauthorized response has a 2xx status code
func (o *V1NetworkPeersIDPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put unauthorized response has a 3xx status code
func (o *V1NetworkPeersIDPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put unauthorized response has a 4xx status code
func (o *V1NetworkPeersIDPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id put unauthorized response has a 5xx status code
func (o *V1NetworkPeersIDPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put unauthorized response a status code equal to that given
func (o *V1NetworkPeersIDPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers Id put unauthorized response
func (o *V1NetworkPeersIDPutUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersIDPutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDPutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDPutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutForbidden creates a V1NetworkPeersIDPutForbidden with default headers values
func NewV1NetworkPeersIDPutForbidden() *V1NetworkPeersIDPutForbidden {
	return &V1NetworkPeersIDPutForbidden{}
}

/*
V1NetworkPeersIDPutForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersIDPutForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put forbidden response has a 2xx status code
func (o *V1NetworkPeersIDPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put forbidden response has a 3xx status code
func (o *V1NetworkPeersIDPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put forbidden response has a 4xx status code
func (o *V1NetworkPeersIDPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id put forbidden response has a 5xx status code
func (o *V1NetworkPeersIDPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put forbidden response a status code equal to that given
func (o *V1NetworkPeersIDPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers Id put forbidden response
func (o *V1NetworkPeersIDPutForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersIDPutForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDPutForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDPutForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutNotFound creates a V1NetworkPeersIDPutNotFound with default headers values
func NewV1NetworkPeersIDPutNotFound() *V1NetworkPeersIDPutNotFound {
	return &V1NetworkPeersIDPutNotFound{}
}

/*
V1NetworkPeersIDPutNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersIDPutNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put not found response has a 2xx status code
func (o *V1NetworkPeersIDPutNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put not found response has a 3xx status code
func (o *V1NetworkPeersIDPutNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put not found response has a 4xx status code
func (o *V1NetworkPeersIDPutNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id put not found response has a 5xx status code
func (o *V1NetworkPeersIDPutNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put not found response a status code equal to that given
func (o *V1NetworkPeersIDPutNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers Id put not found response
func (o *V1NetworkPeersIDPutNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersIDPutNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDPutNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDPutNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutConflict creates a V1NetworkPeersIDPutConflict with default headers values
func NewV1NetworkPeersIDPutConflict() *V1NetworkPeersIDPutConflict {
	return &V1NetworkPeersIDPutConflict{}
}

/*
V1NetworkPeersIDPutConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersIDPutConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put conflict response has a 2xx status code
func (o *V1NetworkPeersIDPutConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put conflict response has a 3xx status code
func (o *V1NetworkPeersIDPutConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put conflict response has a 4xx status code
func (o *V1NetworkPeersIDPutConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id put conflict response has a 5xx status code
func (o *V1NetworkPeersIDPutConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id put conflict response a status code equal to that given
func (o *V1NetworkPeersIDPutConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers Id put conflict response
func (o *V1NetworkPeersIDPutConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersIDPutConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDPutConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDPutConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDPutInternalServerError creates a V1NetworkPeersIDPutInternalServerError with default headers values
func NewV1NetworkPeersIDPutInternalServerError() *V1NetworkPeersIDPutInternalServerError {
	return &V1NetworkPeersIDPutInternalServerError{}
}

/*
V1NetworkPeersIDPutInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersIDPutInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id put internal server error response has a 2xx status code
func (o *V1NetworkPeersIDPutInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id put internal server error response has a 3xx status code
func (o *V1NetworkPeersIDPutInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id put internal server error response has a 4xx status code
func (o *V1NetworkPeersIDPutInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id put internal server error response has a 5xx status code
func (o *V1NetworkPeersIDPutInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers Id put internal server error response a status code equal to that given
func (o *V1NetworkPeersIDPutInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers Id put internal server error response
func (o *V1NetworkPeersIDPutInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersIDPutInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDPutInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdPutInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDPutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
