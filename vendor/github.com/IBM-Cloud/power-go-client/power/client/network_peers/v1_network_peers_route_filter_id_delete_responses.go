// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersRouteFilterIDDeleteReader is a Reader for the V1NetworkPeersRouteFilterIDDelete structure.
type V1NetworkPeersRouteFilterIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersRouteFilterIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersRouteFilterIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersRouteFilterIDDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersRouteFilterIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersRouteFilterIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersRouteFilterIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersRouteFilterIDDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersRouteFilterIDDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}] v1.networkPeers.routeFilter.id.delete", response, response.Code())
	}
}

// NewV1NetworkPeersRouteFilterIDDeleteOK creates a V1NetworkPeersRouteFilterIDDeleteOK with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteOK() *V1NetworkPeersRouteFilterIDDeleteOK {
	return &V1NetworkPeersRouteFilterIDDeleteOK{}
}

/*
V1NetworkPeersRouteFilterIDDeleteOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersRouteFilterIDDeleteOK struct {
	Payload models.Object
}

// IsSuccess returns true when this v1 network peers route filter Id delete o k response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers route filter Id delete o k response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete o k response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers route filter Id delete o k response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete o k response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers route filter Id delete o k response
func (o *V1NetworkPeersRouteFilterIDDeleteOK) Code() int {
	return 200
}

func (o *V1NetworkPeersRouteFilterIDDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteOK %s", 200, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteOK) GetPayload() models.Object {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteBadRequest creates a V1NetworkPeersRouteFilterIDDeleteBadRequest with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteBadRequest() *V1NetworkPeersRouteFilterIDDeleteBadRequest {
	return &V1NetworkPeersRouteFilterIDDeleteBadRequest{}
}

/*
V1NetworkPeersRouteFilterIDDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersRouteFilterIDDeleteBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete bad request response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete bad request response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete bad request response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filter Id delete bad request response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete bad request response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers route filter Id delete bad request response
func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteUnauthorized creates a V1NetworkPeersRouteFilterIDDeleteUnauthorized with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteUnauthorized() *V1NetworkPeersRouteFilterIDDeleteUnauthorized {
	return &V1NetworkPeersRouteFilterIDDeleteUnauthorized{}
}

/*
V1NetworkPeersRouteFilterIDDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersRouteFilterIDDeleteUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete unauthorized response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete unauthorized response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete unauthorized response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filter Id delete unauthorized response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete unauthorized response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers route filter Id delete unauthorized response
func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteForbidden creates a V1NetworkPeersRouteFilterIDDeleteForbidden with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteForbidden() *V1NetworkPeersRouteFilterIDDeleteForbidden {
	return &V1NetworkPeersRouteFilterIDDeleteForbidden{}
}

/*
V1NetworkPeersRouteFilterIDDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersRouteFilterIDDeleteForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete forbidden response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete forbidden response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete forbidden response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filter Id delete forbidden response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete forbidden response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers route filter Id delete forbidden response
func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteForbidden %s", 403, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteNotFound creates a V1NetworkPeersRouteFilterIDDeleteNotFound with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteNotFound() *V1NetworkPeersRouteFilterIDDeleteNotFound {
	return &V1NetworkPeersRouteFilterIDDeleteNotFound{}
}

/*
V1NetworkPeersRouteFilterIDDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersRouteFilterIDDeleteNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete not found response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete not found response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete not found response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filter Id delete not found response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete not found response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers route filter Id delete not found response
func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteNotFound %s", 404, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteConflict creates a V1NetworkPeersRouteFilterIDDeleteConflict with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteConflict() *V1NetworkPeersRouteFilterIDDeleteConflict {
	return &V1NetworkPeersRouteFilterIDDeleteConflict{}
}

/*
V1NetworkPeersRouteFilterIDDeleteConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersRouteFilterIDDeleteConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete conflict response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete conflict response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete conflict response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers route filter Id delete conflict response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers route filter Id delete conflict response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers route filter Id delete conflict response
func (o *V1NetworkPeersRouteFilterIDDeleteConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersRouteFilterIDDeleteConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteConflict %s", 409, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersRouteFilterIDDeleteInternalServerError creates a V1NetworkPeersRouteFilterIDDeleteInternalServerError with default headers values
func NewV1NetworkPeersRouteFilterIDDeleteInternalServerError() *V1NetworkPeersRouteFilterIDDeleteInternalServerError {
	return &V1NetworkPeersRouteFilterIDDeleteInternalServerError{}
}

/*
V1NetworkPeersRouteFilterIDDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersRouteFilterIDDeleteInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers route filter Id delete internal server error response has a 2xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers route filter Id delete internal server error response has a 3xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers route filter Id delete internal server error response has a 4xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers route filter Id delete internal server error response has a 5xx status code
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers route filter Id delete internal server error response a status code equal to that given
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers route filter Id delete internal server error response
func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/network-peers/{network_peer_id}/route-filters/{route_filter_id}][%d] v1NetworkPeersRouteFilterIdDeleteInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersRouteFilterIDDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
