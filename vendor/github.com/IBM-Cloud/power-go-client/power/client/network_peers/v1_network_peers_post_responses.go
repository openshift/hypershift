// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersPostReader is a Reader for the V1NetworkPeersPost structure.
type V1NetworkPeersPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersPostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/network-peers] v1.networkPeers.post", response, response.Code())
	}
}

// NewV1NetworkPeersPostOK creates a V1NetworkPeersPostOK with default headers values
func NewV1NetworkPeersPostOK() *V1NetworkPeersPostOK {
	return &V1NetworkPeersPostOK{}
}

/*
V1NetworkPeersPostOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersPostOK struct {
	Payload *models.NetworkPeer
}

// IsSuccess returns true when this v1 network peers post o k response has a 2xx status code
func (o *V1NetworkPeersPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers post o k response has a 3xx status code
func (o *V1NetworkPeersPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post o k response has a 4xx status code
func (o *V1NetworkPeersPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers post o k response has a 5xx status code
func (o *V1NetworkPeersPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post o k response a status code equal to that given
func (o *V1NetworkPeersPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers post o k response
func (o *V1NetworkPeersPostOK) Code() int {
	return 200
}

func (o *V1NetworkPeersPostOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostOK %s", 200, payload)
}

func (o *V1NetworkPeersPostOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostOK %s", 200, payload)
}

func (o *V1NetworkPeersPostOK) GetPayload() *models.NetworkPeer {
	return o.Payload
}

func (o *V1NetworkPeersPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPeer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostBadRequest creates a V1NetworkPeersPostBadRequest with default headers values
func NewV1NetworkPeersPostBadRequest() *V1NetworkPeersPostBadRequest {
	return &V1NetworkPeersPostBadRequest{}
}

/*
V1NetworkPeersPostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersPostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post bad request response has a 2xx status code
func (o *V1NetworkPeersPostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post bad request response has a 3xx status code
func (o *V1NetworkPeersPostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post bad request response has a 4xx status code
func (o *V1NetworkPeersPostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers post bad request response has a 5xx status code
func (o *V1NetworkPeersPostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post bad request response a status code equal to that given
func (o *V1NetworkPeersPostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers post bad request response
func (o *V1NetworkPeersPostBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersPostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersPostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersPostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostUnauthorized creates a V1NetworkPeersPostUnauthorized with default headers values
func NewV1NetworkPeersPostUnauthorized() *V1NetworkPeersPostUnauthorized {
	return &V1NetworkPeersPostUnauthorized{}
}

/*
V1NetworkPeersPostUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersPostUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post unauthorized response has a 2xx status code
func (o *V1NetworkPeersPostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post unauthorized response has a 3xx status code
func (o *V1NetworkPeersPostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post unauthorized response has a 4xx status code
func (o *V1NetworkPeersPostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers post unauthorized response has a 5xx status code
func (o *V1NetworkPeersPostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post unauthorized response a status code equal to that given
func (o *V1NetworkPeersPostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers post unauthorized response
func (o *V1NetworkPeersPostUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersPostUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersPostUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersPostUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostForbidden creates a V1NetworkPeersPostForbidden with default headers values
func NewV1NetworkPeersPostForbidden() *V1NetworkPeersPostForbidden {
	return &V1NetworkPeersPostForbidden{}
}

/*
V1NetworkPeersPostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersPostForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post forbidden response has a 2xx status code
func (o *V1NetworkPeersPostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post forbidden response has a 3xx status code
func (o *V1NetworkPeersPostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post forbidden response has a 4xx status code
func (o *V1NetworkPeersPostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers post forbidden response has a 5xx status code
func (o *V1NetworkPeersPostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post forbidden response a status code equal to that given
func (o *V1NetworkPeersPostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers post forbidden response
func (o *V1NetworkPeersPostForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersPostForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostForbidden %s", 403, payload)
}

func (o *V1NetworkPeersPostForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostForbidden %s", 403, payload)
}

func (o *V1NetworkPeersPostForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostNotFound creates a V1NetworkPeersPostNotFound with default headers values
func NewV1NetworkPeersPostNotFound() *V1NetworkPeersPostNotFound {
	return &V1NetworkPeersPostNotFound{}
}

/*
V1NetworkPeersPostNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersPostNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post not found response has a 2xx status code
func (o *V1NetworkPeersPostNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post not found response has a 3xx status code
func (o *V1NetworkPeersPostNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post not found response has a 4xx status code
func (o *V1NetworkPeersPostNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers post not found response has a 5xx status code
func (o *V1NetworkPeersPostNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post not found response a status code equal to that given
func (o *V1NetworkPeersPostNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers post not found response
func (o *V1NetworkPeersPostNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersPostNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostNotFound %s", 404, payload)
}

func (o *V1NetworkPeersPostNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostNotFound %s", 404, payload)
}

func (o *V1NetworkPeersPostNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostConflict creates a V1NetworkPeersPostConflict with default headers values
func NewV1NetworkPeersPostConflict() *V1NetworkPeersPostConflict {
	return &V1NetworkPeersPostConflict{}
}

/*
V1NetworkPeersPostConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersPostConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post conflict response has a 2xx status code
func (o *V1NetworkPeersPostConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post conflict response has a 3xx status code
func (o *V1NetworkPeersPostConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post conflict response has a 4xx status code
func (o *V1NetworkPeersPostConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers post conflict response has a 5xx status code
func (o *V1NetworkPeersPostConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers post conflict response a status code equal to that given
func (o *V1NetworkPeersPostConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers post conflict response
func (o *V1NetworkPeersPostConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersPostConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostConflict %s", 409, payload)
}

func (o *V1NetworkPeersPostConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostConflict %s", 409, payload)
}

func (o *V1NetworkPeersPostConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersPostInternalServerError creates a V1NetworkPeersPostInternalServerError with default headers values
func NewV1NetworkPeersPostInternalServerError() *V1NetworkPeersPostInternalServerError {
	return &V1NetworkPeersPostInternalServerError{}
}

/*
V1NetworkPeersPostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersPostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers post internal server error response has a 2xx status code
func (o *V1NetworkPeersPostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers post internal server error response has a 3xx status code
func (o *V1NetworkPeersPostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers post internal server error response has a 4xx status code
func (o *V1NetworkPeersPostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers post internal server error response has a 5xx status code
func (o *V1NetworkPeersPostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers post internal server error response a status code equal to that given
func (o *V1NetworkPeersPostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers post internal server error response
func (o *V1NetworkPeersPostInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersPostInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersPostInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/network-peers][%d] v1NetworkPeersPostInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersPostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
