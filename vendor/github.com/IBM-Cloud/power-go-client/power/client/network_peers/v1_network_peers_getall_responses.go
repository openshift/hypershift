// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersGetallReader is a Reader for the V1NetworkPeersGetall structure.
type V1NetworkPeersGetallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersGetallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersGetallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersGetallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersGetallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersGetallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersGetallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersGetallConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersGetallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/network-peers] v1.networkPeers.getall", response, response.Code())
	}
}

// NewV1NetworkPeersGetallOK creates a V1NetworkPeersGetallOK with default headers values
func NewV1NetworkPeersGetallOK() *V1NetworkPeersGetallOK {
	return &V1NetworkPeersGetallOK{}
}

/*
V1NetworkPeersGetallOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersGetallOK struct {
	Payload *models.NetworkPeers
}

// IsSuccess returns true when this v1 network peers getall o k response has a 2xx status code
func (o *V1NetworkPeersGetallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers getall o k response has a 3xx status code
func (o *V1NetworkPeersGetallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall o k response has a 4xx status code
func (o *V1NetworkPeersGetallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers getall o k response has a 5xx status code
func (o *V1NetworkPeersGetallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall o k response a status code equal to that given
func (o *V1NetworkPeersGetallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers getall o k response
func (o *V1NetworkPeersGetallOK) Code() int {
	return 200
}

func (o *V1NetworkPeersGetallOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallOK %s", 200, payload)
}

func (o *V1NetworkPeersGetallOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallOK %s", 200, payload)
}

func (o *V1NetworkPeersGetallOK) GetPayload() *models.NetworkPeers {
	return o.Payload
}

func (o *V1NetworkPeersGetallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPeers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallBadRequest creates a V1NetworkPeersGetallBadRequest with default headers values
func NewV1NetworkPeersGetallBadRequest() *V1NetworkPeersGetallBadRequest {
	return &V1NetworkPeersGetallBadRequest{}
}

/*
V1NetworkPeersGetallBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersGetallBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall bad request response has a 2xx status code
func (o *V1NetworkPeersGetallBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall bad request response has a 3xx status code
func (o *V1NetworkPeersGetallBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall bad request response has a 4xx status code
func (o *V1NetworkPeersGetallBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers getall bad request response has a 5xx status code
func (o *V1NetworkPeersGetallBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall bad request response a status code equal to that given
func (o *V1NetworkPeersGetallBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers getall bad request response
func (o *V1NetworkPeersGetallBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersGetallBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersGetallBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersGetallBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallUnauthorized creates a V1NetworkPeersGetallUnauthorized with default headers values
func NewV1NetworkPeersGetallUnauthorized() *V1NetworkPeersGetallUnauthorized {
	return &V1NetworkPeersGetallUnauthorized{}
}

/*
V1NetworkPeersGetallUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersGetallUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall unauthorized response has a 2xx status code
func (o *V1NetworkPeersGetallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall unauthorized response has a 3xx status code
func (o *V1NetworkPeersGetallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall unauthorized response has a 4xx status code
func (o *V1NetworkPeersGetallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers getall unauthorized response has a 5xx status code
func (o *V1NetworkPeersGetallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall unauthorized response a status code equal to that given
func (o *V1NetworkPeersGetallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers getall unauthorized response
func (o *V1NetworkPeersGetallUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersGetallUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersGetallUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersGetallUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallForbidden creates a V1NetworkPeersGetallForbidden with default headers values
func NewV1NetworkPeersGetallForbidden() *V1NetworkPeersGetallForbidden {
	return &V1NetworkPeersGetallForbidden{}
}

/*
V1NetworkPeersGetallForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersGetallForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall forbidden response has a 2xx status code
func (o *V1NetworkPeersGetallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall forbidden response has a 3xx status code
func (o *V1NetworkPeersGetallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall forbidden response has a 4xx status code
func (o *V1NetworkPeersGetallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers getall forbidden response has a 5xx status code
func (o *V1NetworkPeersGetallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall forbidden response a status code equal to that given
func (o *V1NetworkPeersGetallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers getall forbidden response
func (o *V1NetworkPeersGetallForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersGetallForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallForbidden %s", 403, payload)
}

func (o *V1NetworkPeersGetallForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallForbidden %s", 403, payload)
}

func (o *V1NetworkPeersGetallForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallNotFound creates a V1NetworkPeersGetallNotFound with default headers values
func NewV1NetworkPeersGetallNotFound() *V1NetworkPeersGetallNotFound {
	return &V1NetworkPeersGetallNotFound{}
}

/*
V1NetworkPeersGetallNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersGetallNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall not found response has a 2xx status code
func (o *V1NetworkPeersGetallNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall not found response has a 3xx status code
func (o *V1NetworkPeersGetallNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall not found response has a 4xx status code
func (o *V1NetworkPeersGetallNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers getall not found response has a 5xx status code
func (o *V1NetworkPeersGetallNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall not found response a status code equal to that given
func (o *V1NetworkPeersGetallNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers getall not found response
func (o *V1NetworkPeersGetallNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersGetallNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallNotFound %s", 404, payload)
}

func (o *V1NetworkPeersGetallNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallNotFound %s", 404, payload)
}

func (o *V1NetworkPeersGetallNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallConflict creates a V1NetworkPeersGetallConflict with default headers values
func NewV1NetworkPeersGetallConflict() *V1NetworkPeersGetallConflict {
	return &V1NetworkPeersGetallConflict{}
}

/*
V1NetworkPeersGetallConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersGetallConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall conflict response has a 2xx status code
func (o *V1NetworkPeersGetallConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall conflict response has a 3xx status code
func (o *V1NetworkPeersGetallConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall conflict response has a 4xx status code
func (o *V1NetworkPeersGetallConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers getall conflict response has a 5xx status code
func (o *V1NetworkPeersGetallConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers getall conflict response a status code equal to that given
func (o *V1NetworkPeersGetallConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers getall conflict response
func (o *V1NetworkPeersGetallConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersGetallConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallConflict %s", 409, payload)
}

func (o *V1NetworkPeersGetallConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallConflict %s", 409, payload)
}

func (o *V1NetworkPeersGetallConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersGetallInternalServerError creates a V1NetworkPeersGetallInternalServerError with default headers values
func NewV1NetworkPeersGetallInternalServerError() *V1NetworkPeersGetallInternalServerError {
	return &V1NetworkPeersGetallInternalServerError{}
}

/*
V1NetworkPeersGetallInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersGetallInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers getall internal server error response has a 2xx status code
func (o *V1NetworkPeersGetallInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers getall internal server error response has a 3xx status code
func (o *V1NetworkPeersGetallInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers getall internal server error response has a 4xx status code
func (o *V1NetworkPeersGetallInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers getall internal server error response has a 5xx status code
func (o *V1NetworkPeersGetallInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers getall internal server error response a status code equal to that given
func (o *V1NetworkPeersGetallInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers getall internal server error response
func (o *V1NetworkPeersGetallInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersGetallInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersGetallInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers][%d] v1NetworkPeersGetallInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersGetallInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersGetallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
