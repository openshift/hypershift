// Code generated by go-swagger; DO NOT EDIT.

package network_peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// V1NetworkPeersIDGetReader is a Reader for the V1NetworkPeersIDGet structure.
type V1NetworkPeersIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NetworkPeersIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NetworkPeersIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NetworkPeersIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV1NetworkPeersIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV1NetworkPeersIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1NetworkPeersIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV1NetworkPeersIDGetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV1NetworkPeersIDGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/network-peers/{network_peer_id}] v1.networkPeers.id.get", response, response.Code())
	}
}

// NewV1NetworkPeersIDGetOK creates a V1NetworkPeersIDGetOK with default headers values
func NewV1NetworkPeersIDGetOK() *V1NetworkPeersIDGetOK {
	return &V1NetworkPeersIDGetOK{}
}

/*
V1NetworkPeersIDGetOK describes a response with status code 200, with default header values.

OK
*/
type V1NetworkPeersIDGetOK struct {
	Payload *models.NetworkPeer
}

// IsSuccess returns true when this v1 network peers Id get o k response has a 2xx status code
func (o *V1NetworkPeersIDGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 network peers Id get o k response has a 3xx status code
func (o *V1NetworkPeersIDGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get o k response has a 4xx status code
func (o *V1NetworkPeersIDGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id get o k response has a 5xx status code
func (o *V1NetworkPeersIDGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get o k response a status code equal to that given
func (o *V1NetworkPeersIDGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 network peers Id get o k response
func (o *V1NetworkPeersIDGetOK) Code() int {
	return 200
}

func (o *V1NetworkPeersIDGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetOK %s", 200, payload)
}

func (o *V1NetworkPeersIDGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetOK %s", 200, payload)
}

func (o *V1NetworkPeersIDGetOK) GetPayload() *models.NetworkPeer {
	return o.Payload
}

func (o *V1NetworkPeersIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPeer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetBadRequest creates a V1NetworkPeersIDGetBadRequest with default headers values
func NewV1NetworkPeersIDGetBadRequest() *V1NetworkPeersIDGetBadRequest {
	return &V1NetworkPeersIDGetBadRequest{}
}

/*
V1NetworkPeersIDGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type V1NetworkPeersIDGetBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get bad request response has a 2xx status code
func (o *V1NetworkPeersIDGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get bad request response has a 3xx status code
func (o *V1NetworkPeersIDGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get bad request response has a 4xx status code
func (o *V1NetworkPeersIDGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id get bad request response has a 5xx status code
func (o *V1NetworkPeersIDGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get bad request response a status code equal to that given
func (o *V1NetworkPeersIDGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 network peers Id get bad request response
func (o *V1NetworkPeersIDGetBadRequest) Code() int {
	return 400
}

func (o *V1NetworkPeersIDGetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDGetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetBadRequest %s", 400, payload)
}

func (o *V1NetworkPeersIDGetBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetUnauthorized creates a V1NetworkPeersIDGetUnauthorized with default headers values
func NewV1NetworkPeersIDGetUnauthorized() *V1NetworkPeersIDGetUnauthorized {
	return &V1NetworkPeersIDGetUnauthorized{}
}

/*
V1NetworkPeersIDGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type V1NetworkPeersIDGetUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get unauthorized response has a 2xx status code
func (o *V1NetworkPeersIDGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get unauthorized response has a 3xx status code
func (o *V1NetworkPeersIDGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get unauthorized response has a 4xx status code
func (o *V1NetworkPeersIDGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id get unauthorized response has a 5xx status code
func (o *V1NetworkPeersIDGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get unauthorized response a status code equal to that given
func (o *V1NetworkPeersIDGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the v1 network peers Id get unauthorized response
func (o *V1NetworkPeersIDGetUnauthorized) Code() int {
	return 401
}

func (o *V1NetworkPeersIDGetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDGetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetUnauthorized %s", 401, payload)
}

func (o *V1NetworkPeersIDGetUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetForbidden creates a V1NetworkPeersIDGetForbidden with default headers values
func NewV1NetworkPeersIDGetForbidden() *V1NetworkPeersIDGetForbidden {
	return &V1NetworkPeersIDGetForbidden{}
}

/*
V1NetworkPeersIDGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type V1NetworkPeersIDGetForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get forbidden response has a 2xx status code
func (o *V1NetworkPeersIDGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get forbidden response has a 3xx status code
func (o *V1NetworkPeersIDGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get forbidden response has a 4xx status code
func (o *V1NetworkPeersIDGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id get forbidden response has a 5xx status code
func (o *V1NetworkPeersIDGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get forbidden response a status code equal to that given
func (o *V1NetworkPeersIDGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the v1 network peers Id get forbidden response
func (o *V1NetworkPeersIDGetForbidden) Code() int {
	return 403
}

func (o *V1NetworkPeersIDGetForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDGetForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetForbidden %s", 403, payload)
}

func (o *V1NetworkPeersIDGetForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetNotFound creates a V1NetworkPeersIDGetNotFound with default headers values
func NewV1NetworkPeersIDGetNotFound() *V1NetworkPeersIDGetNotFound {
	return &V1NetworkPeersIDGetNotFound{}
}

/*
V1NetworkPeersIDGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type V1NetworkPeersIDGetNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get not found response has a 2xx status code
func (o *V1NetworkPeersIDGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get not found response has a 3xx status code
func (o *V1NetworkPeersIDGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get not found response has a 4xx status code
func (o *V1NetworkPeersIDGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id get not found response has a 5xx status code
func (o *V1NetworkPeersIDGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get not found response a status code equal to that given
func (o *V1NetworkPeersIDGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 network peers Id get not found response
func (o *V1NetworkPeersIDGetNotFound) Code() int {
	return 404
}

func (o *V1NetworkPeersIDGetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDGetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetNotFound %s", 404, payload)
}

func (o *V1NetworkPeersIDGetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetConflict creates a V1NetworkPeersIDGetConflict with default headers values
func NewV1NetworkPeersIDGetConflict() *V1NetworkPeersIDGetConflict {
	return &V1NetworkPeersIDGetConflict{}
}

/*
V1NetworkPeersIDGetConflict describes a response with status code 409, with default header values.

Conflict
*/
type V1NetworkPeersIDGetConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get conflict response has a 2xx status code
func (o *V1NetworkPeersIDGetConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get conflict response has a 3xx status code
func (o *V1NetworkPeersIDGetConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get conflict response has a 4xx status code
func (o *V1NetworkPeersIDGetConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 network peers Id get conflict response has a 5xx status code
func (o *V1NetworkPeersIDGetConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 network peers Id get conflict response a status code equal to that given
func (o *V1NetworkPeersIDGetConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the v1 network peers Id get conflict response
func (o *V1NetworkPeersIDGetConflict) Code() int {
	return 409
}

func (o *V1NetworkPeersIDGetConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDGetConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetConflict %s", 409, payload)
}

func (o *V1NetworkPeersIDGetConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NetworkPeersIDGetInternalServerError creates a V1NetworkPeersIDGetInternalServerError with default headers values
func NewV1NetworkPeersIDGetInternalServerError() *V1NetworkPeersIDGetInternalServerError {
	return &V1NetworkPeersIDGetInternalServerError{}
}

/*
V1NetworkPeersIDGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type V1NetworkPeersIDGetInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v1 network peers Id get internal server error response has a 2xx status code
func (o *V1NetworkPeersIDGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 network peers Id get internal server error response has a 3xx status code
func (o *V1NetworkPeersIDGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 network peers Id get internal server error response has a 4xx status code
func (o *V1NetworkPeersIDGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 network peers Id get internal server error response has a 5xx status code
func (o *V1NetworkPeersIDGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v1 network peers Id get internal server error response a status code equal to that given
func (o *V1NetworkPeersIDGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the v1 network peers Id get internal server error response
func (o *V1NetworkPeersIDGetInternalServerError) Code() int {
	return 500
}

func (o *V1NetworkPeersIDGetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDGetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/network-peers/{network_peer_id}][%d] v1NetworkPeersIdGetInternalServerError %s", 500, payload)
}

func (o *V1NetworkPeersIDGetInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1NetworkPeersIDGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
