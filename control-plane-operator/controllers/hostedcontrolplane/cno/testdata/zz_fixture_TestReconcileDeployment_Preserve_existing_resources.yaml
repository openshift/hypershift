apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
spec:
  replicas: 0
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      name: cluster-network-operator
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: configs,client-token
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        app: cluster-network-operator
        hypershift.openshift.io/control-plane-component: cluster-network-operator
        name: cluster-network-operator
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - start
        - --listen=0.0.0.0:9104
        - --kubeconfig=/configs/hosted
        - --namespace=openshift-network-operator
        - --extra-clusters=management=/configs/management
        command:
        - /usr/bin/cluster-network-operator
        env:
        - name: PROXY_INTERNAL_APISERVER_ADDRESS
          value: "true"
        - name: HYPERSHIFT
          value: "true"
        - name: HOSTED_CLUSTER_NAME
        - name: CA_CONFIG_MAP
        - name: CA_CONFIG_MAP_KEY
        - name: TOKEN_AUDIENCE
        - name: RELEASE_VERSION
          value: 4.11.0
        - name: APISERVER_OVERRIDE_HOST
        - name: APISERVER_OVERRIDE_PORT
          value: "0"
        - name: OVN_NB_RAFT_ELECTION_TIMER
          value: "10"
        - name: OVN_SB_RAFT_ELECTION_TIMER
          value: "16"
        - name: OVN_NORTHD_PROBE_INTERVAL
          value: "5000"
        - name: OVN_CONTROLLER_INACTIVITY_PROBE
          value: "180000"
        - name: OVN_NB_INACTIVITY_PROBE
          value: "60000"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HOSTED_CLUSTER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_PROXY_IMAGE
        - name: KUBE_RBAC_PROXY_IMAGE
        - name: MULTUS_IMAGE
        - name: MULTUS_ADMISSION_CONTROLLER_IMAGE
        - name: CNI_PLUGINS_IMAGE
        - name: BOND_CNI_PLUGIN_IMAGE
        - name: WHEREABOUTS_CNI_IMAGE
        - name: ROUTE_OVERRRIDE_CNI_IMAGE
        - name: MULTUS_NETWORKPOLICY_IMAGE
        - name: OVN_IMAGE
        - name: OVN_CONTROL_PLANE_IMAGE
        - name: EGRESS_ROUTER_CNI_IMAGE
        - name: NETWORK_METRICS_DAEMON_IMAGE
        - name: NETWORK_CHECK_SOURCE_IMAGE
        - name: NETWORK_CHECK_TARGET_IMAGE
        - name: NETWORKING_CONSOLE_PLUGIN_IMAGE
        - name: CLOUD_NETWORK_CONFIG_CONTROLLER_IMAGE
        - name: TOKEN_MINTER_IMAGE
        - name: CLI_IMAGE
        - name: CLI_CONTROL_PLANE_IMAGE
        - name: SOCKS5_PROXY_IMAGE
        - name: OPENSHIFT_RELEASE_IMAGE
        imagePullPolicy: IfNotPresent
        name: cluster-network-operator
        resources:
          limits:
            cpu: "1"
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 500Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /configs
          name: configs
        - mountPath: /var/run/secrets/kubernetes.io/hosted
          name: client-token
        - mountPath: /etc/certificate/ca
          name: ca-bundle
      - args:
        - run
        command:
        - /usr/bin/control-plane-operator
        - konnectivity-socks5-proxy
        - --disable-resolver
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/kubeconfig
        name: konnectivity-proxy
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: hosted-etc-kube
        - mountPath: /etc/konnectivity/proxy-client
          name: konnectivity-proxy-cert
        - mountPath: /etc/konnectivity/proxy-ca
          name: konnectivity-proxy-ca
      - args:
        - --service-account-namespace
        - openshift-network-operator
        - --service-account-name
        - cluster-network-operator
        - --token-file
        - /var/client-token/token
        - --token-audience
        - ""
        - --kubeconfig
        - /etc/kubernetes/kubeconfig
        command:
        - /usr/bin/control-plane-operator
        - token-minter
        imagePullPolicy: IfNotPresent
        name: client-token-minter
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/client-token
          name: client-token
        - mountPath: /etc/kubernetes
          name: hosted-etc-kube
      initContainers:
      - command:
        - /usr/bin/control-plane-operator
        - availability-prober
        - --target
        - https://kube-apiserver:6443/readyz
        - --kubeconfig=/var/kubeconfig/kubeconfig
        - --required-api=operator.openshift.io,v1,Network
        - --required-api=network.operator.openshift.io,v1,EgressRouter
        - --required-api=network.operator.openshift.io,v1,OperatorPKI
        - --wait-for-infrastructure-resource
        - --wait-for-cluster-rolebinding=cluster-network-operator
        imagePullPolicy: IfNotPresent
        name: availability-prober
        resources: {}
        volumeMounts:
        - mountPath: /var/kubeconfig
          name: hosted-etc-kube
      - args:
        - --kubeconfig=/etc/hosted-kubernetes/kubeconfig
        - -n=openshift-network-operator
        - delete
        - --ignore-not-found=true
        - deployment
        - network-operator
        command:
        - /usr/bin/kubectl
        name: remove-old-cno
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hosted-kubernetes
          name: hosted-etc-kube
      - args:
        - --service-account-namespace
        - openshift-network-operator
        - --service-account-name
        - cluster-network-operator
        - --token-file
        - /var/client-token/token
        - --token-audience
        - ""
        - --kubeconfig
        - /etc/kubernetes/kubeconfig
        - --oneshot
        command:
        - /usr/bin/control-plane-operator
        - token-minter
        imagePullPolicy: IfNotPresent
        name: init-client-token-minter
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/client-token
          name: client-token
        - mountPath: /etc/kubernetes
          name: hosted-etc-kube
      - args:
        - -c
        - |
          #!/bin/bash
          set -xeuo pipefail

          kc=/configs/management
          kubectl --kubeconfig $kc config set clusters.default.server "https://[${KUBERNETES_SERVICE_HOST}]:${KUBERNETES_SERVICE_PORT}"
          kubectl --kubeconfig $kc config set clusters.default.certificate-authority /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          kubectl --kubeconfig $kc config set users.admin.tokenFile /var/run/secrets/kubernetes.io/serviceaccount/token
          kubectl --kubeconfig $kc config set contexts.default.cluster default
          kubectl --kubeconfig $kc config set contexts.default.user admin
          kubectl --kubeconfig $kc config set contexts.default.namespace $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
          kubectl --kubeconfig $kc config use-context default


          kc=/configs/hosted
          kubectl --kubeconfig $kc config set clusters.default.server "https://kube-apiserver:${KUBE_APISERVER_SERVICE_PORT}"
          kubectl --kubeconfig $kc config set clusters.default.certificate-authority /etc/certificate/ca/ca.crt
          kubectl --kubeconfig $kc config set users.admin.tokenFile /var/run/secrets/kubernetes.io/hosted/token
          kubectl --kubeconfig $kc config set contexts.default.cluster default
          kubectl --kubeconfig $kc config set contexts.default.user admin
          kubectl --kubeconfig $kc config set contexts.default.namespace openshift-network-operator
          kubectl --kubeconfig $kc config use-context default
        command:
        - /bin/bash
        name: rewrite-config
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hosted-kubernetes
          name: hosted-etc-kube
        - mountPath: /configs
          name: configs
        - mountPath: /var/run/secrets/kubernetes.io/hosted
          name: client-token
        - mountPath: /etc/certificate/ca
          name: ca-bundle
      serviceAccountName: cluster-network-operator
      volumes:
      - name: hosted-etc-kube
        secret:
          secretName: service-network-admin-kubeconfig
      - emptyDir: {}
        name: configs
      - name: konnectivity-proxy-cert
        secret:
          defaultMode: 416
          secretName: konnectivity-client
      - configMap:
          defaultMode: 416
          name: konnectivity-ca-bundle
        name: konnectivity-proxy-ca
      - emptyDir: {}
        name: client-token
      - name: ca-bundle
        secret:
          defaultMode: 416
          secretName: root-ca
status: {}
