apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
  name: kube-controller-manager
  namespace: hcp-namespace
  ownerReferences:
  - apiVersion: hypershift.openshift.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: HostedControlPlane
    name: hcp
    uid: ""
  resourceVersion: "1"
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: kube-controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: logs,certs
        component.hypershift.openshift.io/config-hash: 1252551487ecf31a87ecf31acb8019bfd6265674
        hypershift.openshift.io/release-image: quay.io/openshift-release-dev/ocp-release:4.16.10-x86_64
      creationTimestamp: null
      labels:
        app: kube-controller-manager
        hypershift.openshift.io/control-plane-component: kube-controller-manager
        hypershift.openshift.io/hosted-control-plane: hcp-namespace
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/control-plane
                operator: In
                values:
                - "true"
            weight: 50
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/cluster
                operator: In
                values:
                - hcp-namespace
            weight: 100
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  hypershift.openshift.io/hosted-control-plane: hcp-namespace
              topologyKey: kubernetes.io/hostname
            weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: kube-controller-manager
                hypershift.openshift.io/control-plane-component: kube-controller-manager
                hypershift.openshift.io/hosted-control-plane: hcp-namespace
            topologyKey: topology.kubernetes.io/zone
          - labelSelector:
              matchLabels:
                app: kube-controller-manager
                hypershift.openshift.io/control-plane-component: kube-controller-manager
                hypershift.openshift.io/hosted-control-plane: hcp-namespace
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - --openshift-config=/etc/kubernetes/config/config.json
        - --kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --authentication-kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --authorization-kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --allocate-node-cidrs=false
        - --cert-dir=/var/run/kubernetes
        - --cluster-signing-cert-file=/etc/kubernetes/certs/cluster-signer/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/certs/cluster-signer/ca.key
        - --configure-cloud-routes=false
        - --controllers=*
        - --controllers=-ttl
        - --controllers=-bootstrapsigner
        - --controllers=-tokencleaner
        - --enable-dynamic-provisioning=true
        - --flex-volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec
        - --pv-recycler-pod-template-filepath-nfs=/etc/kubernetes/recycler-config/recycler-pod.yaml
        - --kube-api-burst=300
        - --kube-api-qps=150
        - --leader-elect-resource-lock=leases
        - --leader-elect=true
        - --leader-elect-renew-deadline=12s
        - --leader-elect-retry-period=3s
        - --root-ca-file=/etc/kubernetes/certs/root-ca/ca.crt
        - --secure-port=10257
        - --service-account-private-key-file=/etc/kubernetes/certs/service-signer/service-account.key
        - --use-service-account-credentials=true
        - --cluster-signing-duration=17520h
        - --tls-cert-file=/etc/kubernetes/certs/server/tls.crt
        - --tls-private-key-file=/etc/kubernetes/certs/server/tls.key
        - --cluster-cidr=10.132.0.0/14
        - --service-cluster-ip-range=
        - --node-monitor-grace-period=50s
        - --tls-min-version=VersionTLS12
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --feature-gates=ConsolePluginContentSecurityPolicy=true
        - --feature-gates=SetEIPForNLBIngressController=true
        - --feature-gates=OpenShiftPodSecurityAdmission=true
        - --feature-gates=BuildCSIVolumes=true
        - --feature-gates=MachineAPIProviderOpenStack=true
        - --feature-gates=InsightsConfigAPI=true
        - --feature-gates=InsightsRuntimeExtractor=true
        - --feature-gates=AzureWorkloadIdentity=true
        - --feature-gates=PrivateHostedZoneAWS=true
        - --feature-gates=SigstoreImageVerification=true
        - --feature-gates=GCPLabelsTags=true
        - --feature-gates=AlibabaPlatform=true
        - --feature-gates=VSphereHostVMGroupZonal=true
        - --feature-gates=VSphereMultiDisk=true
        - --feature-gates=VSphereMultiVCenters=true
        - --feature-gates=VSphereStaticIPs=true
        - --feature-gates=RouteExternalCertificate=true
        - --feature-gates=CPMSMachineNamePrefix=true
        - --feature-gates=AdminNetworkPolicy=true
        - --feature-gates=NetworkSegmentation=true
        - --feature-gates=AdditionalRoutingCapabilities=true
        - --feature-gates=RouteAdvertisements=true
        - --feature-gates=NetworkLiveMigration=true
        - --feature-gates=NetworkDiagnosticsConfig=true
        - --feature-gates=OVNObservability=true
        - --feature-gates=HardwareSpeed=true
        - --feature-gates=EtcdBackendQuota=true
        - --feature-gates=AutomatedEtcdBackup=true
        - --feature-gates=DNSNameResolver=true
        - --feature-gates=VSphereControlPlaneMachineSet=true
        - --feature-gates=MachineConfigNodes=true
        - --feature-gates=GCPClusterHostedDNS=true
        - --feature-gates=AWSClusterHostedDNS=true
        - --feature-gates=MixedCPUsAllocation=true
        - --feature-gates=ManagedBootImages=true
        - --feature-gates=ManagedBootImagesAWS=true
        - --feature-gates=OnClusterBuild=true
        - --feature-gates=BootcNodeManagement=true
        - --feature-gates=SignatureStores=true
        - --feature-gates=PinnedImages=true
        - --feature-gates=UpgradeStatus=true
        - --feature-gates=ExternalOIDC=true
        - --feature-gates=Example=true
        - --feature-gates=PlatformOperators=true
        - --feature-gates=InsightsOnDemandDataGather=true
        - --feature-gates=BareMetalLoadBalancer=true
        - --feature-gates=InsightsConfig=true
        - --feature-gates=NodeDisruptionPolicy=true
        - --feature-gates=MetricsCollectionProfiles=true
        - --feature-gates=VSphereDriverConfiguration=true
        - --feature-gates=ChunkSizeMiB=true
        - --feature-gates=PersistentIPsForVirtualization=true
        - --feature-gates=ClusterMonitoringConfig=true
        - --feature-gates=MultiArchInstallAWS=true
        - --feature-gates=MultiArchInstallGCP=true
        - --feature-gates=IngressControllerLBSubnetsAWS=true
        - --feature-gates=AWSEFSDriverVolumeMetrics=true
        - --feature-gates=ImageStreamImportMode=true
        - --feature-gates=VSphereMultiNetworks=true
        - --feature-gates=IngressControllerDynamicConfigurationManager=true
        - --feature-gates=MinimumKubeletVersion=true
        - --feature-gates=NutanixMultiSubnets=true
        - --feature-gates=KMSEncryptionProvider=true
        - --feature-gates=HighlyAvailableArbiter=true
        - --feature-gates=ServiceAccountTokenNodeBinding=true
        - --feature-gates=ValidatingAdmissionPolicy=true
        - --feature-gates=NodeSwap=true
        - --feature-gates=DynamicResourceAllocation=true
        - --feature-gates=MaxUnavailableStatefulSet=true
        - --feature-gates=CloudDualStackNodeIPs=true
        - --feature-gates=DisableKubeletCloudCredentialProviders=true
        - --feature-gates=KMSv1=true
        - --feature-gates=TranslateStreamCloseWebsocketRequests=true
        - --feature-gates=VolumeAttributesClass=true
        - --feature-gates=VolumeGroupSnapshot=true
        - --feature-gates=UserNamespacesSupport=true
        - --feature-gates=UserNamespacesPodSecurityStandards=true
        - --feature-gates=ProcMountType=true
        - --feature-gates=GatewayAPI=false
        - --feature-gates=MachineAPIOperatorDisableMachineHealthCheckController=false
        - --feature-gates=ClusterAPIInstall=false
        - --feature-gates=Example2=false
        - --feature-gates=NewOLM=false
        - --feature-gates=ClusterAPIInstallIBMCloud=false
        - --feature-gates=MachineAPIMigration=false
        - --feature-gates=MultiArchInstallAzure=false
        - --feature-gates=ClusterVersionOperatorConfiguration=false
        - --feature-gates=EventedPLEG=false
        command:
        - hyperkube
        - kube-controller-manager
        image: hyperkube
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 10257
            scheme: HTTPS
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: kube-controller-manager
        ports:
        - containerPort: 10257
          name: client
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 10257
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 60m
            memory: 400Mi
        volumeMounts:
        - mountPath: /var/run/kubernetes
          name: certs
        - mountPath: /etc/kubernetes/certs/cluster-signer
          name: cluster-signer
        - mountPath: /etc/kubernetes/config
          name: kcm-config
        - mountPath: /etc/kubernetes/secrets/svc-kubeconfig
          name: kubeconfig
        - mountPath: /var/log/kube-controller-manager
          name: logs
        - mountPath: /etc/kubernetes/recycler-config
          name: recycler-config
        - mountPath: /etc/kubernetes/certs/root-ca
          name: root-ca
        - mountPath: /etc/kubernetes/certs/server
          name: server-crt
        - mountPath: /etc/kubernetes/certs/service-signer
          name: service-signer
      initContainers:
      - command:
        - /usr/bin/control-plane-operator
        - availability-prober
        - --target
        - https://kube-apiserver:6443/readyz
        image: availability-prober
        imagePullPolicy: IfNotPresent
        name: availability-prober
        resources: {}
      priorityClassName: hypershift-control-plane
      restartPolicy: Always
      schedulerName: default-scheduler
      tolerations:
      - effect: NoSchedule
        key: hypershift.openshift.io/control-plane
        operator: Equal
        value: "true"
      - effect: NoSchedule
        key: hypershift.openshift.io/cluster
        operator: Equal
        value: hcp-namespace
      volumes:
      - configMap:
          defaultMode: 420
          name: kcm-config
        name: kcm-config
      - configMap:
          defaultMode: 420
          name: root-ca
        name: root-ca
      - emptyDir: {}
        name: logs
      - name: kubeconfig
        secret:
          defaultMode: 416
          secretName: kube-controller-manager-kubeconfig
      - name: cluster-signer
        secret:
          defaultMode: 416
          secretName: cluster-signer-ca
      - emptyDir: {}
        name: certs
      - name: service-signer
        secret:
          defaultMode: 416
          secretName: sa-signing-key
      - name: server-crt
        secret:
          defaultMode: 416
          secretName: kcm-server
      - configMap:
          defaultMode: 420
          name: recycler-config
        name: recycler-config
status: {}
