apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
  name: openshift-oauth-apiserver
  namespace: hcp-namespace
  ownerReferences:
  - apiVersion: hypershift.openshift.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: HostedControlPlane
    name: hcp
    uid: ""
  resourceVersion: "1"
spec:
  replicas: 3
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: openshift-oauth-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: work-logs,tmp-dir
        component.hypershift.openshift.io/config-hash: 19dc307e52ebd36a
        hypershift.openshift.io/release-image: quay.io/openshift-release-dev/ocp-release:4.16.10-x86_64
      creationTimestamp: null
      labels:
        app: openshift-oauth-apiserver
        hypershift.openshift.io/control-plane-component: openshift-oauth-apiserver
        hypershift.openshift.io/hosted-control-plane: hcp-namespace
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/control-plane
                operator: In
                values:
                - "true"
            weight: 50
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/cluster
                operator: In
                values:
                - hcp-namespace
            weight: 100
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  hypershift.openshift.io/hosted-control-plane: hcp-namespace
              topologyKey: kubernetes.io/hostname
            weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: openshift-oauth-apiserver
                hypershift.openshift.io/control-plane-component: openshift-oauth-apiserver
                hypershift.openshift.io/hosted-control-plane: hcp-namespace
            topologyKey: topology.kubernetes.io/zone
          - labelSelector:
              matchLabels:
                app: openshift-oauth-apiserver
                hypershift.openshift.io/control-plane-component: openshift-oauth-apiserver
                hypershift.openshift.io/hosted-control-plane: hcp-namespace
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - start
        - --authorization-kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --authentication-kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --kubeconfig=/etc/kubernetes/secrets/svc-kubeconfig/kubeconfig
        - --secure-port=8443
        - --audit-log-path=/var/log/openshift-oauth-apiserver/audit.log
        - --audit-log-format=json
        - --audit-log-maxsize=10
        - --audit-log-maxbackup=1
        - --etcd-cafile=/etc/kubernetes/certs/etcd-client-ca/ca.crt
        - --etcd-keyfile=/etc/kubernetes/certs/etcd-client/etcd-client.key
        - --etcd-certfile=/etc/kubernetes/certs/etcd-client/etcd-client.crt
        - --shutdown-delay-duration=15s
        - --tls-private-key-file=/etc/kubernetes/certs/serving/tls.key
        - --tls-cert-file=/etc/kubernetes/certs/serving/tls.crt
        - --audit-policy-file=/etc/kubernetes/audit-config/policy.yaml
        - --cors-allowed-origins='//127\.0\.0\.1(:|$)'
        - --cors-allowed-origins='//localhost(:|$)'
        - --v=2
        - --requestheader-client-ca-file=/etc/kubernetes/certs/aggregator-client-ca/ca.crt
        - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
        - --requestheader-username-headers=X-Remote-User
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --client-ca-file=/etc/kubernetes/certs/client-ca/ca.crt
        - --api-audiences=
        - --etcd-servers=https://etcd-client:2379
        - --tls-min-version=VersionTLS12
        command:
        - /usr/bin/oauth-apiserver
        env:
        - name: HTTP_PROXY
          value: socks5://127.0.0.1:8090
        - name: HTTPS_PROXY
          value: socks5://127.0.0.1:8090
        - name: NO_PROXY
          value: kube-apiserver,etcd-client,audit-webhook
        image: oauth-apiserver
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: openshift-oauth-apiserver
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: readyz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 150m
            memory: 80Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/kubernetes/certs/aggregator-client-ca
          name: aggregator-ca
        - mountPath: /etc/kubernetes/audit-config
          name: audit-config
        - mountPath: /etc/kubernetes/certs/client-ca
          name: client-ca
        - mountPath: /etc/kubernetes/certs/etcd-client-ca
          name: etcd-client-ca
        - mountPath: /etc/kubernetes/certs/etcd-client
          name: etcd-client-cert
        - mountPath: /etc/kubernetes/secrets/svc-kubeconfig
          name: kubeconfig
        - mountPath: /etc/kubernetes/certs/serving
          name: serving-cert
        - mountPath: /var/log/openshift-oauth-apiserver
          name: work-logs
        - mountPath: /tmp
          name: tmp-dir
        workingDir: /var/log/openshift-oauth-apiserver
      - args:
        - -c
        - |
          set -o errexit
          set -o nounset
          set -o pipefail

          function cleanup() {
            pkill -P $$$
            wait
            exit
          }
          trap cleanup SIGTERM

          /usr/bin/tail -c+1 -F /var/log/openshift-oauth-apiserver/audit.log &
          wait $!
        command:
        - /bin/bash
        image: cli
        imagePullPolicy: IfNotPresent
        name: audit-logs
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/log/openshift-oauth-apiserver
          name: work-logs
        - mountPath: /tmp
          name: tmp-dir
      - args:
        - run
        - --resolve-from-guest-cluster-dns=true
        command:
        - /usr/bin/control-plane-operator
        - konnectivity-socks5-proxy
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/secrets/kubeconfig/kubeconfig
        image: controlplane-operator
        name: konnectivity-proxy-socks5
        resources:
          requests:
            cpu: 10m
            memory: 30Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/kubernetes/secrets/kubeconfig
          name: kubeconfig
        - mountPath: /etc/konnectivity/proxy-client
          name: konnectivity-proxy-cert
        - mountPath: /etc/konnectivity/proxy-ca
          name: konnectivity-proxy-ca
        - mountPath: /tmp
          name: tmp-dir
      initContainers:
      - command:
        - /usr/bin/control-plane-operator
        - availability-prober
        - --target
        - https://kube-apiserver:2040/readyz
        image: availability-prober
        imagePullPolicy: IfNotPresent
        name: availability-prober
        resources: {}
        terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: hypershift-api-critical
      terminationGracePeriodSeconds: 120
      tolerations:
      - effect: NoSchedule
        key: hypershift.openshift.io/control-plane
        operator: Equal
        value: "true"
      - effect: NoSchedule
        key: hypershift.openshift.io/cluster
        operator: Equal
        value: hcp-namespace
      volumes:
      - emptyDir: {}
        name: work-logs
      - configMap:
          defaultMode: 420
          name: openshift-oauth-apiserver-audit
        name: audit-config
      - configMap:
          defaultMode: 420
          name: aggregator-client-ca
        name: aggregator-ca
      - configMap:
          defaultMode: 420
          name: etcd-ca
        name: etcd-client-ca
      - name: kubeconfig
        secret:
          defaultMode: 416
          secretName: service-network-admin-kubeconfig
      - name: serving-cert
        secret:
          defaultMode: 416
          secretName: openshift-oauth-apiserver-cert
      - name: etcd-client-cert
        secret:
          defaultMode: 416
          secretName: etcd-client-tls
      - configMap:
          defaultMode: 420
          name: client-ca
        name: client-ca
      - name: konnectivity-proxy-cert
        secret:
          defaultMode: 416
          secretName: konnectivity-client
      - configMap:
          name: konnectivity-ca-bundle
        name: konnectivity-proxy-ca
      - emptyDir: {}
        name: tmp-dir
status: {}
