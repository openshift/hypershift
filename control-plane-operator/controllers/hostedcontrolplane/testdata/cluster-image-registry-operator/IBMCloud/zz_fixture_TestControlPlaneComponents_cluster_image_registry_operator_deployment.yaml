apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
  name: cluster-image-registry-operator
  namespace: hcp-namespace
  ownerReferences:
  - apiVersion: hypershift.openshift.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: HostedControlPlane
    name: hcp
    uid: ""
  resourceVersion: "1"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      name: cluster-image-registry-operator
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: apiserver-token,tmp-dir
        component.hypershift.openshift.io/config-hash: 87ecf31a
        hypershift.openshift.io/release-image: quay.io/openshift-release-dev/ocp-release:4.16.10-x86_64
      creationTimestamp: null
      labels:
        app: cluster-image-registry-operator
        hypershift.openshift.io/control-plane-component: cluster-image-registry-operator
        hypershift.openshift.io/hosted-control-plane: hcp-namespace
        name: cluster-image-registry-operator
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/control-plane
                operator: In
                values:
                - "true"
            weight: 50
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/cluster
                operator: In
                values:
                - hcp-namespace
            weight: 100
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  hypershift.openshift.io/hosted-control-plane: hcp-namespace
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: false
      containers:
      - args:
        - -c
        - |
          #!/bin/bash
          set -euo pipefail

          while true; do
             if [[ -f /var/run/secrets/kubernetes.io/serviceaccount/token ]]; then
                break
             fi
             echo "Waiting for client token"
             sleep 2
          done

          echo "openshift-image-registry" > "/var/run/secrets/kubernetes.io/serviceaccount/namespace"
          cp "/etc/certificate/ca/ca.crt" "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          export KUBERNETES_SERVICE_HOST=kube-apiserver
          export KUBERNETES_SERVICE_PORT=$KUBE_APISERVER_SERVICE_PORT

          while true; do
            if curl --fail --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/apis/config.openshift.io/v1/featuregates" &> /dev/null; then
              break
            fi
            echo "Waiting for access to featuregates resource"
            sleep 2
          done

          exec /usr/bin/cluster-image-registry-operator \
            --files="/etc/secrets/tls.crt" \
            --files="/etc/secrets/tls.key"
        command:
        - /bin/bash
        env:
        - name: RELEASE_VERSION
          value: 4.18.0
        - name: WATCH_NAMESPACE
          value: openshift-image-registry
        - name: OPERATOR_NAME
          value: cluster-image-registry-operator
        - name: OPERATOR_IMAGE
          value: cluster-image-registry-operator
        - name: IMAGE
          value: docker-registry
        - name: IMAGE_PRUNER
          value: cli
        - name: AZURE_ENVIRONMENT_FILEPATH
          value: /tmp/azurestackcloud.json
        - name: OPERATOR_IMAGE_VERSION
          value: 4.18.0
        image: cluster-image-registry-operator
        imagePullPolicy: IfNotPresent
        name: cluster-image-registry-operator
        ports:
        - containerPort: 60000
          name: metrics
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/certificate/ca
          name: ca-bundle
        - mountPath: /etc/secrets
          name: serving-cert
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: apiserver-token
        - mountPath: /tmp
          name: tmp-dir
      - args:
        - --token-audience=
        - --service-account-namespace=openshift-image-registry
        - --service-account-name=cluster-image-registry-operator
        - --token-file=/var/run/secrets/openshift/serviceaccount/token
        - --kubeconfig=/etc/kubernetes/kubeconfig
        command:
        - /usr/bin/control-plane-operator
        - token-minter
        image: token-minter
        imagePullPolicy: IfNotPresent
        name: apiserver-token-minter
        resources:
          requests:
            cpu: 10m
            memory: 30Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/secrets/openshift/serviceaccount
          name: apiserver-token
        - mountPath: /etc/kubernetes
          name: kubeconfig
        - mountPath: /tmp
          name: tmp-dir
      priorityClassName: hypershift-control-plane
      tolerations:
      - effect: NoSchedule
        key: hypershift.openshift.io/control-plane
        operator: Equal
        value: "true"
      - effect: NoSchedule
        key: hypershift.openshift.io/cluster
        operator: Equal
        value: hcp-namespace
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 416
          secretName: cluster-image-registry-operator
      - name: kubeconfig
        secret:
          defaultMode: 416
          secretName: service-network-admin-kubeconfig
      - name: ca-bundle
        secret:
          defaultMode: 416
          secretName: root-ca
      - emptyDir:
          medium: Memory
        name: apiserver-token
      - emptyDir: {}
        name: tmp-dir
status: {}
