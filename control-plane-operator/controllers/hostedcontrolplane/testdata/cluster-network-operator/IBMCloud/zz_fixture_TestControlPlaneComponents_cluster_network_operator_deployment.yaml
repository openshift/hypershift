apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
  name: cluster-network-operator
  namespace: hcp-namespace
  ownerReferences:
  - apiVersion: hypershift.openshift.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: HostedControlPlane
    name: hcp
    uid: ""
  resourceVersion: "1"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      name: cluster-network-operator
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: configs,client-token,tmp-dir
        component.hypershift.openshift.io/config-hash: 87ecf31a
        hypershift.openshift.io/release-image: quay.io/openshift-release-dev/ocp-release:4.16.10-x86_64
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        app: cluster-network-operator
        hypershift.openshift.io/control-plane-component: cluster-network-operator
        hypershift.openshift.io/hosted-control-plane: hcp-namespace
        hypershift.openshift.io/need-management-kas-access: "true"
        name: cluster-network-operator
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/control-plane
                operator: In
                values:
                - "true"
            weight: 50
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/cluster
                operator: In
                values:
                - hcp-namespace
            weight: 100
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  hypershift.openshift.io/hosted-control-plane: hcp-namespace
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - start
        - --listen=0.0.0.0:9104
        - --kubeconfig=/configs/hosted
        - --namespace=openshift-network-operator
        - --extra-clusters=management=/configs/management
        command:
        - /usr/bin/cluster-network-operator
        env:
        - name: HYPERSHIFT
          value: "true"
        - name: CA_CONFIG_MAP
          value: root-ca
        - name: CA_CONFIG_MAP_KEY
          value: ca.crt
        - name: OVN_NB_RAFT_ELECTION_TIMER
          value: "10"
        - name: OVN_SB_RAFT_ELECTION_TIMER
          value: "16"
        - name: OVN_NORTHD_PROBE_INTERVAL
          value: "5000"
        - name: OVN_CONTROLLER_INACTIVITY_PROBE
          value: "180000"
        - name: OVN_NB_INACTIVITY_PROBE
          value: "60000"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTED_CLUSTER_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: HOSTED_CLUSTER_NAME
          value: hcp
        - name: TOKEN_AUDIENCE
        - name: RELEASE_VERSION
          value: 4.18.0
        - name: OPENSHIFT_RELEASE_IMAGE
          value: quay.io/openshift-release-dev/ocp-release:4.16.10-x86_64
        - name: APISERVER_OVERRIDE_HOST
          value: 1.2.3.4
        - name: APISERVER_OVERRIDE_PORT
          value: "2040"
        - name: MULTUS_ADMISSION_CONTROLLER_IMAGE
          value: multus-admission-controller
        - name: OVN_CONTROL_PLANE_IMAGE
          value: ovn-kubernetes
        - name: CLOUD_NETWORK_CONFIG_CONTROLLER_IMAGE
          value: cloud-network-config-controller
        - name: TOKEN_MINTER_IMAGE
          value: token-minter
        - name: CLI_CONTROL_PLANE_IMAGE
          value: cli
        - name: SOCKS5_PROXY_IMAGE
          value: socks5-proxy
        - name: KUBE_PROXY_IMAGE
          value: kube-proxy
        - name: KUBE_RBAC_PROXY_IMAGE
          value: kube-rbac-proxy
        - name: MULTUS_IMAGE
          value: multus-cni
        - name: CNI_PLUGINS_IMAGE
          value: container-networking-plugins
        - name: BOND_CNI_PLUGIN_IMAGE
          value: network-interface-bond-cni
        - name: WHEREABOUTS_CNI_IMAGE
          value: multus-whereabouts-ipam-cni
        - name: ROUTE_OVERRRIDE_CNI_IMAGE
          value: multus-route-override-cni
        - name: MULTUS_NETWORKPOLICY_IMAGE
          value: multus-networkpolicy
        - name: OVN_IMAGE
          value: ovn-kubernetes
        - name: EGRESS_ROUTER_CNI_IMAGE
          value: egress-router-cni
        - name: NETWORK_METRICS_DAEMON_IMAGE
          value: network-metrics-daemon
        - name: NETWORK_CHECK_SOURCE_IMAGE
          value: cluster-network-operator
        - name: NETWORK_CHECK_TARGET_IMAGE
          value: cluster-network-operator
        - name: NETWORKING_CONSOLE_PLUGIN_IMAGE
          value: networking-console-plugin
        - name: CLI_IMAGE
          value: cli
        - name: FRR_K8S_IMAGE
          value: metallb-frr
        - name: PROXY_INTERNAL_APISERVER_ADDRESS
          value: "true"
        image: cluster-network-operator
        imagePullPolicy: IfNotPresent
        name: cluster-network-operator
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /configs
          name: configs
        - mountPath: /var/run/secrets/kubernetes.io/hosted
          name: client-token
        - mountPath: /etc/certificate/ca
          name: ca-bundle
        - mountPath: /tmp
          name: tmp-dir
      - args:
        - --service-account-namespace
        - openshift-network-operator
        - --service-account-name
        - cluster-network-operator
        - --token-file
        - /var/client-token/token
        - --kubeconfig
        - /etc/kubernetes/kubeconfig
        - --token-audience
        - ""
        command:
        - /usr/bin/control-plane-operator
        - token-minter
        image: token-minter
        imagePullPolicy: IfNotPresent
        name: client-token-minter
        resources:
          requests:
            cpu: 10m
            memory: 30Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/client-token
          name: client-token
        - mountPath: /etc/kubernetes
          name: hosted-etc-kube
        - mountPath: /tmp
          name: tmp-dir
      - args:
        - run
        - --disable-resolver=true
        command:
        - /usr/bin/control-plane-operator
        - konnectivity-socks5-proxy
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/secrets/kubeconfig/kubeconfig
        image: controlplane-operator
        name: konnectivity-proxy-socks5
        resources:
          requests:
            cpu: 10m
            memory: 30Mi
        securityContext:
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/kubernetes/secrets/kubeconfig
          name: hosted-etc-kube
        - mountPath: /etc/konnectivity/proxy-client
          name: konnectivity-proxy-cert
        - mountPath: /etc/konnectivity/proxy-ca
          name: konnectivity-proxy-ca
        - mountPath: /tmp
          name: tmp-dir
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /usr/bin/control-plane-operator
        - availability-prober
        - --target
        - https://kube-apiserver:2040/readyz
        - --kubeconfig=/var/kubeconfig/kubeconfig
        - --required-api=operator.openshift.io,v1,Network
        - --required-api=network.operator.openshift.io,v1,EgressRouter
        - --required-api=network.operator.openshift.io,v1,OperatorPKI
        - --wait-for-infrastructure-resource
        - --wait-for-cluster-rolebinding=cluster-network-operator
        image: availability-prober
        imagePullPolicy: IfNotPresent
        name: availability-prober
        resources: {}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/kubeconfig
          name: hosted-etc-kube
      - args:
        - --kubeconfig=/etc/hosted-kubernetes/kubeconfig
        - -n=openshift-network-operator
        - delete
        - --ignore-not-found=true
        - deployment
        - network-operator
        command:
        - /usr/bin/kubectl
        image: cli
        imagePullPolicy: IfNotPresent
        name: remove-old-cno
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hosted-kubernetes
          name: hosted-etc-kube
      - args:
        - --service-account-namespace
        - openshift-network-operator
        - --service-account-name
        - cluster-network-operator
        - --token-file
        - /var/client-token/token
        - --kubeconfig
        - /etc/kubernetes/kubeconfig
        - --oneshot
        - --token-audience
        - ""
        command:
        - /usr/bin/control-plane-operator
        - token-minter
        image: token-minter
        imagePullPolicy: IfNotPresent
        name: init-client-token-minter
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/client-token
          name: client-token
        - mountPath: /etc/kubernetes
          name: hosted-etc-kube
      - args:
        - -c
        - |
          #!/bin/bash
          set -xeuo pipefail

          kc=/configs/management
          kubectl --kubeconfig $kc config set clusters.default.server "https://[${KUBERNETES_SERVICE_HOST}]:${KUBERNETES_SERVICE_PORT}"
          kubectl --kubeconfig $kc config set clusters.default.certificate-authority /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          kubectl --kubeconfig $kc config set users.admin.tokenFile /var/run/secrets/kubernetes.io/serviceaccount/token
          kubectl --kubeconfig $kc config set contexts.default.cluster default
          kubectl --kubeconfig $kc config set contexts.default.user admin
          kubectl --kubeconfig $kc config set contexts.default.namespace $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
          kubectl --kubeconfig $kc config use-context default


          kc=/configs/hosted
          kubectl --kubeconfig $kc config set clusters.default.server "https://kube-apiserver:${KUBE_APISERVER_SERVICE_PORT}"
          kubectl --kubeconfig $kc config set clusters.default.certificate-authority /etc/certificate/ca/ca.crt
          kubectl --kubeconfig $kc config set users.admin.tokenFile /var/run/secrets/kubernetes.io/hosted/token
          kubectl --kubeconfig $kc config set contexts.default.cluster default
          kubectl --kubeconfig $kc config set contexts.default.user admin
          kubectl --kubeconfig $kc config set contexts.default.namespace openshift-network-operator
          kubectl --kubeconfig $kc config use-context default
        command:
        - /bin/bash
        image: cli
        imagePullPolicy: IfNotPresent
        name: rewrite-config
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hosted-kubernetes
          name: hosted-etc-kube
        - mountPath: /configs
          name: configs
        - mountPath: /var/run/secrets/kubernetes.io/hosted
          name: client-token
        - mountPath: /etc/certificate/ca
          name: ca-bundle
      priorityClassName: hypershift-control-plane
      serviceAccount: cluster-network-operator
      serviceAccountName: cluster-network-operator
      tolerations:
      - effect: NoSchedule
        key: hypershift.openshift.io/control-plane
        operator: Equal
        value: "true"
      - effect: NoSchedule
        key: hypershift.openshift.io/cluster
        operator: Equal
        value: hcp-namespace
      volumes:
      - name: hosted-etc-kube
        secret:
          defaultMode: 416
          secretName: service-network-admin-kubeconfig
      - emptyDir: {}
        name: configs
      - emptyDir: {}
        name: client-token
      - name: ca-bundle
        secret:
          defaultMode: 416
          secretName: root-ca
      - name: konnectivity-proxy-cert
        secret:
          defaultMode: 416
          secretName: konnectivity-client
      - configMap:
          name: konnectivity-ca-bundle
        name: konnectivity-proxy-ca
      - emptyDir: {}
        name: tmp-dir
status: {}
