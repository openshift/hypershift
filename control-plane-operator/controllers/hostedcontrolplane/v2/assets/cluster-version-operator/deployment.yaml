apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-version-operator
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: cluster-version-operator
      k8s-app: cluster-version-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cluster-version-operator
        k8s-app: cluster-version-operator
    spec:
      containers:
      - args:
        - start
        - --release-image
        - $(RELEASE_IMAGE)
        - --enable-auto-update=false
        - --kubeconfig
        - /etc/openshift/kubeconfig/kubeconfig
        - --listen=0.0.0.0:8443
        - --serving-cert-file=/etc/kubernetes/certs/server/tls.crt
        - --serving-key-file=/etc/kubernetes/certs/server/tls.key
        - --hypershift=true
        - --v=4
        command:
        - cluster-version-operator
        env:
        - name: PAYLOAD_OVERRIDE
          value: /var/payload
        - name: CLUSTER_PROFILE
          value: ibm-cloud-managed
        - name: RELEASE_IMAGE
          value: ""
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: cluster-version-operator
        imagePullPolicy: IfNotPresent
        name: cluster-version-operator
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 20m
            memory: 70Mi
        volumeMounts:
        - mountPath: /etc/openshift/kubeconfig
          name: kubeconfig
        - mountPath: /var/payload
          name: payload
        - mountPath: /etc/kubernetes/certs/server
          name: server-crt
        - mountPath: /etc/cvo/updatepayloads
          name: update-payloads
      initContainers:
      - args:
        - -c
        - ""
        command:
        - /bin/bash
        image: cluster-version-operator
        imagePullPolicy: IfNotPresent
        name: prepare-payload
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        volumeMounts:
        - mountPath: /var/payload
          name: payload
      - args:
          - -c
          - ""
        command:
        - /bin/bash
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/kubeconfig
        image: cli
        imagePullPolicy: IfNotPresent
        name: bootstrap
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: kubeconfig
        - mountPath: /var/payload
          name: payload
      volumes:
      - emptyDir: {}
        name: payload
      - name: kubeconfig
        secret:
          defaultMode: 416
          secretName: service-network-admin-kubeconfig
      - emptyDir: {}
        name: update-payloads
      - name: server-crt
        secret:
          defaultMode: 416
          secretName: cvo-server
