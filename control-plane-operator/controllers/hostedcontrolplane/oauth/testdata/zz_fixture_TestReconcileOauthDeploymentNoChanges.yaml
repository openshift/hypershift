apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/managed-by: control-plane-operator
  name: oauth-openshift
  namespace: test
  ownerReferences:
  - apiVersion: hypershift.openshift.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: HostedControlPlane
    name: name
    uid: ""
spec:
  minReadySeconds: 60
  replicas: 0
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: oauth-openshift
      hypershift.openshift.io/control-plane-component: oauth-openshift
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: logs
        oauth.hypershift.openshift.io/config-hash: 24346e1b50066607059af36e3b684b24
      creationTimestamp: null
      labels:
        app: oauth-openshift
        hypershift.openshift.io/control-plane-component: oauth-openshift
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - osinserver
        - --config=/etc/kubernetes/config/config.yaml
        - --audit-log-format=json
        - --audit-log-maxbackup=1
        - --audit-log-maxsize=10
        - --audit-log-path=/var/run/kubernetes/audit.log
        - --audit-policy-file=/etc/kubernetes/audit-config/policy.yaml
        - --audit-webhook-config-file=/etc/kubernetes/auditwebhook/webhook-kubeconfig
        - --audit-webhook-mode=batch
        env:
        - name: HTTP_PROXY
          value: http://127.0.0.1:8092
        - name: HTTPS_PROXY
          value: http://127.0.0.1:8092
        - name: ALL_PROXY
          value: socks5://127.0.0.1:8090
        - name: NO_PROXY
        image: oauthImage
        name: oauth-server
        resources: {}
        volumeMounts:
        - mountPath: /etc/kubernetes/audit-config
          name: audit-config
        - mountPath: /etc/kubernetes/secrets/templates/error
          name: error-template
        - mountPath: /etc/kubernetes/secrets/svc-kubeconfig
          name: kubeconfig
        - mountPath: /etc/kubernetes/secrets/templates/login
          name: login-template
        - mountPath: /var/run/kubernetes
          name: logs
        - mountPath: /etc/kubernetes/certs/master-ca
          name: master-ca-bundle
        - mountPath: /etc/kubernetes/config
          name: oauth-config
        - mountPath: /etc/kubernetes/secrets/templates/providers
          name: providers-template
        - mountPath: /etc/kubernetes/certs/serving-cert
          name: serving-cert
        - mountPath: /etc/kubernetes/secrets/session
          name: session-secret
        - mountPath: /etc/kubernetes/auditwebhook
          name: oauth-audit-webhook
        workingDir: /var/run/kubernetes
      - args:
        - run
        - --resolve-from-guest-cluster-dns=true
        - --resolve-from-management-cluster-dns=true
        command:
        - /usr/bin/control-plane-operator
        - konnectivity-socks5-proxy
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/kubeconfig
        image: test-socks-5-proxy-image
        name: socks5-proxy
        resources: {}
        volumeMounts:
        - mountPath: /etc/konnectivity/proxy-ca
          name: konnectivity-proxy-ca
        - mountPath: /etc/konnectivity/proxy-client
          name: konnectivity-proxy-cert
        - mountPath: /etc/kubernetes
          name: kubeconfig
      - args:
        - run
        - --serving-port=8092
        - --connect-directly-to-cloud-apis
        command:
        - /usr/bin/control-plane-operator
        - konnectivity-https-proxy
        env:
        - name: KUBECONFIG
          value: /etc/kubernetes/kubeconfig
        image: test-socks-5-proxy-image
        name: http-proxy
        resources: {}
        volumeMounts:
        - mountPath: /etc/konnectivity/proxy-ca
          name: konnectivity-proxy-ca
        - mountPath: /etc/konnectivity/proxy-client
          name: konnectivity-proxy-cert
        - mountPath: /etc/kubernetes
          name: kubeconfig
        - mountPath: /etc/pki/tls/certs/managed-trust-bundle.crt
          name: managed-trust-bundle
          subPath: managed-trust-bundle.crt
      - args:
        - -c
        - "\nset -o errexit\nset -o nounset\nset -o pipefail\n\nfunction cleanup()
          {\n\tpkill -P $$$\n\twait\n\texit\n}\ntrap cleanup SIGTERM\n\n/usr/bin/tail
          -c+1 -F /var/run/kubernetes/audit.log &\nwait $!\n"
        command:
        - /bin/bash
        image: oauthImage
        imagePullPolicy: IfNotPresent
        name: audit-logs
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
        volumeMounts:
        - mountPath: /var/run/kubernetes
          name: logs
      initContainers:
      - command:
        - /usr/bin/control-plane-operator
        - availability-prober
        - --target
        - https://kube-apiserver:2040/readyz
        image: test-availability-image
        imagePullPolicy: IfNotPresent
        name: availability-prober
        resources: {}
      volumes:
      - configMap:
          name: oauth-openshift
        name: oauth-config
      - name: kubeconfig
        secret:
          defaultMode: 416
          secretName: service-network-admin-kubeconfig
      - name: serving-cert
        secret:
          defaultMode: 416
          secretName: oauth-server-crt
      - name: session-secret
        secret:
          defaultMode: 416
          secretName: oauth-openshift-session
      - name: error-template
        secret:
          defaultMode: 416
          secretName: oauth-openshift-default-error-template
      - name: login-template
        secret:
          defaultMode: 416
          secretName: oauth-openshift-default-login-template
      - name: providers-template
        secret:
          defaultMode: 416
          secretName: oauth-openshift-default-provider-selection-template
      - emptyDir: {}
        name: logs
      - configMap:
          name: oauth-master-ca-bundle
        name: master-ca-bundle
      - configMap:
          name: oauth-openshift-audit
        name: audit-config
      - name: konnectivity-proxy-cert
        secret:
          defaultMode: 416
          secretName: konnectivity-client
      - configMap:
          defaultMode: 416
          name: konnectivity-ca-bundle
        name: konnectivity-proxy-ca
      - configMap:
          defaultMode: 416
          items:
          - key: ca-bundle.crt
            path: managed-trust-bundle.crt
          name: trusted-ca-bundle-managed
          optional: true
        name: managed-trust-bundle
      - name: oauth-audit-webhook
        secret:
          secretName: test-webhook-audit-secret
status: {}
